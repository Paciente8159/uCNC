ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"planner.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.planner_buffer_is_empty,"ax",%progbits
  16              		.align	1
  17              		.global	planner_buffer_is_empty
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	planner_buffer_is_empty:
  25              	.LFB69:
  26              		.file 1 "../../planner.c"
   1:../../planner.c **** /*
   2:../../planner.c **** 	Name: planner.c
   3:../../planner.c **** 	Description: Chain planner for linear motions and acceleration/deacceleration profiles.
   4:../../planner.c ****         It uses a similar algorithm to Grbl.
   5:../../planner.c **** 
   6:../../planner.c **** 	Copyright: Copyright (c) João Martins
   7:../../planner.c **** 	Author: João Martins
   8:../../planner.c **** 	Date: 24/09/2019
   9:../../planner.c **** 
  10:../../planner.c **** 	µCNC is free software: you can redistribute it and/or modify
  11:../../planner.c **** 	it under the terms of the GNU General Public License as published by
  12:../../planner.c **** 	the Free Software Foundation, either version 3 of the License, or
  13:../../planner.c **** 	(at your option) any later version. Please see <http://www.gnu.org/licenses/>
  14:../../planner.c **** 
  15:../../planner.c **** 	µCNC is distributed WITHOUT ANY WARRANTY;
  16:../../planner.c **** 	Also without the implied warranty of	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  17:../../planner.c **** 	See the	GNU General Public License for more details.
  18:../../planner.c **** */
  19:../../planner.c **** 
  20:../../planner.c **** #include <stdint.h>
  21:../../planner.c **** #include <string.h>
  22:../../planner.c **** #include <math.h>
  23:../../planner.c **** #include <float.h>
  24:../../planner.c **** #include "config.h"
  25:../../planner.c **** #include "grbl_interface.h"
  26:../../planner.c **** #include "mcu.h"
  27:../../planner.c **** #include "settings.h"
  28:../../planner.c **** #include "planner.h"
  29:../../planner.c **** #include "interpolator.h"
  30:../../planner.c **** #include "utils.h"
  31:../../planner.c **** #include "io_control.h"
  32:../../planner.c **** #include "cnc.h"
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 2


  33:../../planner.c **** 
  34:../../planner.c **** typedef struct
  35:../../planner.c **** {
  36:../../planner.c ****     uint8_t feed_override;
  37:../../planner.c ****     uint8_t rapid_feed_override;
  38:../../planner.c **** #ifdef USE_SPINDLE
  39:../../planner.c ****     uint8_t spindle_override;
  40:../../planner.c **** #endif
  41:../../planner.c ****     bool overrides_enabled;
  42:../../planner.c **** 
  43:../../planner.c **** } planner_overrides_t;
  44:../../planner.c **** 
  45:../../planner.c **** static float planner_coord[AXIS_COUNT];
  46:../../planner.c **** #ifdef USE_SPINDLE
  47:../../planner.c **** static int16_t planner_spindle;
  48:../../planner.c **** #endif
  49:../../planner.c **** static planner_block_t planner_data[PLANNER_BUFFER_SIZE];
  50:../../planner.c **** static uint8_t planner_data_write;
  51:../../planner.c **** static uint8_t planner_data_read;
  52:../../planner.c **** static uint8_t planner_data_slots;
  53:../../planner.c **** static planner_overrides_t planner_overrides;
  54:../../planner.c **** static uint8_t planner_ovr_counter;
  55:../../planner.c **** 
  56:../../planner.c **** /*
  57:../../planner.c **** 	Planner buffer functions
  58:../../planner.c **** */
  59:../../planner.c **** static inline void planner_buffer_read(void)
  60:../../planner.c **** {
  61:../../planner.c ****     planner_data_slots++;
  62:../../planner.c ****     if (++planner_data_read == PLANNER_BUFFER_SIZE)
  63:../../planner.c ****     {
  64:../../planner.c ****         planner_data_read = 0;
  65:../../planner.c ****     }
  66:../../planner.c **** }
  67:../../planner.c **** 
  68:../../planner.c **** static inline void planner_buffer_write(void)
  69:../../planner.c **** {
  70:../../planner.c ****     planner_data_slots--;
  71:../../planner.c ****     if (++planner_data_write == PLANNER_BUFFER_SIZE)
  72:../../planner.c ****     {
  73:../../planner.c ****         planner_data_write = 0;
  74:../../planner.c ****     }
  75:../../planner.c **** }
  76:../../planner.c **** 
  77:../../planner.c **** static inline uint8_t planner_buffer_next(uint8_t index)
  78:../../planner.c **** {
  79:../../planner.c ****     if (++index == PLANNER_BUFFER_SIZE)
  80:../../planner.c ****     {
  81:../../planner.c ****         index = 0;
  82:../../planner.c ****     }
  83:../../planner.c **** 
  84:../../planner.c ****     return index;
  85:../../planner.c **** }
  86:../../planner.c **** 
  87:../../planner.c **** static inline uint8_t planner_buffer_prev(uint8_t index)
  88:../../planner.c **** {
  89:../../planner.c ****     if (index == 0)
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 3


  90:../../planner.c ****     {
  91:../../planner.c ****         index = PLANNER_BUFFER_SIZE;
  92:../../planner.c ****     }
  93:../../planner.c **** 
  94:../../planner.c ****     return --index;
  95:../../planner.c **** }
  96:../../planner.c **** 
  97:../../planner.c **** bool planner_buffer_is_empty(void)
  98:../../planner.c **** {
  27              		.loc 1 98 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  99:../../planner.c ****     return (planner_data_slots == PLANNER_BUFFER_SIZE);
  32              		.loc 1 99 5 view .LVU1
  33              		.loc 1 99 32 is_stmt 0 view .LVU2
  34 0000 034B     		ldr	r3, .L2
  35 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 100:../../planner.c **** }
  36              		.loc 1 100 1 view .LVU3
  37 0004 0F28     		cmp	r0, #15
  38 0006 14BF     		ite	ne
  39 0008 0020     		movne	r0, #0
  40 000a 0120     		moveq	r0, #1
  41 000c 7047     		bx	lr
  42              	.L3:
  43 000e 00BF     		.align	2
  44              	.L2:
  45 0010 00000000 		.word	.LANCHOR0
  46              		.cfi_endproc
  47              	.LFE69:
  49              		.section	.text.planner_buffer_is_full,"ax",%progbits
  50              		.align	1
  51              		.global	planner_buffer_is_full
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  55              		.fpu softvfp
  57              	planner_buffer_is_full:
  58              	.LFB70:
 101:../../planner.c **** 
 102:../../planner.c **** bool planner_buffer_is_full(void)
 103:../../planner.c **** {
  59              		.loc 1 103 1 is_stmt 1 view -0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
 104:../../planner.c ****     return (planner_data_slots == 0);
  64              		.loc 1 104 5 view .LVU5
  65              		.loc 1 104 32 is_stmt 0 view .LVU6
  66 0000 024B     		ldr	r3, .L5
  67 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 105:../../planner.c **** }
  68              		.loc 1 105 1 view .LVU7
  69 0004 B0FA80F0 		clz	r0, r0
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 4


  70 0008 4009     		lsrs	r0, r0, #5
  71 000a 7047     		bx	lr
  72              	.L6:
  73              		.align	2
  74              	.L5:
  75 000c 00000000 		.word	.LANCHOR0
  76              		.cfi_endproc
  77              	.LFE70:
  79              		.section	.text.planner_init,"ax",%progbits
  80              		.align	1
  81              		.global	planner_init
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu softvfp
  87              	planner_init:
  88              	.LFB72:
 106:../../planner.c **** 
 107:../../planner.c **** static inline void planner_buffer_clear(void)
 108:../../planner.c **** {
 109:../../planner.c ****     planner_data_write = 0;
 110:../../planner.c ****     planner_data_read = 0;
 111:../../planner.c ****     planner_data_slots = PLANNER_BUFFER_SIZE;
 112:../../planner.c **** #ifdef FORCE_GLOBALS_TO_0
 113:../../planner.c ****     memset(planner_data, 0, sizeof(planner_data));
 114:../../planner.c **** #endif
 115:../../planner.c **** }
 116:../../planner.c **** 
 117:../../planner.c **** void planner_init(void)
 118:../../planner.c **** {
  89              		.loc 1 118 1 is_stmt 1 view -0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
 119:../../planner.c **** #ifdef FORCE_GLOBALS_TO_0
 120:../../planner.c ****     memset(&planner_coord, 0, AXIS_COUNT * sizeof(float));
 121:../../planner.c ****     //resets buffer
 122:../../planner.c ****     memset(&planner_data, 0, sizeof(planner_data));
 123:../../planner.c **** #endif
 124:../../planner.c ****     planner_buffer_clear();
  94              		.loc 1 124 5 view .LVU9
  95              	.LBB28:
  96              	.LBI28:
 107:../../planner.c **** {
  97              		.loc 1 107 20 view .LVU10
  98              	.LBB29:
 109:../../planner.c ****     planner_data_read = 0;
  99              		.loc 1 109 5 view .LVU11
 109:../../planner.c ****     planner_data_read = 0;
 100              		.loc 1 109 24 is_stmt 0 view .LVU12
 101 0000 0023     		movs	r3, #0
 102 0002 074A     		ldr	r2, .L8
 103 0004 1370     		strb	r3, [r2]
 110:../../planner.c ****     planner_data_slots = PLANNER_BUFFER_SIZE;
 104              		.loc 1 110 5 is_stmt 1 view .LVU13
 110:../../planner.c ****     planner_data_slots = PLANNER_BUFFER_SIZE;
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 5


 105              		.loc 1 110 23 is_stmt 0 view .LVU14
 106 0006 074A     		ldr	r2, .L8+4
 107 0008 1370     		strb	r3, [r2]
 111:../../planner.c **** #ifdef FORCE_GLOBALS_TO_0
 108              		.loc 1 111 5 is_stmt 1 view .LVU15
 111:../../planner.c **** #ifdef FORCE_GLOBALS_TO_0
 109              		.loc 1 111 24 is_stmt 0 view .LVU16
 110 000a 074B     		ldr	r3, .L8+8
 111 000c 0F22     		movs	r2, #15
 112 000e 1A70     		strb	r2, [r3]
 113              	.LBE29:
 114              	.LBE28:
 125:../../planner.c ****     planner_overrides.overrides_enabled = true;
 115              		.loc 1 125 5 is_stmt 1 view .LVU17
 116              		.loc 1 125 41 is_stmt 0 view .LVU18
 117 0010 064B     		ldr	r3, .L8+12
 118 0012 0122     		movs	r2, #1
 119 0014 9A70     		strb	r2, [r3, #2]
 126:../../planner.c ****     planner_overrides.feed_override = 100;
 120              		.loc 1 126 5 is_stmt 1 view .LVU19
 121              		.loc 1 126 37 is_stmt 0 view .LVU20
 122 0016 6422     		movs	r2, #100
 123 0018 1A70     		strb	r2, [r3]
 127:../../planner.c ****     planner_overrides.rapid_feed_override = 100;
 124              		.loc 1 127 5 is_stmt 1 view .LVU21
 125              		.loc 1 127 43 is_stmt 0 view .LVU22
 126 001a 5A70     		strb	r2, [r3, #1]
 128:../../planner.c **** #ifdef USE_SPINDLE
 129:../../planner.c ****     planner_overrides.spindle_override = 100;
 130:../../planner.c ****     planner_spindle = 0;
 131:../../planner.c **** #endif
 132:../../planner.c **** }
 127              		.loc 1 132 1 view .LVU23
 128 001c 7047     		bx	lr
 129              	.L9:
 130 001e 00BF     		.align	2
 131              	.L8:
 132 0020 00000000 		.word	.LANCHOR1
 133 0024 00000000 		.word	.LANCHOR2
 134 0028 00000000 		.word	.LANCHOR0
 135 002c 00000000 		.word	.LANCHOR3
 136              		.cfi_endproc
 137              	.LFE72:
 139              		.section	.text.planner_get_block,"ax",%progbits
 140              		.align	1
 141              		.global	planner_get_block
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu softvfp
 147              	planner_get_block:
 148              	.LFB74:
 133:../../planner.c **** 
 134:../../planner.c **** void planner_clear(void)
 135:../../planner.c **** {
 136:../../planner.c ****     //clears all motions stored in the buffer
 137:../../planner.c ****     planner_buffer_clear();
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 6


 138:../../planner.c **** #ifdef USE_SPINDLE
 139:../../planner.c ****     planner_spindle = 0;
 140:../../planner.c **** #endif
 141:../../planner.c ****     //resyncs position with interpolator
 142:../../planner.c ****     planner_resync_position();
 143:../../planner.c **** }
 144:../../planner.c **** 
 145:../../planner.c **** planner_block_t *planner_get_block(void)
 146:../../planner.c **** {
 149              		.loc 1 146 1 is_stmt 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 147:../../planner.c ****     return &planner_data[planner_data_read];
 154              		.loc 1 147 5 view .LVU25
 155              		.loc 1 147 25 is_stmt 0 view .LVU26
 156 0000 034B     		ldr	r3, .L11
 157 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 158              		.loc 1 147 12 view .LVU27
 159 0004 03EB4303 		add	r3, r3, r3, lsl #1
 160 0008 1A01     		lsls	r2, r3, #4
 148:../../planner.c **** }
 161              		.loc 1 148 1 view .LVU28
 162 000a 0248     		ldr	r0, .L11+4
 163 000c 1044     		add	r0, r0, r2
 164 000e 7047     		bx	lr
 165              	.L12:
 166              		.align	2
 167              	.L11:
 168 0010 00000000 		.word	.LANCHOR2
 169 0014 00000000 		.word	.LANCHOR4
 170              		.cfi_endproc
 171              	.LFE74:
 173              		.global	__aeabi_i2f
 174              		.global	__aeabi_fmul
 175              		.global	__aeabi_fcmplt
 176              		.section	.text.planner_get_block_exit_speed_sqr,"ax",%progbits
 177              		.align	1
 178              		.global	planner_get_block_exit_speed_sqr
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 182              		.fpu softvfp
 184              	planner_get_block_exit_speed_sqr:
 185              	.LFB75:
 149:../../planner.c **** 
 150:../../planner.c **** float planner_get_block_exit_speed_sqr(void)
 151:../../planner.c **** {
 186              		.loc 1 151 1 is_stmt 1 view -0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190 0000 38B5     		push	{r3, r4, r5, lr}
 191              	.LCFI0:
 192              		.cfi_def_cfa_offset 16
 193              		.cfi_offset 3, -16
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 7


 194              		.cfi_offset 4, -12
 195              		.cfi_offset 5, -8
 196              		.cfi_offset 14, -4
 152:../../planner.c ****     //only one block in the buffer (exit speed is 0)
 153:../../planner.c ****     if (planner_data_slots >= (PLANNER_BUFFER_SIZE - 1))
 197              		.loc 1 153 5 view .LVU30
 198              		.loc 1 153 28 is_stmt 0 view .LVU31
 199 0002 224B     		ldr	r3, .L24
 200 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 201              		.loc 1 153 8 view .LVU32
 202 0006 0D2B     		cmp	r3, #13
 203 0008 3CD8     		bhi	.L18
 154:../../planner.c ****         return 0;
 155:../../planner.c **** 
 156:../../planner.c ****     //exit speed = next block entry speed
 157:../../planner.c ****     uint8_t next = planner_buffer_next(planner_data_read);
 204              		.loc 1 157 5 is_stmt 1 view .LVU33
 205              		.loc 1 157 20 is_stmt 0 view .LVU34
 206 000a 214B     		ldr	r3, .L24+4
 207 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 208              	.LVL0:
 209              	.LBB30:
 210              	.LBI30:
  77:../../planner.c **** {
 211              		.loc 1 77 23 is_stmt 1 view .LVU35
 212              	.LBB31:
  79:../../planner.c ****     {
 213              		.loc 1 79 5 view .LVU36
  79:../../planner.c ****     {
 214              		.loc 1 79 8 is_stmt 0 view .LVU37
 215 000e 0133     		adds	r3, r3, #1
 216              	.LVL1:
  79:../../planner.c ****     {
 217              		.loc 1 79 8 view .LVU38
 218 0010 DBB2     		uxtb	r3, r3
 219              	.LVL2:
  79:../../planner.c ****     {
 220              		.loc 1 79 8 view .LVU39
 221 0012 0F2B     		cmp	r3, #15
 222 0014 34D0     		beq	.L23
 223              	.LVL3:
 224              	.L15:
  84:../../planner.c **** }
 225              		.loc 1 84 5 is_stmt 1 view .LVU40
  84:../../planner.c **** }
 226              		.loc 1 84 5 is_stmt 0 view .LVU41
 227              	.LBE31:
 228              	.LBE30:
 158:../../planner.c ****     float exit_speed_sqr = planner_data[next].entry_feed_sqr;
 229              		.loc 1 158 5 is_stmt 1 view .LVU42
 230              		.loc 1 158 46 is_stmt 0 view .LVU43
 231 0016 1D46     		mov	r5, r3
 232              		.loc 1 158 11 view .LVU44
 233 0018 03EB4303 		add	r3, r3, r3, lsl #1
 234              	.LVL4:
 235              		.loc 1 158 11 view .LVU45
 236 001c 1D4A     		ldr	r2, .L24+8
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 8


 237 001e 02EB0313 		add	r3, r2, r3, lsl #4
 238 0022 5C69     		ldr	r4, [r3, #20]	@ float
 239              	.LVL5:
 159:../../planner.c ****     if (!planner_overrides.overrides_enabled)
 240              		.loc 1 159 5 is_stmt 1 view .LVU46
 241              		.loc 1 159 27 is_stmt 0 view .LVU47
 242 0024 1C4B     		ldr	r3, .L24+12
 243 0026 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 244              		.loc 1 159 8 view .LVU48
 245 0028 6BB3     		cbz	r3, .L13
 160:../../planner.c ****     {
 161:../../planner.c ****         return exit_speed_sqr;
 162:../../planner.c ****     }
 163:../../planner.c **** 
 164:../../planner.c ****     if (planner_overrides.feed_override != 100)
 246              		.loc 1 164 5 is_stmt 1 view .LVU49
 247              		.loc 1 164 26 is_stmt 0 view .LVU50
 248 002a 1B4B     		ldr	r3, .L24+12
 249 002c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 250              		.loc 1 164 8 view .LVU51
 251 002e 6428     		cmp	r0, #100
 252 0030 0AD0     		beq	.L16
 165:../../planner.c ****     {
 166:../../planner.c ****         exit_speed_sqr *= planner_overrides.feed_override * planner_overrides.feed_override;
 253              		.loc 1 166 9 is_stmt 1 view .LVU52
 254              		.loc 1 166 24 is_stmt 0 view .LVU53
 255 0032 00FB00F0 		mul	r0, r0, r0
 256 0036 FFF7FEFF 		bl	__aeabi_i2f
 257              	.LVL6:
 258 003a 2146     		mov	r1, r4
 259 003c FFF7FEFF 		bl	__aeabi_fmul
 260              	.LVL7:
 167:../../planner.c ****         exit_speed_sqr *= 0.0001f;
 261              		.loc 1 167 9 is_stmt 1 view .LVU54
 262              		.loc 1 167 24 is_stmt 0 view .LVU55
 263 0040 1649     		ldr	r1, .L24+16
 264 0042 FFF7FEFF 		bl	__aeabi_fmul
 265              	.LVL8:
 266              		.loc 1 167 24 view .LVU56
 267 0046 0446     		mov	r4, r0
 268              	.LVL9:
 269              	.L16:
 168:../../planner.c ****     }
 169:../../planner.c **** 
 170:../../planner.c ****     //if rapid overrides are active the feed must not exceed the rapid motion feed
 171:../../planner.c ****     if (planner_overrides.rapid_feed_override != 100)
 270              		.loc 1 171 5 is_stmt 1 view .LVU57
 271              		.loc 1 171 26 is_stmt 0 view .LVU58
 272 0048 134B     		ldr	r3, .L24+12
 273 004a 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 274              		.loc 1 171 8 view .LVU59
 275 004c 6428     		cmp	r0, #100
 276 004e 1AD0     		beq	.L13
 277              	.LBB33:
 172:../../planner.c ****     {
 173:../../planner.c ****         float rapid_feed_sqr = planner_data[next].rapid_feed_sqr;
 278              		.loc 1 173 9 is_stmt 1 view .LVU60
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 9


 279              		.loc 1 173 15 is_stmt 0 view .LVU61
 280 0050 05EB4505 		add	r5, r5, r5, lsl #1
 281 0054 0F4B     		ldr	r3, .L24+8
 282 0056 03EB0515 		add	r5, r3, r5, lsl #4
 283 005a 2D6A     		ldr	r5, [r5, #32]	@ float
 284              	.LVL10:
 174:../../planner.c ****         rapid_feed_sqr *= planner_overrides.rapid_feed_override * planner_overrides.rapid_feed_over
 285              		.loc 1 174 9 is_stmt 1 view .LVU62
 286              		.loc 1 174 24 is_stmt 0 view .LVU63
 287 005c 00FB00F0 		mul	r0, r0, r0
 288 0060 FFF7FEFF 		bl	__aeabi_i2f
 289              	.LVL11:
 290 0064 2946     		mov	r1, r5
 291 0066 FFF7FEFF 		bl	__aeabi_fmul
 292              	.LVL12:
 175:../../planner.c ****         rapid_feed_sqr *= 0.0001f;
 293              		.loc 1 175 9 is_stmt 1 view .LVU64
 294              		.loc 1 175 24 is_stmt 0 view .LVU65
 295 006a 0C49     		ldr	r1, .L24+16
 296 006c FFF7FEFF 		bl	__aeabi_fmul
 297              	.LVL13:
 298              		.loc 1 175 24 view .LVU66
 299 0070 0546     		mov	r5, r0
 300              	.LVL14:
 176:../../planner.c ****         exit_speed_sqr = MIN(exit_speed_sqr, rapid_feed_sqr);
 301              		.loc 1 176 9 is_stmt 1 view .LVU67
 302              		.loc 1 176 26 is_stmt 0 view .LVU68
 303 0072 0146     		mov	r1, r0
 304 0074 2046     		mov	r0, r4
 305              	.LVL15:
 306              		.loc 1 176 26 view .LVU69
 307 0076 FFF7FEFF 		bl	__aeabi_fcmplt
 308              	.LVL16:
 309              		.loc 1 176 26 view .LVU70
 310 007a 20B9     		cbnz	r0, .L13
 311 007c 2C46     		mov	r4, r5
 312              	.LVL17:
 313              		.loc 1 176 26 view .LVU71
 314 007e 02E0     		b	.L13
 315              	.LVL18:
 316              	.L23:
 317              		.loc 1 176 26 view .LVU72
 318              	.LBE33:
 319              	.LBB34:
 320              	.LBB32:
  81:../../planner.c ****     }
 321              		.loc 1 81 15 view .LVU73
 322 0080 0023     		movs	r3, #0
 323              	.LVL19:
  81:../../planner.c ****     }
 324              		.loc 1 81 15 view .LVU74
 325 0082 C8E7     		b	.L15
 326              	.LVL20:
 327              	.L18:
  81:../../planner.c ****     }
 328              		.loc 1 81 15 view .LVU75
 329              	.LBE32:
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 10


 330              	.LBE34:
 154:../../planner.c **** 
 331              		.loc 1 154 16 view .LVU76
 332 0084 0024     		movs	r4, #0
 333              	.L13:
 177:../../planner.c ****     }
 178:../../planner.c **** 
 179:../../planner.c ****     return exit_speed_sqr;
 180:../../planner.c **** }
 334              		.loc 1 180 1 view .LVU77
 335 0086 2046     		mov	r0, r4
 336 0088 38BD     		pop	{r3, r4, r5, pc}
 337              	.L25:
 338 008a 00BF     		.align	2
 339              	.L24:
 340 008c 00000000 		.word	.LANCHOR0
 341 0090 00000000 		.word	.LANCHOR2
 342 0094 00000000 		.word	.LANCHOR4
 343 0098 00000000 		.word	.LANCHOR3
 344 009c 17B7D138 		.word	953267991
 345              		.cfi_endproc
 346              	.LFE75:
 348              		.global	__aeabi_fsub
 349              		.global	__aeabi_fadd
 350              		.global	__aeabi_ui2f
 351              		.global	__aeabi_fcmpgt
 352              		.section	.text.planner_get_block_top_speed,"ax",%progbits
 353              		.align	1
 354              		.global	planner_get_block_top_speed
 355              		.syntax unified
 356              		.thumb
 357              		.thumb_func
 358              		.fpu softvfp
 360              	planner_get_block_top_speed:
 361              	.LFB76:
 181:../../planner.c **** 
 182:../../planner.c **** float planner_get_block_top_speed(void)
 183:../../planner.c **** {
 362              		.loc 1 183 1 is_stmt 1 view -0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 0, uses_anonymous_args = 0
 366 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 367              	.LCFI1:
 368              		.cfi_def_cfa_offset 24
 369              		.cfi_offset 3, -24
 370              		.cfi_offset 4, -20
 371              		.cfi_offset 5, -16
 372              		.cfi_offset 6, -12
 373              		.cfi_offset 7, -8
 374              		.cfi_offset 14, -4
 184:../../planner.c ****     /*
 185:../../planner.c ****     Computed the junction speed
 186:../../planner.c **** 
 187:../../planner.c ****     At full acceleration and deacceleration we have the following equations
 188:../../planner.c ****     	v_max^2 = v_entry^2 + 2 * distance * acceleration
 189:../../planner.c ****     	v_max^2 = v_exit^2 + 2 * distance * acceleration
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 11


 190:../../planner.c **** 
 191:../../planner.c ****     In this case v_max^2 for acceleration and deacceleration will be the same at
 192:../../planner.c **** 
 193:../../planner.c ****     d_deaccel = d_total - d_start;
 194:../../planner.c **** 
 195:../../planner.c ****     this translates to the equation
 196:../../planner.c **** 
 197:../../planner.c ****     v_max = v_entry + (2 * acceleration * distance + v_exit - v_entry)/acceleration
 198:../../planner.c ****     */
 199:../../planner.c ****     float exit_speed_sqr = planner_get_block_exit_speed_sqr();
 375              		.loc 1 199 5 view .LVU79
 376              		.loc 1 199 28 is_stmt 0 view .LVU80
 377 0002 FFF7FEFF 		bl	planner_get_block_exit_speed_sqr
 378              	.LVL21:
 200:../../planner.c ****     float speed_delta = exit_speed_sqr - planner_data[planner_data_read].entry_feed_sqr;
 379              		.loc 1 200 5 is_stmt 1 view .LVU81
 380              		.loc 1 200 73 is_stmt 0 view .LVU82
 381 0006 2F4B     		ldr	r3, .L37
 382 0008 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 383 000a 05EB4503 		add	r3, r5, r5, lsl #1
 384 000e 2E4C     		ldr	r4, .L37+4
 385 0010 04EB0314 		add	r4, r4, r3, lsl #4
 386 0014 6769     		ldr	r7, [r4, #20]	@ float
 387              		.loc 1 200 11 view .LVU83
 388 0016 3946     		mov	r1, r7
 389 0018 FFF7FEFF 		bl	__aeabi_fsub
 390              	.LVL22:
 391              		.loc 1 200 11 view .LVU84
 392 001c 0646     		mov	r6, r0
 393              	.LVL23:
 201:../../planner.c ****     float speed_change = 2 * planner_data[planner_data_read].acceleration * planner_data[planner_da
 394              		.loc 1 201 5 is_stmt 1 view .LVU85
 395              		.loc 1 201 61 is_stmt 0 view .LVU86
 396 001e 606A     		ldr	r0, [r4, #36]	@ float
 397              	.LVL24:
 398              		.loc 1 201 28 view .LVU87
 399 0020 0146     		mov	r1, r0
 400 0022 FFF7FEFF 		bl	__aeabi_fadd
 401              	.LVL25:
 402              		.loc 1 201 11 view .LVU88
 403 0026 2169     		ldr	r1, [r4, #16]	@ float
 404 0028 FFF7FEFF 		bl	__aeabi_fmul
 405              	.LVL26:
 406 002c 0146     		mov	r1, r0
 407              	.LVL27:
 202:../../planner.c ****     speed_change += speed_delta;
 408              		.loc 1 202 5 is_stmt 1 view .LVU89
 409              		.loc 1 202 18 is_stmt 0 view .LVU90
 410 002e 3046     		mov	r0, r6
 411              	.LVL28:
 412              		.loc 1 202 18 view .LVU91
 413 0030 FFF7FEFF 		bl	__aeabi_fadd
 414              	.LVL29:
 415              		.loc 1 202 18 view .LVU92
 416 0034 0146     		mov	r1, r0
 417              	.LVL30:
 203:../../planner.c ****     speed_change *= planner_data[planner_data_read].accel_inv;
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 12


 418              		.loc 1 203 5 is_stmt 1 view .LVU93
 419              		.loc 1 203 18 is_stmt 0 view .LVU94
 420 0036 A06A     		ldr	r0, [r4, #40]	@ float
 421              	.LVL31:
 422              		.loc 1 203 18 view .LVU95
 423 0038 FFF7FEFF 		bl	__aeabi_fmul
 424              	.LVL32:
 425              		.loc 1 203 18 view .LVU96
 426 003c 0146     		mov	r1, r0
 427              	.LVL33:
 204:../../planner.c ****     float junction_speed_sqr = planner_data[planner_data_read].entry_feed_sqr + speed_change;
 428              		.loc 1 204 5 is_stmt 1 view .LVU97
 429              		.loc 1 204 11 is_stmt 0 view .LVU98
 430 003e 3846     		mov	r0, r7
 431              	.LVL34:
 432              		.loc 1 204 11 view .LVU99
 433 0040 FFF7FEFF 		bl	__aeabi_fadd
 434              	.LVL35:
 435              		.loc 1 204 11 view .LVU100
 436 0044 0646     		mov	r6, r0
 437              	.LVL36:
 205:../../planner.c **** 
 206:../../planner.c ****     float target_speed_sqr = planner_data[planner_data_read].feed_sqr;
 438              		.loc 1 206 5 is_stmt 1 view .LVU101
 439              		.loc 1 206 11 is_stmt 0 view .LVU102
 440 0046 E469     		ldr	r4, [r4, #28]	@ float
 441              	.LVL37:
 207:../../planner.c ****     if (planner_overrides.overrides_enabled)
 442              		.loc 1 207 5 is_stmt 1 view .LVU103
 443              		.loc 1 207 26 is_stmt 0 view .LVU104
 444 0048 204B     		ldr	r3, .L37+8
 445 004a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 446              		.loc 1 207 8 view .LVU105
 447 004c 002B     		cmp	r3, #0
 448 004e 2FD0     		beq	.L27
 449              	.LBB35:
 208:../../planner.c ****     {
 209:../../planner.c ****         if (planner_overrides.feed_override != 100)
 450              		.loc 1 209 9 is_stmt 1 view .LVU106
 451              		.loc 1 209 30 is_stmt 0 view .LVU107
 452 0050 1E4B     		ldr	r3, .L37+8
 453 0052 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 454              	.LVL38:
 455              		.loc 1 209 12 view .LVU108
 456 0054 6428     		cmp	r0, #100
 457 0056 33D0     		beq	.L33
 210:../../planner.c ****         {
 211:../../planner.c ****             target_speed_sqr *= (float)planner_overrides.feed_override;
 458              		.loc 1 211 13 is_stmt 1 view .LVU109
 459              		.loc 1 211 33 is_stmt 0 view .LVU110
 460 0058 FFF7FEFF 		bl	__aeabi_ui2f
 461              	.LVL39:
 462 005c 0746     		mov	r7, r0
 463              		.loc 1 211 30 view .LVU111
 464 005e 2146     		mov	r1, r4
 465 0060 FFF7FEFF 		bl	__aeabi_fmul
 466              	.LVL40:
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 13


 467 0064 0146     		mov	r1, r0
 468              	.LVL41:
 212:../../planner.c ****             target_speed_sqr *= (float)planner_overrides.feed_override;
 469              		.loc 1 212 13 is_stmt 1 view .LVU112
 470              		.loc 1 212 30 is_stmt 0 view .LVU113
 471 0066 3846     		mov	r0, r7
 472              	.LVL42:
 473              		.loc 1 212 30 view .LVU114
 474 0068 FFF7FEFF 		bl	__aeabi_fmul
 475              	.LVL43:
 213:../../planner.c ****             target_speed_sqr *= 0.0001f;
 476              		.loc 1 213 13 is_stmt 1 view .LVU115
 477              		.loc 1 213 30 is_stmt 0 view .LVU116
 478 006c 1849     		ldr	r1, .L37+12
 479 006e FFF7FEFF 		bl	__aeabi_fmul
 480              	.LVL44:
 481              		.loc 1 213 30 view .LVU117
 482 0072 0746     		mov	r7, r0
 483              	.LVL45:
 484              	.L28:
 214:../../planner.c ****         }
 215:../../planner.c **** 
 216:../../planner.c ****         float rapid_feed_sqr = planner_data[planner_data_read].rapid_feed_sqr;
 485              		.loc 1 216 9 is_stmt 1 view .LVU118
 486              		.loc 1 216 15 is_stmt 0 view .LVU119
 487 0074 05EB4505 		add	r5, r5, r5, lsl #1
 488 0078 134B     		ldr	r3, .L37+4
 489 007a 03EB0515 		add	r5, r3, r5, lsl #4
 490 007e 2C6A     		ldr	r4, [r5, #32]	@ float
 491              	.LVL46:
 217:../../planner.c ****         //if rapid overrides are active the feed must not exceed the rapid motion feed
 218:../../planner.c ****         if (planner_overrides.rapid_feed_override != 100)
 492              		.loc 1 218 9 is_stmt 1 view .LVU120
 493              		.loc 1 218 30 is_stmt 0 view .LVU121
 494 0080 124B     		ldr	r3, .L37+8
 495 0082 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 496              		.loc 1 218 12 view .LVU122
 497 0084 6428     		cmp	r0, #100
 498 0086 0DD0     		beq	.L29
 219:../../planner.c ****         {
 220:../../planner.c ****             rapid_feed_sqr *= (float)planner_overrides.rapid_feed_override;
 499              		.loc 1 220 13 is_stmt 1 view .LVU123
 500              		.loc 1 220 31 is_stmt 0 view .LVU124
 501 0088 FFF7FEFF 		bl	__aeabi_ui2f
 502              	.LVL47:
 503 008c 0546     		mov	r5, r0
 504              		.loc 1 220 28 view .LVU125
 505 008e 2146     		mov	r1, r4
 506 0090 FFF7FEFF 		bl	__aeabi_fmul
 507              	.LVL48:
 508 0094 0146     		mov	r1, r0
 509              	.LVL49:
 221:../../planner.c ****             rapid_feed_sqr *= (float)planner_overrides.rapid_feed_override;
 510              		.loc 1 221 13 is_stmt 1 view .LVU126
 511              		.loc 1 221 28 is_stmt 0 view .LVU127
 512 0096 2846     		mov	r0, r5
 513              	.LVL50:
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 14


 514              		.loc 1 221 28 view .LVU128
 515 0098 FFF7FEFF 		bl	__aeabi_fmul
 516              	.LVL51:
 222:../../planner.c ****             rapid_feed_sqr *= 0.0001f;
 517              		.loc 1 222 13 is_stmt 1 view .LVU129
 518              		.loc 1 222 28 is_stmt 0 view .LVU130
 519 009c 0C49     		ldr	r1, .L37+12
 520 009e FFF7FEFF 		bl	__aeabi_fmul
 521              	.LVL52:
 522              		.loc 1 222 28 view .LVU131
 523 00a2 0446     		mov	r4, r0
 524              	.LVL53:
 525              	.L29:
 223:../../planner.c ****         }
 224:../../planner.c **** 
 225:../../planner.c ****         //can't ever exceed rapid move speed
 226:../../planner.c ****         target_speed_sqr = MIN(target_speed_sqr, rapid_feed_sqr);
 526              		.loc 1 226 9 is_stmt 1 view .LVU132
 527              		.loc 1 226 28 is_stmt 0 view .LVU133
 528 00a4 2146     		mov	r1, r4
 529 00a6 3846     		mov	r0, r7
 530 00a8 FFF7FEFF 		bl	__aeabi_fcmplt
 531              	.LVL54:
 532 00ac 00B1     		cbz	r0, .L27
 533              		.loc 1 226 28 view .LVU134
 534 00ae 3C46     		mov	r4, r7
 535              	.LVL55:
 536              	.L27:
 537              		.loc 1 226 28 view .LVU135
 538              	.LBE35:
 227:../../planner.c ****     }
 228:../../planner.c **** 
 229:../../planner.c ****     return MIN(junction_speed_sqr, target_speed_sqr);
 539              		.loc 1 229 5 is_stmt 1 view .LVU136
 540              		.loc 1 229 12 is_stmt 0 view .LVU137
 541 00b0 3146     		mov	r1, r6
 542 00b2 2046     		mov	r0, r4
 543 00b4 FFF7FEFF 		bl	__aeabi_fcmpgt
 544              	.LVL56:
 545 00b8 00B1     		cbz	r0, .L26
 546 00ba 3446     		mov	r4, r6
 547              	.LVL57:
 548              	.L26:
 230:../../planner.c **** }
 549              		.loc 1 230 1 view .LVU138
 550 00bc 2046     		mov	r0, r4
 551 00be F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 552              	.LVL58:
 553              	.L33:
 206:../../planner.c ****     if (planner_overrides.overrides_enabled)
 554              		.loc 1 206 11 view .LVU139
 555 00c0 2746     		mov	r7, r4
 556 00c2 D7E7     		b	.L28
 557              	.L38:
 558              		.align	2
 559              	.L37:
 560 00c4 00000000 		.word	.LANCHOR2
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 15


 561 00c8 00000000 		.word	.LANCHOR4
 562 00cc 00000000 		.word	.LANCHOR3
 563 00d0 17B7D138 		.word	953267991
 564              		.cfi_endproc
 565              	.LFE76:
 567              		.section	.text.planner_discard_block,"ax",%progbits
 568              		.align	1
 569              		.global	planner_discard_block
 570              		.syntax unified
 571              		.thumb
 572              		.thumb_func
 573              		.fpu softvfp
 575              	planner_discard_block:
 576              	.LFB77:
 231:../../planner.c **** 
 232:../../planner.c **** #ifdef USE_SPINDLE
 233:../../planner.c **** void planner_get_spindle_speed(float scale, uint8_t *pwm, bool *invert)
 234:../../planner.c **** {
 235:../../planner.c ****     float spindle = (planner_data_slots == PLANNER_BUFFER_SIZE) ? planner_spindle : planner_data[pl
 236:../../planner.c ****     *pwm = 0;
 237:../../planner.c ****     *invert = (spindle < 0);
 238:../../planner.c **** 
 239:../../planner.c ****     if (spindle != 0)
 240:../../planner.c ****     {
 241:../../planner.c ****         spindle = ABS(spindle);
 242:../../planner.c **** #ifdef LASER_MODE
 243:../../planner.c ****         spindle *= scale; //scale calculated in laser mode (otherwise scale is always 1)
 244:../../planner.c **** #endif
 245:../../planner.c ****         if (planner_overrides.overrides_enabled && planner_overrides.spindle_override != 100)
 246:../../planner.c ****         {
 247:../../planner.c ****             spindle = 0.01f * planner_overrides.spindle_override * spindle;
 248:../../planner.c ****         }
 249:../../planner.c ****         spindle = MIN(spindle, g_settings.spindle_max_rpm);
 250:../../planner.c ****         spindle = MAX(spindle, g_settings.spindle_min_rpm);
 251:../../planner.c ****         *pwm = (uint8_t)truncf(255 * (spindle / g_settings.spindle_max_rpm));
 252:../../planner.c ****     }
 253:../../planner.c **** }
 254:../../planner.c **** 
 255:../../planner.c **** float planner_get_previous_spindle_speed(void)
 256:../../planner.c **** {
 257:../../planner.c ****     return planner_spindle;
 258:../../planner.c **** }
 259:../../planner.c **** #endif
 260:../../planner.c **** 
 261:../../planner.c **** void planner_discard_block(void)
 262:../../planner.c **** {
 577              		.loc 1 262 1 is_stmt 1 view -0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581              		@ link register save eliminated.
 263:../../planner.c ****     planner_buffer_read();
 582              		.loc 1 263 5 view .LVU141
 583              	.LBB36:
 584              	.LBI36:
  59:../../planner.c **** {
 585              		.loc 1 59 20 view .LVU142
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 16


 586              	.LBB37:
  61:../../planner.c ****     if (++planner_data_read == PLANNER_BUFFER_SIZE)
 587              		.loc 1 61 5 view .LVU143
  61:../../planner.c ****     if (++planner_data_read == PLANNER_BUFFER_SIZE)
 588              		.loc 1 61 23 is_stmt 0 view .LVU144
 589 0000 074A     		ldr	r2, .L42
 590 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 591 0004 0133     		adds	r3, r3, #1
 592 0006 1370     		strb	r3, [r2]
  62:../../planner.c ****     {
 593              		.loc 1 62 5 is_stmt 1 view .LVU145
  62:../../planner.c ****     {
 594              		.loc 1 62 9 is_stmt 0 view .LVU146
 595 0008 064A     		ldr	r2, .L42+4
 596 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 597 000c 0133     		adds	r3, r3, #1
 598 000e DBB2     		uxtb	r3, r3
  62:../../planner.c ****     {
 599              		.loc 1 62 8 view .LVU147
 600 0010 1370     		strb	r3, [r2]
 601 0012 0F2B     		cmp	r3, #15
 602 0014 00D0     		beq	.L41
 603              	.L39:
 604              	.LBE37:
 605              	.LBE36:
 264:../../planner.c **** }
 606              		.loc 1 264 1 view .LVU148
 607 0016 7047     		bx	lr
 608              	.L41:
 609              	.LBB39:
 610              	.LBB38:
  64:../../planner.c ****     }
 611              		.loc 1 64 9 is_stmt 1 view .LVU149
  64:../../planner.c ****     }
 612              		.loc 1 64 27 is_stmt 0 view .LVU150
 613 0018 1346     		mov	r3, r2
 614 001a 0022     		movs	r2, #0
 615 001c 1A70     		strb	r2, [r3]
 616              	.LBE38:
 617              	.LBE39:
 618              		.loc 1 264 1 view .LVU151
 619 001e FAE7     		b	.L39
 620              	.L43:
 621              		.align	2
 622              	.L42:
 623 0020 00000000 		.word	.LANCHOR0
 624 0024 00000000 		.word	.LANCHOR2
 625              		.cfi_endproc
 626              	.LFE77:
 628              		.global	__aeabi_fcmpeq
 629              		.section	.text.planner_recalculate,"ax",%progbits
 630              		.align	1
 631              		.global	planner_recalculate
 632              		.syntax unified
 633              		.thumb
 634              		.thumb_func
 635              		.fpu softvfp
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 17


 637              	planner_recalculate:
 638              	.LFB78:
 265:../../planner.c **** 
 266:../../planner.c **** void planner_recalculate(void)
 267:../../planner.c **** {
 639              		.loc 1 267 1 is_stmt 1 view -0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 0
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 643 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 644              	.LCFI2:
 645              		.cfi_def_cfa_offset 40
 646              		.cfi_offset 3, -40
 647              		.cfi_offset 4, -36
 648              		.cfi_offset 5, -32
 649              		.cfi_offset 6, -28
 650              		.cfi_offset 7, -24
 651              		.cfi_offset 8, -20
 652              		.cfi_offset 9, -16
 653              		.cfi_offset 10, -12
 654              		.cfi_offset 11, -8
 655              		.cfi_offset 14, -4
 268:../../planner.c ****     uint8_t last = planner_data_write;
 656              		.loc 1 268 5 view .LVU153
 657              		.loc 1 268 13 is_stmt 0 view .LVU154
 658 0004 664B     		ldr	r3, .L74
 659 0006 93F800A0 		ldrb	r10, [r3]	@ zero_extendqisi2
 660              	.LVL59:
 269:../../planner.c ****     uint8_t first = planner_data_read;
 661              		.loc 1 269 5 is_stmt 1 view .LVU155
 662              		.loc 1 269 13 is_stmt 0 view .LVU156
 663 000a 664B     		ldr	r3, .L74+4
 664 000c 93F800B0 		ldrb	fp, [r3]	@ zero_extendqisi2
 665              	.LVL60:
 270:../../planner.c ****     uint8_t block = planner_data_write;
 666              		.loc 1 270 5 is_stmt 1 view .LVU157
 271:../../planner.c ****     //starts in the last added block
 272:../../planner.c ****     //calculates the maximum entry speed of the block so that it can do a full stop in the end
 273:../../planner.c ****     float entry_feed_sqr = (planner_data[block].dwell == 0) ? (2 * planner_data[block].distance * p
 667              		.loc 1 273 5 view .LVU158
 668              		.loc 1 273 48 is_stmt 0 view .LVU159
 669 0010 0AEB4A02 		add	r2, r10, r10, lsl #1
 670 0014 644B     		ldr	r3, .L74+8
 671 0016 03EB0213 		add	r3, r3, r2, lsl #4
 672 001a 9B8D     		ldrh	r3, [r3, #44]
 673              		.loc 1 273 133 view .LVU160
 674 001c 23BB     		cbnz	r3, .L63
 675              		.loc 1 273 87 discriminator 1 view .LVU161
 676 001e 624B     		ldr	r3, .L74+8
 677 0020 03EB0214 		add	r4, r3, r2, lsl #4
 678 0024 2069     		ldr	r0, [r4, #16]	@ float
 679              		.loc 1 273 66 discriminator 1 view .LVU162
 680 0026 0146     		mov	r1, r0
 681 0028 FFF7FEFF 		bl	__aeabi_fadd
 682              	.LVL61:
 683              		.loc 1 273 133 discriminator 1 view .LVU163
 684 002c 616A     		ldr	r1, [r4, #36]	@ float
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 18


 685 002e FFF7FEFF 		bl	__aeabi_fmul
 686              	.LVL62:
 687 0032 0546     		mov	r5, r0
 688              	.L45:
 689              	.LVL63:
 274:../../planner.c ****     planner_data[block].entry_feed_sqr = MIN(planner_data[block].entry_max_feed_sqr, entry_feed_sqr
 690              		.loc 1 274 5 is_stmt 1 discriminator 4 view .LVU164
 691              		.loc 1 274 42 is_stmt 0 discriminator 4 view .LVU165
 692 0034 0AEB4A03 		add	r3, r10, r10, lsl #1
 693 0038 5B4A     		ldr	r2, .L74+8
 694 003a 02EB0313 		add	r3, r2, r3, lsl #4
 695 003e 9C69     		ldr	r4, [r3, #24]	@ float
 696 0040 2946     		mov	r1, r5
 697 0042 2046     		mov	r0, r4
 698 0044 FFF7FEFF 		bl	__aeabi_fcmplt
 699              	.LVL64:
 700 0048 00B9     		cbnz	r0, .L46
 701              		.loc 1 274 42 view .LVU166
 702 004a 2C46     		mov	r4, r5
 703              	.L46:
 704              		.loc 1 274 40 discriminator 4 view .LVU167
 705 004c 0AEB4A03 		add	r3, r10, r10, lsl #1
 706 0050 554A     		ldr	r2, .L74+8
 707 0052 02EB0313 		add	r3, r2, r3, lsl #4
 708 0056 5C61     		str	r4, [r3, #20]	@ float
 275:../../planner.c ****     //optimizes entry speeds given the current exit speed (backward pass)
 276:../../planner.c ****     uint8_t next = block;
 709              		.loc 1 276 5 is_stmt 1 discriminator 4 view .LVU168
 710              	.LVL65:
 277:../../planner.c ****     block = planner_buffer_prev(block);
 711              		.loc 1 277 5 discriminator 4 view .LVU169
 712              	.LBB40:
 713              	.LBI40:
  87:../../planner.c **** {
 714              		.loc 1 87 23 discriminator 4 view .LVU170
 715              	.LBB41:
  89:../../planner.c ****     {
 716              		.loc 1 89 5 discriminator 4 view .LVU171
  89:../../planner.c ****     {
 717              		.loc 1 89 8 is_stmt 0 discriminator 4 view .LVU172
 718 0058 BAF1000F 		cmp	r10, #0
 719 005c 06D0     		beq	.L64
  89:../../planner.c ****     {
 720              		.loc 1 89 8 view .LVU173
 721 005e 5446     		mov	r4, r10
 722              	.L47:
 723              	.LVL66:
  94:../../planner.c **** }
 724              		.loc 1 94 5 is_stmt 1 view .LVU174
  94:../../planner.c **** }
 725              		.loc 1 94 12 is_stmt 0 view .LVU175
 726 0060 013C     		subs	r4, r4, #1
 727              	.LVL67:
  94:../../planner.c **** }
 728              		.loc 1 94 12 view .LVU176
 729 0062 E4B2     		uxtb	r4, r4
 730              	.LVL68:
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 19


  94:../../planner.c **** }
 731              		.loc 1 94 12 view .LVU177
 732              	.LBE41:
 733              	.LBE40:
 278:../../planner.c **** 
 279:../../planner.c ****     while (!planner_data[block].optimal && block != first)
 734              		.loc 1 279 5 is_stmt 1 view .LVU178
 276:../../planner.c ****     block = planner_buffer_prev(block);
 735              		.loc 1 276 13 is_stmt 0 view .LVU179
 736 0064 5546     		mov	r5, r10
 737              	.LVL69:
 738              		.loc 1 279 11 view .LVU180
 739 0066 36E0     		b	.L48
 740              	.LVL70:
 741              	.L63:
 273:../../planner.c ****     planner_data[block].entry_feed_sqr = MIN(planner_data[block].entry_max_feed_sqr, entry_feed_sqr
 742              		.loc 1 273 133 view .LVU181
 743 0068 0025     		movs	r5, #0
 744 006a E3E7     		b	.L45
 745              	.LVL71:
 746              	.L64:
 747              	.LBB43:
 748              	.LBB42:
  91:../../planner.c ****     }
 749              		.loc 1 91 15 view .LVU182
 750 006c 0F24     		movs	r4, #15
 751 006e F7E7     		b	.L47
 752              	.LVL72:
 753              	.L49:
  91:../../planner.c ****     }
 754              		.loc 1 91 15 view .LVU183
 755              	.LBE42:
 756              	.LBE43:
 280:../../planner.c ****     {
 281:../../planner.c ****         if (planner_data[block].dwell != 0)
 282:../../planner.c ****         {
 283:../../planner.c ****             planner_data[block].entry_feed_sqr = 0;
 284:../../planner.c ****         }
 285:../../planner.c ****         else if (planner_data[block].entry_feed_sqr != planner_data[block].entry_max_feed_sqr)
 757              		.loc 1 285 14 is_stmt 1 view .LVU184
 758              		.loc 1 285 37 is_stmt 0 view .LVU185
 759 0070 06EB4603 		add	r3, r6, r6, lsl #1
 760 0074 4C4A     		ldr	r2, .L74+8
 761 0076 02EB0313 		add	r3, r2, r3, lsl #4
 762              		.loc 1 285 75 view .LVU186
 763 007a 9F69     		ldr	r7, [r3, #24]	@ float
 764              		.loc 1 285 17 view .LVU187
 765 007c 3946     		mov	r1, r7
 766 007e 5869     		ldr	r0, [r3, #20]	@ float
 767 0080 FFF7FEFF 		bl	__aeabi_fcmpeq
 768              	.LVL73:
 769 0084 10BB     		cbnz	r0, .L50
 286:../../planner.c ****         {
 287:../../planner.c ****             entry_feed_sqr = planner_data[next].entry_feed_sqr + 2 * planner_data[block].distance *
 770              		.loc 1 287 13 is_stmt 1 view .LVU188
 771              		.loc 1 287 48 is_stmt 0 view .LVU189
 772 0086 484B     		ldr	r3, .L74+8
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 20


 773 0088 05EB4505 		add	r5, r5, r5, lsl #1
 774              	.LVL74:
 775              		.loc 1 287 48 view .LVU190
 776 008c 03EB0515 		add	r5, r3, r5, lsl #4
 777 0090 D5F81480 		ldr	r8, [r5, #20]	@ float
 778              		.loc 1 287 89 view .LVU191
 779 0094 06EB4605 		add	r5, r6, r6, lsl #1
 780 0098 03EB0515 		add	r5, r3, r5, lsl #4
 781 009c 2869     		ldr	r0, [r5, #16]	@ float
 782              		.loc 1 287 68 view .LVU192
 783 009e 0146     		mov	r1, r0
 784 00a0 FFF7FEFF 		bl	__aeabi_fadd
 785              	.LVL75:
 786              		.loc 1 287 99 view .LVU193
 787 00a4 696A     		ldr	r1, [r5, #36]	@ float
 788 00a6 FFF7FEFF 		bl	__aeabi_fmul
 789              	.LVL76:
 790 00aa 0146     		mov	r1, r0
 791              		.loc 1 287 28 view .LVU194
 792 00ac 4046     		mov	r0, r8
 793 00ae FFF7FEFF 		bl	__aeabi_fadd
 794              	.LVL77:
 795 00b2 0546     		mov	r5, r0
 796              	.LVL78:
 288:../../planner.c ****             planner_data[block].entry_feed_sqr = MIN(planner_data[block].entry_max_feed_sqr, entry_
 797              		.loc 1 288 13 is_stmt 1 view .LVU195
 798              		.loc 1 288 50 is_stmt 0 view .LVU196
 799 00b4 0146     		mov	r1, r0
 800 00b6 3846     		mov	r0, r7
 801              	.LVL79:
 802              		.loc 1 288 50 view .LVU197
 803 00b8 FFF7FEFF 		bl	__aeabi_fcmplt
 804              	.LVL80:
 805              		.loc 1 288 50 view .LVU198
 806 00bc 00B9     		cbnz	r0, .L52
 807 00be 2F46     		mov	r7, r5
 808              	.L52:
 809              		.loc 1 288 48 discriminator 4 view .LVU199
 810 00c0 06EB4606 		add	r6, r6, r6, lsl #1
 811 00c4 384B     		ldr	r3, .L74+8
 812 00c6 03EB0616 		add	r6, r3, r6, lsl #4
 813 00ca 7761     		str	r7, [r6, #20]	@ float
 814              	.LVL81:
 815              	.L50:
 289:../../planner.c ****         }
 290:../../planner.c **** 
 291:../../planner.c ****         next = block;
 816              		.loc 1 291 9 is_stmt 1 view .LVU200
 292:../../planner.c ****         block = planner_buffer_prev(block);
 817              		.loc 1 292 9 view .LVU201
 818              	.LBB44:
 819              	.LBI44:
  87:../../planner.c **** {
 820              		.loc 1 87 23 view .LVU202
 821              	.LBB45:
  89:../../planner.c ****     {
 822              		.loc 1 89 5 view .LVU203
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 21


  89:../../planner.c ****     {
 823              		.loc 1 89 8 is_stmt 0 view .LVU204
 824 00cc ECB1     		cbz	r4, .L65
  89:../../planner.c ****     {
 825              		.loc 1 89 8 view .LVU205
 826 00ce 2346     		mov	r3, r4
 827              	.L53:
 828              	.LVL82:
  94:../../planner.c **** }
 829              		.loc 1 94 5 is_stmt 1 view .LVU206
  94:../../planner.c **** }
 830              		.loc 1 94 12 is_stmt 0 view .LVU207
 831 00d0 013B     		subs	r3, r3, #1
 832              	.LVL83:
  94:../../planner.c **** }
 833              		.loc 1 94 12 view .LVU208
 834              	.LBE45:
 835              	.LBE44:
 291:../../planner.c ****         block = planner_buffer_prev(block);
 836              		.loc 1 291 14 view .LVU209
 837 00d2 2546     		mov	r5, r4
 838              		.loc 1 292 17 view .LVU210
 839 00d4 DCB2     		uxtb	r4, r3
 840              	.LVL84:
 841              	.L48:
 279:../../planner.c ****     {
 842              		.loc 1 279 11 is_stmt 1 view .LVU211
 279:../../planner.c ****     {
 843              		.loc 1 279 32 is_stmt 0 view .LVU212
 844 00d6 2646     		mov	r6, r4
 845 00d8 04EB4403 		add	r3, r4, r4, lsl #1
 846 00dc 324A     		ldr	r2, .L74+8
 847 00de 02EB0313 		add	r3, r2, r3, lsl #4
 848 00e2 93F82E30 		ldrb	r3, [r3, #46]	@ zero_extendqisi2
 279:../../planner.c ****     {
 849              		.loc 1 279 11 view .LVU213
 850 00e6 D3B9     		cbnz	r3, .L61
 279:../../planner.c ****     {
 851              		.loc 1 279 41 discriminator 1 view .LVU214
 852 00e8 5C45     		cmp	r4, fp
 853 00ea 18D0     		beq	.L61
 281:../../planner.c ****         {
 854              		.loc 1 281 9 is_stmt 1 view .LVU215
 281:../../planner.c ****         {
 855              		.loc 1 281 32 is_stmt 0 view .LVU216
 856 00ec 06EB4603 		add	r3, r6, r6, lsl #1
 857 00f0 2D4A     		ldr	r2, .L74+8
 858 00f2 02EB0313 		add	r3, r2, r3, lsl #4
 859 00f6 9B8D     		ldrh	r3, [r3, #44]
 281:../../planner.c ****         {
 860              		.loc 1 281 12 view .LVU217
 861 00f8 002B     		cmp	r3, #0
 862 00fa B9D0     		beq	.L49
 283:../../planner.c ****         }
 863              		.loc 1 283 13 is_stmt 1 view .LVU218
 283:../../planner.c ****         }
 864              		.loc 1 283 48 is_stmt 0 view .LVU219
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 22


 865 00fc 06EB4606 		add	r6, r6, r6, lsl #1
 866 0100 02EB0616 		add	r6, r2, r6, lsl #4
 867 0104 0023     		movs	r3, #0
 868 0106 7361     		str	r3, [r6, #20]	@ float
 869 0108 E0E7     		b	.L50
 870              	.LVL85:
 871              	.L65:
 872              	.LBB47:
 873              	.LBB46:
  91:../../planner.c ****     }
 874              		.loc 1 91 15 view .LVU220
 875 010a 0F23     		movs	r3, #15
 876 010c E0E7     		b	.L53
 877              	.LVL86:
 878              	.L56:
  91:../../planner.c ****     }
 879              		.loc 1 91 15 view .LVU221
 880              	.LBE46:
 881              	.LBE47:
 293:../../planner.c ****     }
 294:../../planner.c **** 
 295:../../planner.c ****     //optimizes exit speeds (forward pass)
 296:../../planner.c ****     while (block != last)
 297:../../planner.c ****     {
 298:../../planner.c ****         //next block is moving at a faster speed
 299:../../planner.c ****         if (planner_data[block].entry_feed_sqr < planner_data[next].entry_feed_sqr)
 300:../../planner.c ****         {
 301:../../planner.c ****             //check if the next block entry speed can be achieved
 302:../../planner.c ****             float exit_speed_sqr = planner_data[block].entry_feed_sqr + (2 * planner_data[block].di
 303:../../planner.c ****             if (exit_speed_sqr < planner_data[next].entry_feed_sqr)
 304:../../planner.c ****             {
 305:../../planner.c ****                 //lowers next entry speed (aka exit speed) to the maximum reachable speed from curr
 306:../../planner.c ****                 //optimization achieved for this movement
 307:../../planner.c ****                 planner_data[next].entry_feed_sqr = exit_speed_sqr;
 308:../../planner.c ****                 planner_data[next].optimal = true;
 309:../../planner.c ****             }
 310:../../planner.c ****         }
 311:../../planner.c **** 
 312:../../planner.c ****         //if the executing block was updated then update the interpolator limits
 313:../../planner.c ****         if (block == first)
 882              		.loc 1 313 9 is_stmt 1 view .LVU222
 883              		.loc 1 313 12 is_stmt 0 view .LVU223
 884 010e 5C45     		cmp	r4, fp
 885 0110 3FD0     		beq	.L71
 886              	.L59:
 314:../../planner.c ****         {
 315:../../planner.c ****             itp_update();
 316:../../planner.c ****         }
 317:../../planner.c **** 
 318:../../planner.c ****         block = next;
 887              		.loc 1 318 9 is_stmt 1 view .LVU224
 888              	.LVL87:
 319:../../planner.c ****         next = planner_buffer_next(block);
 889              		.loc 1 319 9 view .LVU225
 890              	.LBB48:
 891              	.LBI48:
  77:../../planner.c **** {
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 23


 892              		.loc 1 77 23 view .LVU226
 893              	.LBB49:
  79:../../planner.c ****     {
 894              		.loc 1 79 5 view .LVU227
  79:../../planner.c ****     {
 895              		.loc 1 79 8 is_stmt 0 view .LVU228
 896 0112 6B1C     		adds	r3, r5, #1
 897 0114 DBB2     		uxtb	r3, r3
 898              	.LVL88:
  79:../../planner.c ****     {
 899              		.loc 1 79 8 view .LVU229
 900 0116 0F2B     		cmp	r3, #15
 901 0118 3ED0     		beq	.L72
 902              	.LVL89:
 903              	.L60:
  81:../../planner.c ****     }
 904              		.loc 1 81 15 view .LVU230
 905 011a 2C46     		mov	r4, r5
 906 011c 1D46     		mov	r5, r3
 907              	.LVL90:
 908              	.L61:
  81:../../planner.c ****     }
 909              		.loc 1 81 15 view .LVU231
 910              	.LBE49:
 911              	.LBE48:
 296:../../planner.c ****     {
 912              		.loc 1 296 11 is_stmt 1 view .LVU232
 913 011e 5445     		cmp	r4, r10
 914 0120 3CD0     		beq	.L73
 299:../../planner.c ****         {
 915              		.loc 1 299 9 view .LVU233
 299:../../planner.c ****         {
 916              		.loc 1 299 32 is_stmt 0 view .LVU234
 917 0122 214B     		ldr	r3, .L74+8
 918 0124 04EB4402 		add	r2, r4, r4, lsl #1
 919 0128 03EB0212 		add	r2, r3, r2, lsl #4
 920 012c 5769     		ldr	r7, [r2, #20]	@ float
 299:../../planner.c ****         {
 921              		.loc 1 299 68 view .LVU235
 922 012e 05EB4502 		add	r2, r5, r5, lsl #1
 923 0132 03EB0213 		add	r3, r3, r2, lsl #4
 924 0136 5E69     		ldr	r6, [r3, #20]	@ float
 299:../../planner.c ****         {
 925              		.loc 1 299 12 view .LVU236
 926 0138 3146     		mov	r1, r6
 927 013a 3846     		mov	r0, r7
 928 013c FFF7FEFF 		bl	__aeabi_fcmplt
 929              	.LVL91:
 930 0140 0028     		cmp	r0, #0
 931 0142 E4D0     		beq	.L56
 932              	.LBB51:
 302:../../planner.c ****             if (exit_speed_sqr < planner_data[next].entry_feed_sqr)
 933              		.loc 1 302 13 is_stmt 1 view .LVU237
 302:../../planner.c ****             if (exit_speed_sqr < planner_data[next].entry_feed_sqr)
 934              		.loc 1 302 97 is_stmt 0 view .LVU238
 935 0144 DFF86090 		ldr	r9, .L74+8
 936 0148 04EB4403 		add	r3, r4, r4, lsl #1
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 24


 937 014c 09EB0313 		add	r3, r9, r3, lsl #4
 938 0150 1869     		ldr	r0, [r3, #16]	@ float
 302:../../planner.c ****             if (exit_speed_sqr < planner_data[next].entry_feed_sqr)
 939              		.loc 1 302 76 view .LVU239
 940 0152 0146     		mov	r1, r0
 941 0154 FFF7FEFF 		bl	__aeabi_fadd
 942              	.LVL92:
 302:../../planner.c ****             if (exit_speed_sqr < planner_data[next].entry_feed_sqr)
 943              		.loc 1 302 128 view .LVU240
 944 0158 6300     		lsls	r3, r4, #1
 945 015a 2344     		add	r3, r3, r4
 946 015c 09EB0319 		add	r9, r9, r3, lsl #4
 302:../../planner.c ****             if (exit_speed_sqr < planner_data[next].entry_feed_sqr)
 947              		.loc 1 302 107 view .LVU241
 948 0160 D9F82410 		ldr	r1, [r9, #36]	@ float
 949 0164 FFF7FEFF 		bl	__aeabi_fmul
 950              	.LVL93:
 951 0168 0146     		mov	r1, r0
 302:../../planner.c ****             if (exit_speed_sqr < planner_data[next].entry_feed_sqr)
 952              		.loc 1 302 19 view .LVU242
 953 016a 3846     		mov	r0, r7
 954 016c FFF7FEFF 		bl	__aeabi_fadd
 955              	.LVL94:
 956 0170 0746     		mov	r7, r0
 957              	.LVL95:
 303:../../planner.c ****             {
 958              		.loc 1 303 13 is_stmt 1 view .LVU243
 303:../../planner.c ****             {
 959              		.loc 1 303 16 is_stmt 0 view .LVU244
 960 0172 0146     		mov	r1, r0
 961 0174 3046     		mov	r0, r6
 962              	.LVL96:
 303:../../planner.c ****             {
 963              		.loc 1 303 16 view .LVU245
 964 0176 FFF7FEFF 		bl	__aeabi_fcmpgt
 965              	.LVL97:
 303:../../planner.c ****             {
 966              		.loc 1 303 16 view .LVU246
 967 017a 0028     		cmp	r0, #0
 968 017c C7D0     		beq	.L56
 307:../../planner.c ****                 planner_data[next].optimal = true;
 969              		.loc 1 307 17 is_stmt 1 view .LVU247
 307:../../planner.c ****                 planner_data[next].optimal = true;
 970              		.loc 1 307 51 is_stmt 0 view .LVU248
 971 017e 0A4B     		ldr	r3, .L74+8
 972 0180 05EB4502 		add	r2, r5, r5, lsl #1
 973 0184 03EB0212 		add	r2, r3, r2, lsl #4
 974 0188 5761     		str	r7, [r2, #20]	@ float
 308:../../planner.c ****             }
 975              		.loc 1 308 17 is_stmt 1 view .LVU249
 308:../../planner.c ****             }
 976              		.loc 1 308 44 is_stmt 0 view .LVU250
 977 018a 0123     		movs	r3, #1
 978 018c 82F82E30 		strb	r3, [r2, #46]
 979 0190 BDE7     		b	.L56
 980              	.LVL98:
 981              	.L71:
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 25


 308:../../planner.c ****             }
 982              		.loc 1 308 44 view .LVU251
 983              	.LBE51:
 315:../../planner.c ****         }
 984              		.loc 1 315 13 is_stmt 1 view .LVU252
 985 0192 FFF7FEFF 		bl	itp_update
 986              	.LVL99:
 987 0196 BCE7     		b	.L59
 988              	.LVL100:
 989              	.L72:
 990              	.LBB52:
 991              	.LBB50:
  81:../../planner.c ****     }
 992              		.loc 1 81 15 is_stmt 0 view .LVU253
 993 0198 0023     		movs	r3, #0
 994              	.LVL101:
  81:../../planner.c ****     }
 995              		.loc 1 81 15 view .LVU254
 996 019a BEE7     		b	.L60
 997              	.LVL102:
 998              	.L73:
  81:../../planner.c ****     }
 999              		.loc 1 81 15 view .LVU255
 1000              	.LBE50:
 1001              	.LBE52:
 320:../../planner.c ****     }
 321:../../planner.c **** }
 1002              		.loc 1 321 1 view .LVU256
 1003 019c BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1004              	.LVL103:
 1005              	.L75:
 1006              		.loc 1 321 1 view .LVU257
 1007              		.align	2
 1008              	.L74:
 1009 01a0 00000000 		.word	.LANCHOR1
 1010 01a4 00000000 		.word	.LANCHOR2
 1011 01a8 00000000 		.word	.LANCHOR4
 1012              		.cfi_endproc
 1013              	.LFE78:
 1015              		.global	__aeabi_fdiv
 1016              		.global	__aeabi_f2d
 1017              		.global	__aeabi_dmul
 1018              		.global	__aeabi_d2f
 1019              		.section	.text.planner_add_line,"ax",%progbits
 1020              		.align	1
 1021              		.global	planner_add_line
 1022              		.syntax unified
 1023              		.thumb
 1024              		.thumb_func
 1025              		.fpu softvfp
 1027              	planner_add_line:
 1028              	.LVL104:
 1029              	.LFB79:
 322:../../planner.c **** 
 323:../../planner.c **** /*
 324:../../planner.c **** 	Adds a new line to the trajectory planner
 325:../../planner.c **** 	The planner is responsible for calculating the entry and exit speeds of the transitions
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 26


 326:../../planner.c **** 	The trajectory planner does the following actions:
 327:../../planner.c **** 		1. Calculates the direction change of the new movement
 328:../../planner.c **** 		2. Adjusts maximum entry feed according to the angle of the junction point
 329:../../planner.c **** 		3. Recalculates all chained segments
 330:../../planner.c **** 
 331:../../planner.c **** 	For profiling the motion 4 feeds are calculated
 332:../../planner.c **** 		1. The target feed
 333:../../planner.c **** 		2. The rapid motion feed given the direction (maximum allowed feed with overrides)
 334:../../planner.c **** 		3. The entry feed (initialy set to 0)
 335:../../planner.c **** 		4. The maximum entry feed given the juntion angle between planner blocks
 336:../../planner.c **** */
 337:../../planner.c **** void planner_add_line(float *target, planner_block_data_t block_data)
 338:../../planner.c **** {
 1030              		.loc 1 338 1 is_stmt 1 view -0
 1031              		.cfi_startproc
 1032              		@ args = 32, pretend = 16, frame = 16
 1033              		@ frame_needed = 0, uses_anonymous_args = 0
 1034              		.loc 1 338 1 is_stmt 0 view .LVU259
 1035 0000 84B0     		sub	sp, sp, #16
 1036              	.LCFI3:
 1037              		.cfi_def_cfa_offset 16
 1038 0002 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1039              	.LCFI4:
 1040              		.cfi_def_cfa_offset 52
 1041              		.cfi_offset 4, -52
 1042              		.cfi_offset 5, -48
 1043              		.cfi_offset 6, -44
 1044              		.cfi_offset 7, -40
 1045              		.cfi_offset 8, -36
 1046              		.cfi_offset 9, -32
 1047              		.cfi_offset 10, -28
 1048              		.cfi_offset 11, -24
 1049              		.cfi_offset 14, -20
 1050 0006 85B0     		sub	sp, sp, #20
 1051              	.LCFI5:
 1052              		.cfi_def_cfa_offset 72
 1053 0008 0646     		mov	r6, r0
 1054 000a 0FA8     		add	r0, sp, #60
 1055              	.LVL105:
 1056              		.loc 1 338 1 view .LVU260
 1057 000c 80E80E00 		stm	r0, {r1, r2, r3}
 339:../../planner.c ****     static float prev_dir_vect[AXIS_COUNT];
 1058              		.loc 1 339 5 is_stmt 1 view .LVU261
 340:../../planner.c ****     planner_data[planner_data_write].dirbits = 0;
 1059              		.loc 1 340 5 view .LVU262
 1060              		.loc 1 340 37 is_stmt 0 view .LVU263
 1061 0010 A64B     		ldr	r3, .L118
 1062 0012 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1063              		.loc 1 340 46 view .LVU264
 1064 0014 A649     		ldr	r1, .L118+4
 1065 0016 04EB4403 		add	r3, r4, r4, lsl #1
 1066 001a 1801     		lsls	r0, r3, #4
 1067 001c 01EB0313 		add	r3, r1, r3, lsl #4
 1068 0020 0022     		movs	r2, #0
 1069 0022 0A54     		strb	r2, [r1, r0]
 341:../../planner.c ****     planner_data[planner_data_write].optimal = false;
 1070              		.loc 1 341 5 is_stmt 1 view .LVU265
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 27


 1071              		.loc 1 341 46 is_stmt 0 view .LVU266
 1072 0024 83F82E20 		strb	r2, [r3, #46]
 342:../../planner.c ****     planner_data[planner_data_write].acceleration = 0;
 1073              		.loc 1 342 5 is_stmt 1 view .LVU267
 1074              		.loc 1 342 51 is_stmt 0 view .LVU268
 1075 0028 0022     		movs	r2, #0
 1076 002a 5A62     		str	r2, [r3, #36]	@ float
 343:../../planner.c ****     planner_data[planner_data_write].rapid_feed_sqr = 0;
 1077              		.loc 1 343 5 is_stmt 1 view .LVU269
 1078              		.loc 1 343 53 is_stmt 0 view .LVU270
 1079 002c 1A62     		str	r2, [r3, #32]	@ float
 344:../../planner.c ****     planner_data[planner_data_write].feed_sqr = 0;
 1080              		.loc 1 344 5 is_stmt 1 view .LVU271
 1081              		.loc 1 344 47 is_stmt 0 view .LVU272
 1082 002e DA61     		str	r2, [r3, #28]	@ float
 345:../../planner.c ****     //sets entry and max entry feeds as if it would start and finish from a stoped state
 346:../../planner.c ****     planner_data[planner_data_write].entry_feed_sqr = 0;
 1083              		.loc 1 346 5 is_stmt 1 view .LVU273
 1084              		.loc 1 346 53 is_stmt 0 view .LVU274
 1085 0030 5A61     		str	r2, [r3, #20]	@ float
 347:../../planner.c ****     planner_data[planner_data_write].entry_max_feed_sqr = 0;
 1086              		.loc 1 347 5 is_stmt 1 view .LVU275
 1087              		.loc 1 347 57 is_stmt 0 view .LVU276
 1088 0032 9A61     		str	r2, [r3, #24]	@ float
 348:../../planner.c **** #ifdef USE_SPINDLE
 349:../../planner.c ****     planner_spindle = planner_data[planner_data_write].spindle = block_data.spindle;
 350:../../planner.c **** #endif
 351:../../planner.c **** #ifdef GCODE_PROCESS_LINE_NUMBERS
 352:../../planner.c ****     planner_data[planner_data_write].line = block_data.line;
 353:../../planner.c **** #endif
 354:../../planner.c ****     planner_data[planner_data_write].dwell = block_data.dwell;
 1089              		.loc 1 354 5 is_stmt 1 view .LVU277
 1090              		.loc 1 354 56 is_stmt 0 view .LVU278
 1091 0034 BDF85220 		ldrh	r2, [sp, #82]
 1092              		.loc 1 354 44 view .LVU279
 1093 0038 9A85     		strh	r2, [r3, #44]	@ movhi
 355:../../planner.c **** 
 356:../../planner.c ****     planner_data[planner_data_write].distance = block_data.distance;
 1094              		.loc 1 356 5 is_stmt 1 view .LVU280
 1095              		.loc 1 356 59 is_stmt 0 view .LVU281
 1096 003a 129A     		ldr	r2, [sp, #72]	@ float
 1097              		.loc 1 356 47 view .LVU282
 1098 003c 1A61     		str	r2, [r3, #16]	@ float
 357:../../planner.c ****     if (CHECKFLAG(block_data.motion_mode, PLANNER_MOTION_MODE_NOMOTION))
 1099              		.loc 1 357 5 is_stmt 1 view .LVU283
 1100              		.loc 1 357 9 is_stmt 0 view .LVU284
 1101 003e 9DF854B0 		ldrb	fp, [sp, #84]	@ zero_extendqisi2
 1102              		.loc 1 357 8 view .LVU285
 1103 0042 1BF00103 		ands	r3, fp, #1
 1104 0046 0293     		str	r3, [sp, #8]
 1105 0048 0DD0     		beq	.L77
 358:../../planner.c ****     {
 359:../../planner.c ****         planner_buffer_write();
 1106              		.loc 1 359 9 is_stmt 1 view .LVU286
 1107              	.LBB53:
 1108              	.LBI53:
  68:../../planner.c **** {
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 28


 1109              		.loc 1 68 20 view .LVU287
 1110              	.LBB54:
  70:../../planner.c ****     if (++planner_data_write == PLANNER_BUFFER_SIZE)
 1111              		.loc 1 70 5 view .LVU288
  70:../../planner.c ****     if (++planner_data_write == PLANNER_BUFFER_SIZE)
 1112              		.loc 1 70 23 is_stmt 0 view .LVU289
 1113 004a 9A4A     		ldr	r2, .L118+8
 1114 004c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1115 004e 013B     		subs	r3, r3, #1
 1116 0050 1370     		strb	r3, [r2]
  71:../../planner.c ****     {
 1117              		.loc 1 71 5 is_stmt 1 view .LVU290
  71:../../planner.c ****     {
 1118              		.loc 1 71 9 is_stmt 0 view .LVU291
 1119 0052 0134     		adds	r4, r4, #1
 1120 0054 E4B2     		uxtb	r4, r4
  71:../../planner.c ****     {
 1121              		.loc 1 71 8 view .LVU292
 1122 0056 954B     		ldr	r3, .L118
 1123 0058 1C70     		strb	r4, [r3]
 1124 005a 0F2C     		cmp	r4, #15
 1125 005c 40F00181 		bne	.L76
  73:../../planner.c ****     }
 1126              		.loc 1 73 9 is_stmt 1 view .LVU293
  73:../../planner.c ****     }
 1127              		.loc 1 73 28 is_stmt 0 view .LVU294
 1128 0060 0022     		movs	r2, #0
 1129 0062 1A70     		strb	r2, [r3]
 1130              	.LBE54:
 1131              	.LBE53:
 360:../../planner.c ****         return;
 1132              		.loc 1 360 9 is_stmt 1 view .LVU295
 1133 0064 FDE0     		b	.L76
 1134              	.L77:
 1135 0066 2546     		mov	r5, r4
 361:../../planner.c ****     }
 362:../../planner.c **** 
 363:../../planner.c ****     memcpy(&(planner_data[planner_data_write].pos), target, sizeof(planner_data[planner_data_write]
 1136              		.loc 1 363 5 view .LVU296
 1137              		.loc 1 363 12 is_stmt 0 view .LVU297
 1138 0068 04EB4403 		add	r3, r4, r4, lsl #1
 1139 006c 904A     		ldr	r2, .L118+4
 1140 006e 02EB0313 		add	r3, r2, r3, lsl #4
 1141              		.loc 1 363 5 view .LVU298
 1142 0072 3068     		ldr	r0, [r6]	@ unaligned
 1143 0074 7168     		ldr	r1, [r6, #4]	@ unaligned
 1144 0076 B268     		ldr	r2, [r6, #8]	@ unaligned
 1145 0078 5860     		str	r0, [r3, #4]	@ unaligned
 1146 007a 9960     		str	r1, [r3, #8]	@ unaligned
 1147 007c DA60     		str	r2, [r3, #12]	@ unaligned
 364:../../planner.c **** 
 365:../../planner.c ****     //calculates the normalized direction vector
 366:../../planner.c ****     //it also calculates the angle between previous direction and the current
 367:../../planner.c ****     //this is given by the equation cos(theta) = dotprod(u,v)/(magnitude(u)*magnitude(v))
 368:../../planner.c ****     //since normalized vector are being used (magnitude=1) this simplifies to cos(theta) = dotprod(
 369:../../planner.c ****     //in the same loop the maximum linear speed and accel is calculated
 370:../../planner.c ****     //planner_data[planner_data_write].distance = sqrtf(planner_data[planner_data_write].distance);
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 29


 371:../../planner.c ****     float inv_magn = 1.0f / planner_data[planner_data_write].distance;
 1148              		.loc 1 371 5 is_stmt 1 view .LVU299
 1149              		.loc 1 371 11 is_stmt 0 view .LVU300
 1150 007e 1969     		ldr	r1, [r3, #16]	@ float
 1151 0080 4FF07E50 		mov	r0, #1065353216
 1152 0084 FFF7FEFF 		bl	__aeabi_fdiv
 1153              	.LVL106:
 1154 0088 0390     		str	r0, [sp, #12]	@ float
 1155              	.LVL107:
 372:../../planner.c ****     float cos_theta = 0;
 1156              		.loc 1 372 5 is_stmt 1 view .LVU301
 373:../../planner.c ****     uint8_t prev = 0;
 1157              		.loc 1 373 5 view .LVU302
 374:../../planner.c **** 
 375:../../planner.c ****     if (!planner_buffer_is_empty())
 1158              		.loc 1 375 5 view .LVU303
 1159              		.loc 1 375 10 is_stmt 0 view .LVU304
 1160 008a FFF7FEFF 		bl	planner_buffer_is_empty
 1161              	.LVL108:
 1162              		.loc 1 375 8 view .LVU305
 1163 008e 20B9     		cbnz	r0, .L80
 376:../../planner.c ****     {
 377:../../planner.c ****         prev = planner_buffer_prev(planner_data_write); //BUFFER_PTR(planner_buffer, prev_index);
 1164              		.loc 1 377 9 is_stmt 1 view .LVU306
 1165              	.LVL109:
 1166              	.LBB55:
 1167              	.LBI55:
  87:../../planner.c **** {
 1168              		.loc 1 87 23 view .LVU307
 1169              	.LBB56:
  89:../../planner.c ****     {
 1170              		.loc 1 89 5 view .LVU308
  89:../../planner.c ****     {
 1171              		.loc 1 89 8 is_stmt 0 view .LVU309
 1172 0090 04B9     		cbnz	r4, .L81
  91:../../planner.c ****     }
 1173              		.loc 1 91 15 view .LVU310
 1174 0092 0F24     		movs	r4, #15
 1175              	.LVL110:
 1176              	.L81:
  94:../../planner.c **** }
 1177              		.loc 1 94 5 is_stmt 1 view .LVU311
  94:../../planner.c **** }
 1178              		.loc 1 94 12 is_stmt 0 view .LVU312
 1179 0094 013C     		subs	r4, r4, #1
 1180              	.LVL111:
  94:../../planner.c **** }
 1181              		.loc 1 94 12 view .LVU313
 1182 0096 E3B2     		uxtb	r3, r4
 1183 0098 0293     		str	r3, [sp, #8]
 1184              	.LVL112:
 1185              	.L80:
  94:../../planner.c **** }
 1186              		.loc 1 94 12 view .LVU314
 1187              	.LBE56:
 1188              	.LBE55:
 378:../../planner.c ****     }
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 30


 379:../../planner.c **** 
 380:../../planner.c ****     //calculates (given the motion direction), the maximum acceleration an feed allowed by the mach
 381:../../planner.c ****     float rapid_feed = FLT_MAX;
 1189              		.loc 1 381 5 is_stmt 1 view .LVU315
 382:../../planner.c ****     planner_data[planner_data_write].acceleration = FLT_MAX;
 1190              		.loc 1 382 5 view .LVU316
 1191              		.loc 1 382 51 is_stmt 0 view .LVU317
 1192 009a 05EB4503 		add	r3, r5, r5, lsl #1
 1193 009e 844A     		ldr	r2, .L118+4
 1194 00a0 02EB0313 		add	r3, r2, r3, lsl #4
 1195 00a4 DFF824A2 		ldr	r10, .L118+32
 1196 00a8 C3F824A0 		str	r10, [r3, #36]	@ float
 383:../../planner.c ****     for (uint8_t i = AXIS_COUNT; i != 0;)
 1197              		.loc 1 383 5 is_stmt 1 view .LVU318
 1198              	.LBB57:
 1199              		.loc 1 383 10 view .LVU319
 1200              	.LVL113:
 1201              		.loc 1 383 18 is_stmt 0 view .LVU320
 1202 00ac 0324     		movs	r4, #3
 1203              	.LBE57:
 372:../../planner.c ****     uint8_t prev = 0;
 1204              		.loc 1 372 11 view .LVU321
 1205 00ae 0023     		movs	r3, #0
 1206 00b0 0193     		str	r3, [sp, #4]	@ float
 1207              	.LBB60:
 1208              		.loc 1 383 5 view .LVU322
 1209 00b2 13E0     		b	.L82
 1210              	.LVL114:
 1211              	.L113:
 1212              	.LBB58:
 384:../../planner.c ****     {
 385:../../planner.c ****         i--;
 386:../../planner.c ****         //if target doesn't move skip computations
 387:../../planner.c ****         if (block_data.dir_vect[i] != 0)
 388:../../planner.c ****         {
 389:../../planner.c ****             block_data.dir_vect[i] *= inv_magn;
 390:../../planner.c ****             float dir_axis_abs = 1.0f / block_data.dir_vect[i];
 391:../../planner.c ****             if (block_data.dir_vect[i] < 0) //sets direction bits
 392:../../planner.c ****             {
 393:../../planner.c ****                 SETBIT(planner_data[planner_data_write].dirbits, i);
 1213              		.loc 1 393 17 is_stmt 1 view .LVU323
 1214 00b4 0122     		movs	r2, #1
 1215 00b6 02FA04F1 		lsl	r1, r2, r4
 1216 00ba 7D48     		ldr	r0, .L118+4
 1217 00bc 05EB4503 		add	r3, r5, r5, lsl #1
 1218 00c0 1B01     		lsls	r3, r3, #4
 1219 00c2 C25C     		ldrb	r2, [r0, r3]	@ zero_extendqisi2
 1220 00c4 0A43     		orrs	r2, r2, r1
 1221 00c6 C254     		strb	r2, [r0, r3]
 394:../../planner.c ****                 dir_axis_abs = -dir_axis_abs;
 1222              		.loc 1 394 17 view .LVU324
 1223              		.loc 1 394 30 is_stmt 0 view .LVU325
 1224 00c8 08F10048 		add	r8, r8, #-2147483648
 1225              	.LVL115:
 1226              		.loc 1 394 30 view .LVU326
 1227 00cc 2BE0     		b	.L85
 1228              	.LVL116:
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 31


 1229              	.L89:
 395:../../planner.c ****             }
 396:../../planner.c **** 
 397:../../planner.c ****             if (!planner_buffer_is_empty())
 398:../../planner.c ****             {
 399:../../planner.c ****                 cos_theta += block_data.dir_vect[i] * prev_dir_vect[i];
 400:../../planner.c ****             }
 401:../../planner.c **** 
 402:../../planner.c ****             //calcs maximum allowable speed for this diretion
 403:../../planner.c ****             float axis_speed = g_settings.max_feed_rate[i] * dir_axis_abs;
 404:../../planner.c ****             rapid_feed = MIN(rapid_feed, axis_speed);
 405:../../planner.c ****             //calcs maximum allowable acceleration for this direction
 406:../../planner.c ****             float axis_accel = g_settings.acceleration[i] * dir_axis_abs;
 407:../../planner.c ****             planner_data[planner_data_write].acceleration = MIN(planner_data[planner_data_write].ac
 1230              		.loc 1 407 59 discriminator 4 view .LVU327
 1231 00ce 05EB4503 		add	r3, r5, r5, lsl #1
 1232 00d2 774A     		ldr	r2, .L118+4
 1233 00d4 02EB0313 		add	r3, r2, r3, lsl #4
 1234 00d8 C3F82480 		str	r8, [r3, #36]	@ float
 1235              	.LVL117:
 1236              	.L82:
 1237              		.loc 1 407 59 discriminator 4 view .LVU328
 1238              	.LBE58:
 383:../../planner.c ****     {
 1239              		.loc 1 383 34 is_stmt 1 discriminator 1 view .LVU329
 383:../../planner.c ****     {
 1240              		.loc 1 383 5 is_stmt 0 discriminator 1 view .LVU330
 1241 00dc 002C     		cmp	r4, #0
 1242 00de 57D0     		beq	.L112
 385:../../planner.c ****         //if target doesn't move skip computations
 1243              		.loc 1 385 9 is_stmt 1 view .LVU331
 385:../../planner.c ****         //if target doesn't move skip computations
 1244              		.loc 1 385 10 is_stmt 0 view .LVU332
 1245 00e0 013C     		subs	r4, r4, #1
 1246              	.LVL118:
 385:../../planner.c ****         //if target doesn't move skip computations
 1247              		.loc 1 385 10 view .LVU333
 1248 00e2 E4B2     		uxtb	r4, r4
 1249              	.LVL119:
 387:../../planner.c ****         {
 1250              		.loc 1 387 9 is_stmt 1 view .LVU334
 387:../../planner.c ****         {
 1251              		.loc 1 387 32 is_stmt 0 view .LVU335
 1252 00e4 2746     		mov	r7, r4
 1253 00e6 0EAB     		add	r3, sp, #56
 1254 00e8 03EB8403 		add	r3, r3, r4, lsl #2
 1255 00ec D3F80480 		ldr	r8, [r3, #4]	@ float
 387:../../planner.c ****         {
 1256              		.loc 1 387 12 view .LVU336
 1257 00f0 0021     		movs	r1, #0
 1258 00f2 4046     		mov	r0, r8
 1259 00f4 FFF7FEFF 		bl	__aeabi_fcmpeq
 1260              	.LVL120:
 1261 00f8 0028     		cmp	r0, #0
 1262 00fa EFD1     		bne	.L82
 1263              	.LBB59:
 389:../../planner.c ****             float dir_axis_abs = 1.0f / block_data.dir_vect[i];
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 32


 1264              		.loc 1 389 13 is_stmt 1 view .LVU337
 389:../../planner.c ****             float dir_axis_abs = 1.0f / block_data.dir_vect[i];
 1265              		.loc 1 389 36 is_stmt 0 view .LVU338
 1266 00fc 0399     		ldr	r1, [sp, #12]	@ float
 1267 00fe 4046     		mov	r0, r8
 1268 0100 FFF7FEFF 		bl	__aeabi_fmul
 1269              	.LVL121:
 1270 0104 8146     		mov	r9, r0
 1271 0106 0EAB     		add	r3, sp, #56
 1272 0108 03EB8403 		add	r3, r3, r4, lsl #2
 1273 010c 5860     		str	r0, [r3, #4]	@ float
 390:../../planner.c ****             if (block_data.dir_vect[i] < 0) //sets direction bits
 1274              		.loc 1 390 13 is_stmt 1 view .LVU339
 390:../../planner.c ****             if (block_data.dir_vect[i] < 0) //sets direction bits
 1275              		.loc 1 390 19 is_stmt 0 view .LVU340
 1276 010e 0146     		mov	r1, r0
 1277 0110 4FF07E50 		mov	r0, #1065353216
 1278 0114 FFF7FEFF 		bl	__aeabi_fdiv
 1279              	.LVL122:
 1280 0118 8046     		mov	r8, r0
 1281              	.LVL123:
 391:../../planner.c ****             {
 1282              		.loc 1 391 13 is_stmt 1 view .LVU341
 391:../../planner.c ****             {
 1283              		.loc 1 391 16 is_stmt 0 view .LVU342
 1284 011a 0021     		movs	r1, #0
 1285 011c 4846     		mov	r0, r9
 1286              	.LVL124:
 391:../../planner.c ****             {
 1287              		.loc 1 391 16 view .LVU343
 1288 011e FFF7FEFF 		bl	__aeabi_fcmplt
 1289              	.LVL125:
 1290 0122 0028     		cmp	r0, #0
 1291 0124 C6D1     		bne	.L113
 1292              	.LVL126:
 1293              	.L85:
 397:../../planner.c ****             {
 1294              		.loc 1 397 13 is_stmt 1 view .LVU344
 397:../../planner.c ****             {
 1295              		.loc 1 397 18 is_stmt 0 view .LVU345
 1296 0126 FFF7FEFF 		bl	planner_buffer_is_empty
 1297              	.LVL127:
 397:../../planner.c ****             {
 1298              		.loc 1 397 16 view .LVU346
 1299 012a 50B9     		cbnz	r0, .L87
 399:../../planner.c ****             }
 1300              		.loc 1 399 17 is_stmt 1 view .LVU347
 399:../../planner.c ****             }
 1301              		.loc 1 399 53 is_stmt 0 view .LVU348
 1302 012c 624B     		ldr	r3, .L118+12
 1303 012e 53F82710 		ldr	r1, [r3, r7, lsl #2]	@ float
 1304 0132 4846     		mov	r0, r9
 1305 0134 FFF7FEFF 		bl	__aeabi_fmul
 1306              	.LVL128:
 1307 0138 0146     		mov	r1, r0
 399:../../planner.c ****             }
 1308              		.loc 1 399 27 view .LVU349
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 33


 1309 013a 0198     		ldr	r0, [sp, #4]	@ float
 1310 013c FFF7FEFF 		bl	__aeabi_fadd
 1311              	.LVL129:
 1312 0140 0190     		str	r0, [sp, #4]	@ float
 1313              	.LVL130:
 1314              	.L87:
 403:../../planner.c ****             rapid_feed = MIN(rapid_feed, axis_speed);
 1315              		.loc 1 403 13 is_stmt 1 view .LVU350
 403:../../planner.c ****             rapid_feed = MIN(rapid_feed, axis_speed);
 1316              		.loc 1 403 56 is_stmt 0 view .LVU351
 1317 0142 07F10E03 		add	r3, r7, #14
 1318 0146 5D4A     		ldr	r2, .L118+16
 1319 0148 02EB8303 		add	r3, r2, r3, lsl #2
 403:../../planner.c ****             rapid_feed = MIN(rapid_feed, axis_speed);
 1320              		.loc 1 403 19 view .LVU352
 1321 014c 4146     		mov	r1, r8
 1322 014e 5868     		ldr	r0, [r3, #4]	@ float
 1323 0150 FFF7FEFF 		bl	__aeabi_fmul
 1324              	.LVL131:
 1325 0154 8146     		mov	r9, r0
 1326              	.LVL132:
 404:../../planner.c ****             //calcs maximum allowable acceleration for this direction
 1327              		.loc 1 404 13 is_stmt 1 view .LVU353
 404:../../planner.c ****             //calcs maximum allowable acceleration for this direction
 1328              		.loc 1 404 26 is_stmt 0 view .LVU354
 1329 0156 0146     		mov	r1, r0
 1330 0158 5046     		mov	r0, r10
 1331              	.LVL133:
 404:../../planner.c ****             //calcs maximum allowable acceleration for this direction
 1332              		.loc 1 404 26 view .LVU355
 1333 015a FFF7FEFF 		bl	__aeabi_fcmplt
 1334              	.LVL134:
 404:../../planner.c ****             //calcs maximum allowable acceleration for this direction
 1335              		.loc 1 404 26 view .LVU356
 1336 015e 00B9     		cbnz	r0, .L88
 1337 0160 CA46     		mov	r10, r9
 1338              	.LVL135:
 1339              	.L88:
 406:../../planner.c ****             planner_data[planner_data_write].acceleration = MIN(planner_data[planner_data_write].ac
 1340              		.loc 1 406 13 is_stmt 1 discriminator 4 view .LVU357
 406:../../planner.c ****             planner_data[planner_data_write].acceleration = MIN(planner_data[planner_data_write].ac
 1341              		.loc 1 406 55 is_stmt 0 discriminator 4 view .LVU358
 1342 0162 1237     		adds	r7, r7, #18
 406:../../planner.c ****             planner_data[planner_data_write].acceleration = MIN(planner_data[planner_data_write].ac
 1343              		.loc 1 406 19 discriminator 4 view .LVU359
 1344 0164 4146     		mov	r1, r8
 1345 0166 554B     		ldr	r3, .L118+16
 1346 0168 53F82700 		ldr	r0, [r3, r7, lsl #2]	@ float
 1347 016c FFF7FEFF 		bl	__aeabi_fmul
 1348              	.LVL136:
 1349 0170 0746     		mov	r7, r0
 1350              	.LVL137:
 1351              		.loc 1 407 13 is_stmt 1 discriminator 4 view .LVU360
 1352              		.loc 1 407 61 is_stmt 0 discriminator 4 view .LVU361
 1353 0172 05EB4503 		add	r3, r5, r5, lsl #1
 1354 0176 4E4A     		ldr	r2, .L118+4
 1355 0178 02EB0313 		add	r3, r2, r3, lsl #4
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 34


 1356 017c D3F82480 		ldr	r8, [r3, #36]	@ float
 1357              	.LVL138:
 1358              		.loc 1 407 61 discriminator 4 view .LVU362
 1359 0180 0146     		mov	r1, r0
 1360 0182 4046     		mov	r0, r8
 1361              	.LVL139:
 1362              		.loc 1 407 61 discriminator 4 view .LVU363
 1363 0184 FFF7FEFF 		bl	__aeabi_fcmplt
 1364              	.LVL140:
 1365              		.loc 1 407 61 discriminator 4 view .LVU364
 1366 0188 0028     		cmp	r0, #0
 1367 018a A0D1     		bne	.L89
 1368              		.loc 1 407 61 view .LVU365
 1369 018c B846     		mov	r8, r7
 1370 018e 9EE7     		b	.L89
 1371              	.LVL141:
 1372              	.L112:
 1373              		.loc 1 407 61 view .LVU366
 1374              	.LBE59:
 1375              	.LBE60:
 408:../../planner.c ****         }
 409:../../planner.c ****     }
 410:../../planner.c **** 
 411:../../planner.c ****     planner_data[planner_data_write].accel_inv = 1.0f / planner_data[planner_data_write].accelerati
 1376              		.loc 1 411 5 is_stmt 1 view .LVU367
 1377              		.loc 1 411 89 is_stmt 0 view .LVU368
 1378 0190 05EB4504 		add	r4, r5, r5, lsl #1
 1379              	.LVL142:
 1380              		.loc 1 411 89 view .LVU369
 1381 0194 464B     		ldr	r3, .L118+4
 1382 0196 03EB0414 		add	r4, r3, r4, lsl #4
 1383              		.loc 1 411 55 view .LVU370
 1384 019a 616A     		ldr	r1, [r4, #36]	@ float
 1385 019c 4FF07E50 		mov	r0, #1065353216
 1386 01a0 FFF7FEFF 		bl	__aeabi_fdiv
 1387              	.LVL143:
 1388              		.loc 1 411 48 view .LVU371
 1389 01a4 A062     		str	r0, [r4, #40]	@ float
 412:../../planner.c ****     //reduces target speed if exceeds the maximum allowed speed in the current direction
 413:../../planner.c ****     rapid_feed *= MIN_SEC_MULT; //converto to mm/s
 1390              		.loc 1 413 5 is_stmt 1 view .LVU372
 1391              		.loc 1 413 16 is_stmt 0 view .LVU373
 1392 01a6 5046     		mov	r0, r10
 1393 01a8 FFF7FEFF 		bl	__aeabi_f2d
 1394              	.LVL144:
 1395 01ac 4FF01132 		mov	r2, #286331153
 1396 01b0 434B     		ldr	r3, .L118+20
 1397 01b2 FFF7FEFF 		bl	__aeabi_dmul
 1398              	.LVL145:
 1399 01b6 FFF7FEFF 		bl	__aeabi_d2f
 1400              	.LVL146:
 1401 01ba 0446     		mov	r4, r0
 1402              	.LVL147:
 414:../../planner.c ****     if (block_data.feed > rapid_feed)
 1403              		.loc 1 414 5 is_stmt 1 view .LVU374
 1404              		.loc 1 414 8 is_stmt 0 view .LVU375
 1405 01bc 0146     		mov	r1, r0
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 35


 1406 01be 1398     		ldr	r0, [sp, #76]	@ float
 1407              	.LVL148:
 1408              		.loc 1 414 8 view .LVU376
 1409 01c0 FFF7FEFF 		bl	__aeabi_fcmpgt
 1410              	.LVL149:
 1411              		.loc 1 414 8 view .LVU377
 1412 01c4 00B1     		cbz	r0, .L91
 415:../../planner.c ****     {
 416:../../planner.c ****         block_data.feed = rapid_feed;
 1413              		.loc 1 416 9 is_stmt 1 view .LVU378
 1414              		.loc 1 416 25 is_stmt 0 view .LVU379
 1415 01c6 1394     		str	r4, [sp, #76]	@ float
 1416              	.L91:
 417:../../planner.c ****     }
 418:../../planner.c **** 
 419:../../planner.c ****     planner_data[planner_data_write].feed_sqr = (block_data.feed * block_data.feed);
 1417              		.loc 1 419 5 is_stmt 1 view .LVU380
 1418              		.loc 1 419 60 is_stmt 0 view .LVU381
 1419 01c8 1398     		ldr	r0, [sp, #76]	@ float
 1420              		.loc 1 419 66 view .LVU382
 1421 01ca 0146     		mov	r1, r0
 1422 01cc FFF7FEFF 		bl	__aeabi_fmul
 1423              	.LVL150:
 1424              		.loc 1 419 47 view .LVU383
 1425 01d0 374F     		ldr	r7, .L118+4
 1426 01d2 4FEA4508 		lsl	r8, r5, #1
 1427 01d6 05EB4503 		add	r3, r5, r5, lsl #1
 1428 01da 07EB0313 		add	r3, r7, r3, lsl #4
 1429 01de D861     		str	r0, [r3, #28]	@ float
 420:../../planner.c ****     planner_data[planner_data_write].rapid_feed_sqr = rapid_feed * rapid_feed;
 1430              		.loc 1 420 5 is_stmt 1 view .LVU384
 1431              		.loc 1 420 66 is_stmt 0 view .LVU385
 1432 01e0 2146     		mov	r1, r4
 1433 01e2 2046     		mov	r0, r4
 1434 01e4 FFF7FEFF 		bl	__aeabi_fmul
 1435              	.LVL151:
 1436              		.loc 1 420 53 view .LVU386
 1437 01e8 4544     		add	r5, r5, r8
 1438 01ea 07EB0517 		add	r7, r7, r5, lsl #4
 1439 01ee 3862     		str	r0, [r7, #32]	@ float
 421:../../planner.c ****     //consider initial angle factor of 1 (90� corner or more)
 422:../../planner.c ****     float angle_factor = 1;
 1440              		.loc 1 422 5 is_stmt 1 view .LVU387
 1441              	.LVL152:
 423:../../planner.c **** 
 424:../../planner.c ****     //if more than one move stored cals juntion speeds and recalculates speed profiles
 425:../../planner.c ****     if (!planner_buffer_is_empty() && !CHECKFLAG(block_data.motion_mode, PLANNER_MOTION_EXACT_STOP)
 1442              		.loc 1 425 5 view .LVU388
 1443              		.loc 1 425 10 is_stmt 0 view .LVU389
 1444 01f0 FFF7FEFF 		bl	planner_buffer_is_empty
 1445              	.LVL153:
 1446              		.loc 1 425 8 view .LVU390
 1447 01f4 00BB     		cbnz	r0, .L93
 1448              		.loc 1 425 36 discriminator 1 view .LVU391
 1449 01f6 1BF0400F 		tst	fp, #64
 1450 01fa 1DD1     		bne	.L93
 1451              	.LBB61:
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 36


 426:../../planner.c ****     {
 427:../../planner.c ****         //calculates the junction angle with previous
 428:../../planner.c ****         if (cos_theta > 0)
 1452              		.loc 1 428 9 is_stmt 1 view .LVU392
 1453              		.loc 1 428 12 is_stmt 0 view .LVU393
 1454 01fc 0021     		movs	r1, #0
 1455 01fe 019D     		ldr	r5, [sp, #4]	@ float
 1456 0200 2846     		mov	r0, r5
 1457 0202 FFF7FEFF 		bl	__aeabi_fcmpgt
 1458              	.LVL154:
 1459 0206 0028     		cmp	r0, #0
 1460 0208 30D1     		bne	.L114
 1461              	.LBE61:
 422:../../planner.c **** 
 1462              		.loc 1 422 11 view .LVU394
 1463 020a 4FF07E50 		mov	r0, #1065353216
 1464              	.LVL155:
 1465              	.L94:
 1466              	.LBB63:
 429:../../planner.c ****         {
 430:../../planner.c ****             //uses the half angle identity conversion to convert from cos(theta) to tan(theta/2) wh
 431:../../planner.c ****             //	tan(theta/2) = sqrt((1-cos(theta)/(1+cos(theta))
 432:../../planner.c ****             //to simplify the calculations it multiplies by sqrt((1+cos(theta)/(1+cos(theta))
 433:../../planner.c ****             //transforming the equation to sqrt((1^2-cos(theta)^2))/(1+cos(theta))
 434:../../planner.c ****             //this way the output will be between 0<tan(theta/2)<inf
 435:../../planner.c ****             //but if theta is 0<theta<90 the tan(theta/2) will be 0<tan(theta/2)<1
 436:../../planner.c ****             //all angles greater than 1 that can be excluded
 437:../../planner.c ****             angle_factor = 1.0f / (1.0f + cos_theta);
 438:../../planner.c ****             cos_theta = (1.0f - cos_theta * cos_theta);
 439:../../planner.c ****             angle_factor *= fast_sqrt(cos_theta);
 440:../../planner.c ****         }
 441:../../planner.c **** 
 442:../../planner.c ****         //sets the maximum allowed speed at junction (if angle doesn't force a full stop)
 443:../../planner.c ****         float factor = ((!CHECKFLAG(block_data.motion_mode, PLANNER_MOTION_CONTINUOUS)) ? 0 : G64_M
 1467              		.loc 1 443 9 is_stmt 1 view .LVU395
 1468              		.loc 1 443 93 is_stmt 0 view .LVU396
 1469 020e 1BF0800F 		tst	fp, #128
 1470 0212 46D1     		bne	.L104
 1471 0214 0021     		movs	r1, #0
 1472              	.L96:
 1473              	.LVL156:
 444:../../planner.c ****         angle_factor = MAX(angle_factor - factor, 0);
 1474              		.loc 1 444 9 is_stmt 1 discriminator 4 view .LVU397
 1475              		.loc 1 444 24 is_stmt 0 discriminator 4 view .LVU398
 1476 0216 FFF7FEFF 		bl	__aeabi_fsub
 1477              	.LVL157:
 1478              		.loc 1 444 24 discriminator 4 view .LVU399
 1479 021a 0446     		mov	r4, r0
 1480 021c 0021     		movs	r1, #0
 1481 021e FFF7FEFF 		bl	__aeabi_fcmpgt
 1482              	.LVL158:
 1483 0222 0028     		cmp	r0, #0
 1484 0224 3FD0     		beq	.L115
 1485              	.L97:
 1486              	.LVL159:
 445:../../planner.c **** 
 446:../../planner.c ****         if (angle_factor < 1.0f)
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 37


 1487              		.loc 1 446 9 is_stmt 1 discriminator 4 view .LVU400
 1488              		.loc 1 446 12 is_stmt 0 discriminator 4 view .LVU401
 1489 0226 4FF07E51 		mov	r1, #1065353216
 1490 022a 2046     		mov	r0, r4
 1491 022c FFF7FEFF 		bl	__aeabi_fcmplt
 1492              	.LVL160:
 1493 0230 0028     		cmp	r0, #0
 1494 0232 4DD1     		bne	.L116
 1495              	.LVL161:
 1496              	.L98:
 447:../../planner.c ****         {
 448:../../planner.c ****             float junc_feed_sqr = (1 - angle_factor);
 449:../../planner.c ****             junc_feed_sqr *= junc_feed_sqr;
 450:../../planner.c ****             junc_feed_sqr *= planner_data[prev].feed_sqr;
 451:../../planner.c ****             //the maximum feed is the minimal feed between the previous feed given the angle and th
 452:../../planner.c ****             planner_data[planner_data_write].entry_max_feed_sqr = MIN(planner_data[planner_data_wri
 453:../../planner.c ****         }
 454:../../planner.c **** 
 455:../../planner.c ****         //forces reaclculation with the new block
 456:../../planner.c ****         planner_recalculate();
 1497              		.loc 1 456 9 is_stmt 1 view .LVU402
 1498 0234 FFF7FEFF 		bl	planner_recalculate
 1499              	.LVL162:
 1500              	.L93:
 1501              		.loc 1 456 9 is_stmt 0 view .LVU403
 1502              	.LBE63:
 457:../../planner.c ****     }
 458:../../planner.c **** 
 459:../../planner.c ****     //advances the buffer
 460:../../planner.c ****     planner_buffer_write();
 1503              		.loc 1 460 5 is_stmt 1 view .LVU404
 1504              	.LBB64:
 1505              	.LBI64:
  68:../../planner.c **** {
 1506              		.loc 1 68 20 view .LVU405
 1507              	.LBB65:
  70:../../planner.c ****     if (++planner_data_write == PLANNER_BUFFER_SIZE)
 1508              		.loc 1 70 5 view .LVU406
  70:../../planner.c ****     if (++planner_data_write == PLANNER_BUFFER_SIZE)
 1509              		.loc 1 70 23 is_stmt 0 view .LVU407
 1510 0238 1E4A     		ldr	r2, .L118+8
 1511 023a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1512 023c 013B     		subs	r3, r3, #1
 1513 023e 1370     		strb	r3, [r2]
  71:../../planner.c ****     {
 1514              		.loc 1 71 5 is_stmt 1 view .LVU408
  71:../../planner.c ****     {
 1515              		.loc 1 71 9 is_stmt 0 view .LVU409
 1516 0240 1A4A     		ldr	r2, .L118
 1517 0242 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1518 0244 0133     		adds	r3, r3, #1
 1519 0246 DBB2     		uxtb	r3, r3
  71:../../planner.c ****     {
 1520              		.loc 1 71 8 view .LVU410
 1521 0248 1370     		strb	r3, [r2]
 1522 024a 0F2B     		cmp	r3, #15
 1523 024c 67D0     		beq	.L117
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 38


 1524              	.L101:
 1525              	.LBE65:
 1526              	.LBE64:
 461:../../planner.c ****     //updates the current planner coordinates
 462:../../planner.c ****     memcpy(&planner_coord, target, sizeof(planner_coord));
 1527              		.loc 1 462 5 is_stmt 1 view .LVU411
 1528 024e 1D4B     		ldr	r3, .L118+24
 1529 0250 3068     		ldr	r0, [r6]	@ unaligned
 1530 0252 7168     		ldr	r1, [r6, #4]	@ unaligned
 1531 0254 B268     		ldr	r2, [r6, #8]	@ unaligned
 1532 0256 07C3     		stmia	r3!, {r0, r1, r2}
 463:../../planner.c ****     //updates the previous dir vect
 464:../../planner.c ****     memcpy(&prev_dir_vect, block_data.dir_vect, sizeof(prev_dir_vect));
 1533              		.loc 1 464 5 view .LVU412
 1534 0258 174B     		ldr	r3, .L118+12
 1535 025a 0FAA     		add	r2, sp, #60
 1536 025c 07CA     		ldm	r2, {r0, r1, r2}
 1537 025e 83E80700 		stm	r3, {r0, r1, r2}
 1538              	.LVL163:
 1539              	.L76:
 465:../../planner.c **** }
 1540              		.loc 1 465 1 is_stmt 0 view .LVU413
 1541 0262 05B0     		add	sp, sp, #20
 1542              	.LCFI6:
 1543              		.cfi_remember_state
 1544              		.cfi_def_cfa_offset 52
 1545              		@ sp needed
 1546 0264 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1547              	.LCFI7:
 1548              		.cfi_restore 14
 1549              		.cfi_restore 11
 1550              		.cfi_restore 10
 1551              		.cfi_restore 9
 1552              		.cfi_restore 8
 1553              		.cfi_restore 7
 1554              		.cfi_restore 6
 1555              		.cfi_restore 5
 1556              		.cfi_restore 4
 1557              		.cfi_def_cfa_offset 16
 1558              	.LVL164:
 1559              		.loc 1 465 1 view .LVU414
 1560 0268 04B0     		add	sp, sp, #16
 1561              	.LCFI8:
 1562              		.cfi_def_cfa_offset 0
 1563 026a 7047     		bx	lr
 1564              	.LVL165:
 1565              	.L114:
 1566              	.LCFI9:
 1567              		.cfi_restore_state
 1568              	.LBB67:
 437:../../planner.c ****             cos_theta = (1.0f - cos_theta * cos_theta);
 1569              		.loc 1 437 13 is_stmt 1 view .LVU415
 437:../../planner.c ****             cos_theta = (1.0f - cos_theta * cos_theta);
 1570              		.loc 1 437 41 is_stmt 0 view .LVU416
 1571 026c 4FF07E51 		mov	r1, #1065353216
 1572 0270 2846     		mov	r0, r5
 1573 0272 FFF7FEFF 		bl	__aeabi_fadd
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 39


 1574              	.LVL166:
 1575 0276 0146     		mov	r1, r0
 437:../../planner.c ****             cos_theta = (1.0f - cos_theta * cos_theta);
 1576              		.loc 1 437 26 view .LVU417
 1577 0278 4FF07E50 		mov	r0, #1065353216
 1578 027c FFF7FEFF 		bl	__aeabi_fdiv
 1579              	.LVL167:
 1580 0280 0446     		mov	r4, r0
 1581              	.LVL168:
 438:../../planner.c ****             angle_factor *= fast_sqrt(cos_theta);
 1582              		.loc 1 438 13 is_stmt 1 view .LVU418
 438:../../planner.c ****             angle_factor *= fast_sqrt(cos_theta);
 1583              		.loc 1 438 43 is_stmt 0 view .LVU419
 1584 0282 2946     		mov	r1, r5
 1585 0284 2846     		mov	r0, r5
 1586              	.LVL169:
 438:../../planner.c ****             angle_factor *= fast_sqrt(cos_theta);
 1587              		.loc 1 438 43 view .LVU420
 1588 0286 FFF7FEFF 		bl	__aeabi_fmul
 1589              	.LVL170:
 1590 028a 0146     		mov	r1, r0
 438:../../planner.c ****             angle_factor *= fast_sqrt(cos_theta);
 1591              		.loc 1 438 23 view .LVU421
 1592 028c 4FF07E50 		mov	r0, #1065353216
 1593 0290 FFF7FEFF 		bl	__aeabi_fsub
 1594              	.LVL171:
 439:../../planner.c ****         }
 1595              		.loc 1 439 13 is_stmt 1 view .LVU422
 439:../../planner.c ****         }
 1596              		.loc 1 439 29 is_stmt 0 view .LVU423
 1597 0294 FFF7FEFF 		bl	sqrtf
 1598              	.LVL172:
 439:../../planner.c ****         }
 1599              		.loc 1 439 29 view .LVU424
 1600 0298 0146     		mov	r1, r0
 439:../../planner.c ****         }
 1601              		.loc 1 439 26 view .LVU425
 1602 029a 2046     		mov	r0, r4
 1603 029c FFF7FEFF 		bl	__aeabi_fmul
 1604              	.LVL173:
 439:../../planner.c ****         }
 1605              		.loc 1 439 26 view .LVU426
 1606 02a0 B5E7     		b	.L94
 1607              	.L104:
 443:../../planner.c ****         angle_factor = MAX(angle_factor - factor, 0);
 1608              		.loc 1 443 93 view .LVU427
 1609 02a2 0949     		ldr	r1, .L118+28
 1610 02a4 B7E7     		b	.L96
 1611              	.LVL174:
 1612              	.L115:
 444:../../planner.c **** 
 1613              		.loc 1 444 24 view .LVU428
 1614 02a6 0024     		movs	r4, #0
 1615 02a8 BDE7     		b	.L97
 1616              	.L119:
 1617 02aa 00BF     		.align	2
 1618              	.L118:
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 40


 1619 02ac 00000000 		.word	.LANCHOR1
 1620 02b0 00000000 		.word	.LANCHOR4
 1621 02b4 00000000 		.word	.LANCHOR0
 1622 02b8 00000000 		.word	.LANCHOR5
 1623 02bc 00000000 		.word	g_settings
 1624 02c0 1111913F 		.word	1066471697
 1625 02c4 00000000 		.word	.LANCHOR6
 1626 02c8 CDCC4C3E 		.word	1045220557
 1627 02cc FFFF7F7F 		.word	2139095039
 1628              	.LVL175:
 1629              	.L116:
 1630              	.LBB62:
 448:../../planner.c ****             junc_feed_sqr *= junc_feed_sqr;
 1631              		.loc 1 448 13 is_stmt 1 view .LVU429
 448:../../planner.c ****             junc_feed_sqr *= junc_feed_sqr;
 1632              		.loc 1 448 19 is_stmt 0 view .LVU430
 1633 02d0 2146     		mov	r1, r4
 1634 02d2 4FF07E50 		mov	r0, #1065353216
 1635 02d6 FFF7FEFF 		bl	__aeabi_fsub
 1636              	.LVL176:
 1637 02da 0146     		mov	r1, r0
 1638              	.LVL177:
 449:../../planner.c ****             junc_feed_sqr *= planner_data[prev].feed_sqr;
 1639              		.loc 1 449 13 is_stmt 1 view .LVU431
 449:../../planner.c ****             junc_feed_sqr *= planner_data[prev].feed_sqr;
 1640              		.loc 1 449 27 is_stmt 0 view .LVU432
 1641 02dc FFF7FEFF 		bl	__aeabi_fmul
 1642              	.LVL178:
 449:../../planner.c ****             junc_feed_sqr *= planner_data[prev].feed_sqr;
 1643              		.loc 1 449 27 view .LVU433
 1644 02e0 0146     		mov	r1, r0
 1645              	.LVL179:
 450:../../planner.c ****             //the maximum feed is the minimal feed between the previous feed given the angle and th
 1646              		.loc 1 450 13 is_stmt 1 view .LVU434
 450:../../planner.c ****             //the maximum feed is the minimal feed between the previous feed given the angle and th
 1647              		.loc 1 450 48 is_stmt 0 view .LVU435
 1648 02e2 114D     		ldr	r5, .L120
 1649 02e4 029B     		ldr	r3, [sp, #8]
 1650 02e6 03EB4303 		add	r3, r3, r3, lsl #1
 1651 02ea 05EB0313 		add	r3, r5, r3, lsl #4
 450:../../planner.c ****             //the maximum feed is the minimal feed between the previous feed given the angle and th
 1652              		.loc 1 450 27 view .LVU436
 1653 02ee D869     		ldr	r0, [r3, #28]	@ float
 1654              	.LVL180:
 450:../../planner.c ****             //the maximum feed is the minimal feed between the previous feed given the angle and th
 1655              		.loc 1 450 27 view .LVU437
 1656 02f0 FFF7FEFF 		bl	__aeabi_fmul
 1657              	.LVL181:
 450:../../planner.c ****             //the maximum feed is the minimal feed between the previous feed given the angle and th
 1658              		.loc 1 450 27 view .LVU438
 1659 02f4 0746     		mov	r7, r0
 1660              	.LVL182:
 452:../../planner.c ****         }
 1661              		.loc 1 452 13 is_stmt 1 view .LVU439
 452:../../planner.c ****         }
 1662              		.loc 1 452 67 is_stmt 0 view .LVU440
 1663 02f6 0D4B     		ldr	r3, .L120+4
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 41


 1664 02f8 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1665              	.LVL183:
 452:../../planner.c ****         }
 1666              		.loc 1 452 67 view .LVU441
 1667 02fa 04EB4403 		add	r3, r4, r4, lsl #1
 1668 02fe 05EB0315 		add	r5, r5, r3, lsl #4
 1669 0302 ED69     		ldr	r5, [r5, #28]	@ float
 1670 0304 0146     		mov	r1, r0
 1671 0306 2846     		mov	r0, r5
 1672              	.LVL184:
 452:../../planner.c ****         }
 1673              		.loc 1 452 67 view .LVU442
 1674 0308 FFF7FEFF 		bl	__aeabi_fcmplt
 1675              	.LVL185:
 452:../../planner.c ****         }
 1676              		.loc 1 452 67 view .LVU443
 1677 030c 00B9     		cbnz	r0, .L100
 1678 030e 3D46     		mov	r5, r7
 1679              	.L100:
 452:../../planner.c ****         }
 1680              		.loc 1 452 65 discriminator 4 view .LVU444
 1681 0310 04EB4404 		add	r4, r4, r4, lsl #1
 1682 0314 044B     		ldr	r3, .L120
 1683 0316 03EB0414 		add	r4, r3, r4, lsl #4
 1684 031a A561     		str	r5, [r4, #24]	@ float
 1685 031c 8AE7     		b	.L98
 1686              	.LVL186:
 1687              	.L117:
 452:../../planner.c ****         }
 1688              		.loc 1 452 65 discriminator 4 view .LVU445
 1689              	.LBE62:
 1690              	.LBE67:
 1691              	.LBB68:
 1692              	.LBB66:
  73:../../planner.c ****     }
 1693              		.loc 1 73 9 is_stmt 1 view .LVU446
  73:../../planner.c ****     }
 1694              		.loc 1 73 28 is_stmt 0 view .LVU447
 1695 031e 1346     		mov	r3, r2
 1696 0320 0022     		movs	r2, #0
 1697 0322 1A70     		strb	r2, [r3]
 1698 0324 93E7     		b	.L101
 1699              	.L121:
 1700 0326 00BF     		.align	2
 1701              	.L120:
 1702 0328 00000000 		.word	.LANCHOR4
 1703 032c 00000000 		.word	.LANCHOR1
 1704              	.LBE66:
 1705              	.LBE68:
 1706              		.cfi_endproc
 1707              	.LFE79:
 1709              		.section	.text.planner_get_position,"ax",%progbits
 1710              		.align	1
 1711              		.global	planner_get_position
 1712              		.syntax unified
 1713              		.thumb
 1714              		.thumb_func
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 42


 1715              		.fpu softvfp
 1717              	planner_get_position:
 1718              	.LVL187:
 1719              	.LFB80:
 466:../../planner.c **** 
 467:../../planner.c **** void planner_get_position(float *axis)
 468:../../planner.c **** {
 1720              		.loc 1 468 1 is_stmt 1 view -0
 1721              		.cfi_startproc
 1722              		@ args = 0, pretend = 0, frame = 0
 1723              		@ frame_needed = 0, uses_anonymous_args = 0
 1724              		@ link register save eliminated.
 1725              		.loc 1 468 1 is_stmt 0 view .LVU449
 1726 0000 10B4     		push	{r4}
 1727              	.LCFI10:
 1728              		.cfi_def_cfa_offset 4
 1729              		.cfi_offset 4, -4
 1730 0002 0346     		mov	r3, r0
 469:../../planner.c ****     memcpy(axis, planner_coord, sizeof(planner_coord));
 1731              		.loc 1 469 5 is_stmt 1 view .LVU450
 1732 0004 034C     		ldr	r4, .L124
 1733 0006 07CC     		ldmia	r4!, {r0, r1, r2}
 1734              	.LVL188:
 1735              		.loc 1 469 5 is_stmt 0 view .LVU451
 1736 0008 1860     		str	r0, [r3]	@ unaligned
 1737 000a 5960     		str	r1, [r3, #4]	@ unaligned
 1738 000c 9A60     		str	r2, [r3, #8]	@ unaligned
 470:../../planner.c **** }
 1739              		.loc 1 470 1 view .LVU452
 1740 000e 10BC     		pop	{r4}
 1741              	.LCFI11:
 1742              		.cfi_restore 4
 1743              		.cfi_def_cfa_offset 0
 1744 0010 7047     		bx	lr
 1745              	.L125:
 1746 0012 00BF     		.align	2
 1747              	.L124:
 1748 0014 00000000 		.word	.LANCHOR6
 1749              		.cfi_endproc
 1750              	.LFE80:
 1752              		.section	.text.planner_set_position,"ax",%progbits
 1753              		.align	1
 1754              		.global	planner_set_position
 1755              		.syntax unified
 1756              		.thumb
 1757              		.thumb_func
 1758              		.fpu softvfp
 1760              	planner_set_position:
 1761              	.LVL189:
 1762              	.LFB81:
 471:../../planner.c **** 
 472:../../planner.c **** void planner_set_position(float *axis)
 473:../../planner.c **** {
 1763              		.loc 1 473 1 is_stmt 1 view -0
 1764              		.cfi_startproc
 1765              		@ args = 0, pretend = 0, frame = 0
 1766              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 43


 1767              		@ link register save eliminated.
 1768              		.loc 1 473 1 is_stmt 0 view .LVU454
 1769 0000 0246     		mov	r2, r0
 474:../../planner.c ****     memcpy(planner_coord, axis, sizeof(planner_coord));
 1770              		.loc 1 474 5 is_stmt 1 view .LVU455
 1771 0002 034B     		ldr	r3, .L127
 1772 0004 0068     		ldr	r0, [r0]	@ unaligned
 1773              	.LVL190:
 1774              		.loc 1 474 5 is_stmt 0 view .LVU456
 1775 0006 5168     		ldr	r1, [r2, #4]	@ unaligned
 1776 0008 9268     		ldr	r2, [r2, #8]	@ unaligned
 1777              	.LVL191:
 1778              		.loc 1 474 5 view .LVU457
 1779 000a 07C3     		stmia	r3!, {r0, r1, r2}
 475:../../planner.c **** }
 1780              		.loc 1 475 1 view .LVU458
 1781 000c 7047     		bx	lr
 1782              	.L128:
 1783 000e 00BF     		.align	2
 1784              	.L127:
 1785 0010 00000000 		.word	.LANCHOR6
 1786              		.cfi_endproc
 1787              	.LFE81:
 1789              		.section	.text.planner_resync_position,"ax",%progbits
 1790              		.align	1
 1791              		.global	planner_resync_position
 1792              		.syntax unified
 1793              		.thumb
 1794              		.thumb_func
 1795              		.fpu softvfp
 1797              	planner_resync_position:
 1798              	.LFB82:
 476:../../planner.c **** 
 477:../../planner.c **** void planner_resync_position(void)
 478:../../planner.c **** {
 1799              		.loc 1 478 1 is_stmt 1 view -0
 1800              		.cfi_startproc
 1801              		@ args = 0, pretend = 0, frame = 0
 1802              		@ frame_needed = 0, uses_anonymous_args = 0
 1803 0000 08B5     		push	{r3, lr}
 1804              	.LCFI12:
 1805              		.cfi_def_cfa_offset 8
 1806              		.cfi_offset 3, -8
 1807              		.cfi_offset 14, -4
 479:../../planner.c ****     //resyncs the position with the interpolator
 480:../../planner.c ****     itp_get_rt_position((float *)&planner_coord);
 1808              		.loc 1 480 5 view .LVU460
 1809 0002 0248     		ldr	r0, .L131
 1810 0004 FFF7FEFF 		bl	itp_get_rt_position
 1811              	.LVL192:
 481:../../planner.c **** }
 1812              		.loc 1 481 1 is_stmt 0 view .LVU461
 1813 0008 08BD     		pop	{r3, pc}
 1814              	.L132:
 1815 000a 00BF     		.align	2
 1816              	.L131:
 1817 000c 00000000 		.word	.LANCHOR6
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 44


 1818              		.cfi_endproc
 1819              	.LFE82:
 1821              		.section	.text.planner_clear,"ax",%progbits
 1822              		.align	1
 1823              		.global	planner_clear
 1824              		.syntax unified
 1825              		.thumb
 1826              		.thumb_func
 1827              		.fpu softvfp
 1829              	planner_clear:
 1830              	.LFB73:
 135:../../planner.c ****     //clears all motions stored in the buffer
 1831              		.loc 1 135 1 is_stmt 1 view -0
 1832              		.cfi_startproc
 1833              		@ args = 0, pretend = 0, frame = 0
 1834              		@ frame_needed = 0, uses_anonymous_args = 0
 1835 0000 08B5     		push	{r3, lr}
 1836              	.LCFI13:
 1837              		.cfi_def_cfa_offset 8
 1838              		.cfi_offset 3, -8
 1839              		.cfi_offset 14, -4
 137:../../planner.c **** #ifdef USE_SPINDLE
 1840              		.loc 1 137 5 view .LVU463
 1841              	.LBB69:
 1842              	.LBI69:
 107:../../planner.c **** {
 1843              		.loc 1 107 20 view .LVU464
 1844              	.LBB70:
 109:../../planner.c ****     planner_data_read = 0;
 1845              		.loc 1 109 5 view .LVU465
 109:../../planner.c ****     planner_data_read = 0;
 1846              		.loc 1 109 24 is_stmt 0 view .LVU466
 1847 0002 0023     		movs	r3, #0
 1848 0004 044A     		ldr	r2, .L135
 1849 0006 1370     		strb	r3, [r2]
 110:../../planner.c ****     planner_data_slots = PLANNER_BUFFER_SIZE;
 1850              		.loc 1 110 5 is_stmt 1 view .LVU467
 110:../../planner.c ****     planner_data_slots = PLANNER_BUFFER_SIZE;
 1851              		.loc 1 110 23 is_stmt 0 view .LVU468
 1852 0008 044A     		ldr	r2, .L135+4
 1853 000a 1370     		strb	r3, [r2]
 111:../../planner.c **** #ifdef FORCE_GLOBALS_TO_0
 1854              		.loc 1 111 5 is_stmt 1 view .LVU469
 111:../../planner.c **** #ifdef FORCE_GLOBALS_TO_0
 1855              		.loc 1 111 24 is_stmt 0 view .LVU470
 1856 000c 044B     		ldr	r3, .L135+8
 1857 000e 0F22     		movs	r2, #15
 1858 0010 1A70     		strb	r2, [r3]
 1859              	.LBE70:
 1860              	.LBE69:
 142:../../planner.c **** }
 1861              		.loc 1 142 5 is_stmt 1 view .LVU471
 1862 0012 FFF7FEFF 		bl	planner_resync_position
 1863              	.LVL193:
 143:../../planner.c **** 
 1864              		.loc 1 143 1 is_stmt 0 view .LVU472
 1865 0016 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 45


 1866              	.L136:
 1867              		.align	2
 1868              	.L135:
 1869 0018 00000000 		.word	.LANCHOR1
 1870 001c 00000000 		.word	.LANCHOR2
 1871 0020 00000000 		.word	.LANCHOR0
 1872              		.cfi_endproc
 1873              	.LFE73:
 1875              		.section	.text.planner_toggle_overrides,"ax",%progbits
 1876              		.align	1
 1877              		.global	planner_toggle_overrides
 1878              		.syntax unified
 1879              		.thumb
 1880              		.thumb_func
 1881              		.fpu softvfp
 1883              	planner_toggle_overrides:
 1884              	.LFB83:
 482:../../planner.c **** 
 483:../../planner.c **** //overrides
 484:../../planner.c **** void planner_toggle_overrides(void)
 485:../../planner.c **** {
 1885              		.loc 1 485 1 is_stmt 1 view -0
 1886              		.cfi_startproc
 1887              		@ args = 0, pretend = 0, frame = 0
 1888              		@ frame_needed = 0, uses_anonymous_args = 0
 1889 0000 08B5     		push	{r3, lr}
 1890              	.LCFI14:
 1891              		.cfi_def_cfa_offset 8
 1892              		.cfi_offset 3, -8
 1893              		.cfi_offset 14, -4
 486:../../planner.c ****     planner_overrides.overrides_enabled = !planner_overrides.overrides_enabled;
 1894              		.loc 1 486 5 view .LVU474
 1895              		.loc 1 486 61 is_stmt 0 view .LVU475
 1896 0002 054A     		ldr	r2, .L139
 1897 0004 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 1898              		.loc 1 486 5 view .LVU476
 1899 0006 83F00103 		eor	r3, r3, #1
 1900              		.loc 1 486 41 view .LVU477
 1901 000a 9370     		strb	r3, [r2, #2]
 487:../../planner.c ****     itp_update();
 1902              		.loc 1 487 5 is_stmt 1 view .LVU478
 1903 000c FFF7FEFF 		bl	itp_update
 1904              	.LVL194:
 488:../../planner.c ****     planner_ovr_counter = 0;
 1905              		.loc 1 488 5 view .LVU479
 1906              		.loc 1 488 25 is_stmt 0 view .LVU480
 1907 0010 024B     		ldr	r3, .L139+4
 1908 0012 0022     		movs	r2, #0
 1909 0014 1A70     		strb	r2, [r3]
 489:../../planner.c **** }
 1910              		.loc 1 489 1 view .LVU481
 1911 0016 08BD     		pop	{r3, pc}
 1912              	.L140:
 1913              		.align	2
 1914              	.L139:
 1915 0018 00000000 		.word	.LANCHOR3
 1916 001c 00000000 		.word	.LANCHOR7
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 46


 1917              		.cfi_endproc
 1918              	.LFE83:
 1920              		.section	.text.planner_get_overrides,"ax",%progbits
 1921              		.align	1
 1922              		.global	planner_get_overrides
 1923              		.syntax unified
 1924              		.thumb
 1925              		.thumb_func
 1926              		.fpu softvfp
 1928              	planner_get_overrides:
 1929              	.LFB84:
 490:../../planner.c **** 
 491:../../planner.c **** bool planner_get_overrides(void)
 492:../../planner.c **** {
 1930              		.loc 1 492 1 is_stmt 1 view -0
 1931              		.cfi_startproc
 1932              		@ args = 0, pretend = 0, frame = 0
 1933              		@ frame_needed = 0, uses_anonymous_args = 0
 1934              		@ link register save eliminated.
 493:../../planner.c ****     return planner_overrides.overrides_enabled;
 1935              		.loc 1 493 5 view .LVU483
 494:../../planner.c **** }
 1936              		.loc 1 494 1 is_stmt 0 view .LVU484
 1937 0000 014B     		ldr	r3, .L142
 1938 0002 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 1939 0004 7047     		bx	lr
 1940              	.L143:
 1941 0006 00BF     		.align	2
 1942              	.L142:
 1943 0008 00000000 		.word	.LANCHOR3
 1944              		.cfi_endproc
 1945              	.LFE84:
 1947              		.section	.text.planner_feed_ovr_inc,"ax",%progbits
 1948              		.align	1
 1949              		.global	planner_feed_ovr_inc
 1950              		.syntax unified
 1951              		.thumb
 1952              		.thumb_func
 1953              		.fpu softvfp
 1955              	planner_feed_ovr_inc:
 1956              	.LVL195:
 1957              	.LFB85:
 495:../../planner.c **** 
 496:../../planner.c **** void planner_feed_ovr_inc(uint8_t value)
 497:../../planner.c **** {
 1958              		.loc 1 497 1 is_stmt 1 view -0
 1959              		.cfi_startproc
 1960              		@ args = 0, pretend = 0, frame = 0
 1961              		@ frame_needed = 0, uses_anonymous_args = 0
 1962              		.loc 1 497 1 is_stmt 0 view .LVU486
 1963 0000 08B5     		push	{r3, lr}
 1964              	.LCFI15:
 1965              		.cfi_def_cfa_offset 8
 1966              		.cfi_offset 3, -8
 1967              		.cfi_offset 14, -4
 498:../../planner.c ****     uint8_t ovr_val = planner_overrides.feed_override;
 1968              		.loc 1 498 5 is_stmt 1 view .LVU487
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 47


 1969              		.loc 1 498 13 is_stmt 0 view .LVU488
 1970 0002 0B4B     		ldr	r3, .L148
 1971 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1972              	.LVL196:
 499:../../planner.c ****     ovr_val += value;
 1973              		.loc 1 499 5 is_stmt 1 view .LVU489
 1974              		.loc 1 499 13 is_stmt 0 view .LVU490
 1975 0006 1044     		add	r0, r0, r2
 1976              	.LVL197:
 1977              		.loc 1 499 13 view .LVU491
 1978 0008 C0B2     		uxtb	r0, r0
 1979              	.LVL198:
 500:../../planner.c ****     ovr_val = MAX(ovr_val, FEED_OVR_MIN);
 1980              		.loc 1 500 5 is_stmt 1 view .LVU492
 1981              		.loc 1 500 13 is_stmt 0 view .LVU493
 1982 000a 0A28     		cmp	r0, #10
 1983 000c 38BF     		it	cc
 1984 000e 0A20     		movcc	r0, #10
 1985              	.LVL199:
 501:../../planner.c ****     ovr_val = MIN(ovr_val, FEED_OVR_MAX);
 1986              		.loc 1 501 5 is_stmt 1 view .LVU494
 1987              		.loc 1 501 13 is_stmt 0 view .LVU495
 1988 0010 C828     		cmp	r0, #200
 1989 0012 28BF     		it	cs
 1990 0014 C820     		movcs	r0, #200
 1991              	.LVL200:
 502:../../planner.c **** 
 503:../../planner.c ****     if (planner_overrides.overrides_enabled && ovr_val != planner_overrides.feed_override)
 1992              		.loc 1 503 5 is_stmt 1 view .LVU496
 1993              		.loc 1 503 26 is_stmt 0 view .LVU497
 1994 0016 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1995              		.loc 1 503 8 view .LVU498
 1996 0018 0BB1     		cbz	r3, .L144
 1997              		.loc 1 503 45 discriminator 1 view .LVU499
 1998 001a 8242     		cmp	r2, r0
 1999 001c 00D1     		bne	.L147
 2000              	.LVL201:
 2001              	.L144:
 504:../../planner.c ****     {
 505:../../planner.c ****         planner_overrides.feed_override = ovr_val;
 506:../../planner.c ****         planner_ovr_counter = 0;
 507:../../planner.c ****         itp_update();
 508:../../planner.c ****     }
 509:../../planner.c **** }
 2002              		.loc 1 509 1 view .LVU500
 2003 001e 08BD     		pop	{r3, pc}
 2004              	.LVL202:
 2005              	.L147:
 505:../../planner.c ****         planner_ovr_counter = 0;
 2006              		.loc 1 505 9 is_stmt 1 view .LVU501
 505:../../planner.c ****         planner_ovr_counter = 0;
 2007              		.loc 1 505 41 is_stmt 0 view .LVU502
 2008 0020 034B     		ldr	r3, .L148
 2009 0022 1870     		strb	r0, [r3]
 506:../../planner.c ****         itp_update();
 2010              		.loc 1 506 9 is_stmt 1 view .LVU503
 506:../../planner.c ****         itp_update();
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 48


 2011              		.loc 1 506 29 is_stmt 0 view .LVU504
 2012 0024 034B     		ldr	r3, .L148+4
 2013 0026 0022     		movs	r2, #0
 2014 0028 1A70     		strb	r2, [r3]
 507:../../planner.c ****     }
 2015              		.loc 1 507 9 is_stmt 1 view .LVU505
 2016 002a FFF7FEFF 		bl	itp_update
 2017              	.LVL203:
 2018              		.loc 1 509 1 is_stmt 0 view .LVU506
 2019 002e F6E7     		b	.L144
 2020              	.L149:
 2021              		.align	2
 2022              	.L148:
 2023 0030 00000000 		.word	.LANCHOR3
 2024 0034 00000000 		.word	.LANCHOR7
 2025              		.cfi_endproc
 2026              	.LFE85:
 2028              		.section	.text.planner_rapid_feed_ovr,"ax",%progbits
 2029              		.align	1
 2030              		.global	planner_rapid_feed_ovr
 2031              		.syntax unified
 2032              		.thumb
 2033              		.thumb_func
 2034              		.fpu softvfp
 2036              	planner_rapid_feed_ovr:
 2037              	.LVL204:
 2038              	.LFB86:
 510:../../planner.c **** 
 511:../../planner.c **** void planner_rapid_feed_ovr(uint8_t value)
 512:../../planner.c **** {
 2039              		.loc 1 512 1 is_stmt 1 view -0
 2040              		.cfi_startproc
 2041              		@ args = 0, pretend = 0, frame = 0
 2042              		@ frame_needed = 0, uses_anonymous_args = 0
 2043              		.loc 1 512 1 is_stmt 0 view .LVU508
 2044 0000 08B5     		push	{r3, lr}
 2045              	.LCFI16:
 2046              		.cfi_def_cfa_offset 8
 2047              		.cfi_offset 3, -8
 2048              		.cfi_offset 14, -4
 513:../../planner.c ****     if (planner_overrides.overrides_enabled && planner_overrides.rapid_feed_override != value)
 2049              		.loc 1 513 5 is_stmt 1 view .LVU509
 2050              		.loc 1 513 26 is_stmt 0 view .LVU510
 2051 0002 084B     		ldr	r3, .L154
 2052 0004 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2053              		.loc 1 513 8 view .LVU511
 2054 0006 1BB1     		cbz	r3, .L150
 2055              		.loc 1 513 65 discriminator 1 view .LVU512
 2056 0008 064B     		ldr	r3, .L154
 2057 000a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2058              		.loc 1 513 45 discriminator 1 view .LVU513
 2059 000c 8342     		cmp	r3, r0
 2060 000e 00D1     		bne	.L153
 2061              	.LVL205:
 2062              	.L150:
 514:../../planner.c ****     {
 515:../../planner.c ****         planner_overrides.rapid_feed_override = value;
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 49


 516:../../planner.c ****         planner_ovr_counter = 0;
 517:../../planner.c ****         itp_update();
 518:../../planner.c ****     }
 519:../../planner.c **** }
 2063              		.loc 1 519 1 view .LVU514
 2064 0010 08BD     		pop	{r3, pc}
 2065              	.LVL206:
 2066              	.L153:
 515:../../planner.c ****         planner_ovr_counter = 0;
 2067              		.loc 1 515 9 is_stmt 1 view .LVU515
 515:../../planner.c ****         planner_ovr_counter = 0;
 2068              		.loc 1 515 47 is_stmt 0 view .LVU516
 2069 0012 044B     		ldr	r3, .L154
 2070 0014 5870     		strb	r0, [r3, #1]
 516:../../planner.c ****         itp_update();
 2071              		.loc 1 516 9 is_stmt 1 view .LVU517
 516:../../planner.c ****         itp_update();
 2072              		.loc 1 516 29 is_stmt 0 view .LVU518
 2073 0016 044B     		ldr	r3, .L154+4
 2074 0018 0022     		movs	r2, #0
 2075 001a 1A70     		strb	r2, [r3]
 517:../../planner.c ****     }
 2076              		.loc 1 517 9 is_stmt 1 view .LVU519
 2077 001c FFF7FEFF 		bl	itp_update
 2078              	.LVL207:
 2079              		.loc 1 519 1 is_stmt 0 view .LVU520
 2080 0020 F6E7     		b	.L150
 2081              	.L155:
 2082 0022 00BF     		.align	2
 2083              	.L154:
 2084 0024 00000000 		.word	.LANCHOR3
 2085 0028 00000000 		.word	.LANCHOR7
 2086              		.cfi_endproc
 2087              	.LFE86:
 2089              		.section	.text.planner_feed_ovr_reset,"ax",%progbits
 2090              		.align	1
 2091              		.global	planner_feed_ovr_reset
 2092              		.syntax unified
 2093              		.thumb
 2094              		.thumb_func
 2095              		.fpu softvfp
 2097              	planner_feed_ovr_reset:
 2098              	.LFB87:
 520:../../planner.c **** 
 521:../../planner.c **** void planner_feed_ovr_reset(void)
 522:../../planner.c **** {
 2099              		.loc 1 522 1 is_stmt 1 view -0
 2100              		.cfi_startproc
 2101              		@ args = 0, pretend = 0, frame = 0
 2102              		@ frame_needed = 0, uses_anonymous_args = 0
 2103 0000 08B5     		push	{r3, lr}
 2104              	.LCFI17:
 2105              		.cfi_def_cfa_offset 8
 2106              		.cfi_offset 3, -8
 2107              		.cfi_offset 14, -4
 523:../../planner.c ****     if (planner_overrides.overrides_enabled && planner_overrides.feed_override != 100)
 2108              		.loc 1 523 5 view .LVU522
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 50


 2109              		.loc 1 523 26 is_stmt 0 view .LVU523
 2110 0002 084B     		ldr	r3, .L160
 2111 0004 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2112              		.loc 1 523 8 view .LVU524
 2113 0006 1BB1     		cbz	r3, .L156
 2114              		.loc 1 523 65 discriminator 1 view .LVU525
 2115 0008 064B     		ldr	r3, .L160
 2116 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2117              		.loc 1 523 45 discriminator 1 view .LVU526
 2118 000c 642B     		cmp	r3, #100
 2119 000e 00D1     		bne	.L159
 2120              	.L156:
 524:../../planner.c ****     {
 525:../../planner.c ****         planner_overrides.feed_override = 100;
 526:../../planner.c ****         planner_ovr_counter = 0;
 527:../../planner.c ****         itp_update();
 528:../../planner.c ****     }
 529:../../planner.c **** }
 2121              		.loc 1 529 1 view .LVU527
 2122 0010 08BD     		pop	{r3, pc}
 2123              	.L159:
 525:../../planner.c ****         planner_ovr_counter = 0;
 2124              		.loc 1 525 9 is_stmt 1 view .LVU528
 525:../../planner.c ****         planner_ovr_counter = 0;
 2125              		.loc 1 525 41 is_stmt 0 view .LVU529
 2126 0012 044B     		ldr	r3, .L160
 2127 0014 6422     		movs	r2, #100
 2128 0016 1A70     		strb	r2, [r3]
 526:../../planner.c ****         itp_update();
 2129              		.loc 1 526 9 is_stmt 1 view .LVU530
 526:../../planner.c ****         itp_update();
 2130              		.loc 1 526 29 is_stmt 0 view .LVU531
 2131 0018 034B     		ldr	r3, .L160+4
 2132 001a 0022     		movs	r2, #0
 2133 001c 1A70     		strb	r2, [r3]
 527:../../planner.c ****     }
 2134              		.loc 1 527 9 is_stmt 1 view .LVU532
 2135 001e FFF7FEFF 		bl	itp_update
 2136              	.LVL208:
 2137              		.loc 1 529 1 is_stmt 0 view .LVU533
 2138 0022 F5E7     		b	.L156
 2139              	.L161:
 2140              		.align	2
 2141              	.L160:
 2142 0024 00000000 		.word	.LANCHOR3
 2143 0028 00000000 		.word	.LANCHOR7
 2144              		.cfi_endproc
 2145              	.LFE87:
 2147              		.section	.text.planner_rapid_feed_ovr_reset,"ax",%progbits
 2148              		.align	1
 2149              		.global	planner_rapid_feed_ovr_reset
 2150              		.syntax unified
 2151              		.thumb
 2152              		.thumb_func
 2153              		.fpu softvfp
 2155              	planner_rapid_feed_ovr_reset:
 2156              	.LFB88:
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 51


 530:../../planner.c **** 
 531:../../planner.c **** void planner_rapid_feed_ovr_reset(void)
 532:../../planner.c **** {
 2157              		.loc 1 532 1 is_stmt 1 view -0
 2158              		.cfi_startproc
 2159              		@ args = 0, pretend = 0, frame = 0
 2160              		@ frame_needed = 0, uses_anonymous_args = 0
 2161 0000 08B5     		push	{r3, lr}
 2162              	.LCFI18:
 2163              		.cfi_def_cfa_offset 8
 2164              		.cfi_offset 3, -8
 2165              		.cfi_offset 14, -4
 533:../../planner.c ****     if (planner_overrides.overrides_enabled && planner_overrides.rapid_feed_override != 100)
 2166              		.loc 1 533 5 view .LVU535
 2167              		.loc 1 533 26 is_stmt 0 view .LVU536
 2168 0002 084B     		ldr	r3, .L166
 2169 0004 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2170              		.loc 1 533 8 view .LVU537
 2171 0006 1BB1     		cbz	r3, .L162
 2172              		.loc 1 533 65 discriminator 1 view .LVU538
 2173 0008 064B     		ldr	r3, .L166
 2174 000a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2175              		.loc 1 533 45 discriminator 1 view .LVU539
 2176 000c 642B     		cmp	r3, #100
 2177 000e 00D1     		bne	.L165
 2178              	.L162:
 534:../../planner.c ****     {
 535:../../planner.c ****         planner_overrides.rapid_feed_override = 100;
 536:../../planner.c ****         planner_ovr_counter = 0;
 537:../../planner.c ****         itp_update();
 538:../../planner.c ****     }
 539:../../planner.c **** }
 2179              		.loc 1 539 1 view .LVU540
 2180 0010 08BD     		pop	{r3, pc}
 2181              	.L165:
 535:../../planner.c ****         planner_ovr_counter = 0;
 2182              		.loc 1 535 9 is_stmt 1 view .LVU541
 535:../../planner.c ****         planner_ovr_counter = 0;
 2183              		.loc 1 535 47 is_stmt 0 view .LVU542
 2184 0012 044B     		ldr	r3, .L166
 2185 0014 6422     		movs	r2, #100
 2186 0016 5A70     		strb	r2, [r3, #1]
 536:../../planner.c ****         itp_update();
 2187              		.loc 1 536 9 is_stmt 1 view .LVU543
 536:../../planner.c ****         itp_update();
 2188              		.loc 1 536 29 is_stmt 0 view .LVU544
 2189 0018 034B     		ldr	r3, .L166+4
 2190 001a 0022     		movs	r2, #0
 2191 001c 1A70     		strb	r2, [r3]
 537:../../planner.c ****     }
 2192              		.loc 1 537 9 is_stmt 1 view .LVU545
 2193 001e FFF7FEFF 		bl	itp_update
 2194              	.LVL209:
 2195              		.loc 1 539 1 is_stmt 0 view .LVU546
 2196 0022 F5E7     		b	.L162
 2197              	.L167:
 2198              		.align	2
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 52


 2199              	.L166:
 2200 0024 00000000 		.word	.LANCHOR3
 2201 0028 00000000 		.word	.LANCHOR7
 2202              		.cfi_endproc
 2203              	.LFE88:
 2205              		.section	.text.planner_get_overflows,"ax",%progbits
 2206              		.align	1
 2207              		.global	planner_get_overflows
 2208              		.syntax unified
 2209              		.thumb
 2210              		.thumb_func
 2211              		.fpu softvfp
 2213              	planner_get_overflows:
 2214              	.LVL210:
 2215              	.LFB89:
 540:../../planner.c **** #ifdef USE_SPINDLE
 541:../../planner.c **** void planner_spindle_ovr_inc(uint8_t value)
 542:../../planner.c **** {
 543:../../planner.c ****     uint8_t ovr_val = planner_overrides.spindle_override;
 544:../../planner.c ****     ovr_val += value;
 545:../../planner.c ****     ovr_val = MAX(ovr_val, FEED_OVR_MIN);
 546:../../planner.c ****     ovr_val = MIN(ovr_val, FEED_OVR_MAX);
 547:../../planner.c **** 
 548:../../planner.c ****     if (planner_overrides.overrides_enabled && ovr_val != planner_overrides.spindle_override)
 549:../../planner.c ****     {
 550:../../planner.c ****         planner_overrides.spindle_override = ovr_val;
 551:../../planner.c ****         planner_ovr_counter = 0;
 552:../../planner.c ****     }
 553:../../planner.c **** }
 554:../../planner.c **** 
 555:../../planner.c **** void planner_spindle_ovr_reset(void)
 556:../../planner.c **** {
 557:../../planner.c ****     planner_overrides.spindle_override = 100;
 558:../../planner.c ****     planner_ovr_counter = 0;
 559:../../planner.c **** }
 560:../../planner.c **** #endif
 561:../../planner.c **** 
 562:../../planner.c **** bool planner_get_overflows(uint8_t *overflows)
 563:../../planner.c **** {
 2216              		.loc 1 563 1 is_stmt 1 view -0
 2217              		.cfi_startproc
 2218              		@ args = 0, pretend = 0, frame = 0
 2219              		@ frame_needed = 0, uses_anonymous_args = 0
 2220              		@ link register save eliminated.
 564:../../planner.c ****     if (!planner_ovr_counter)
 2221              		.loc 1 564 5 view .LVU548
 2222              		.loc 1 564 9 is_stmt 0 view .LVU549
 2223 0000 094B     		ldr	r3, .L172
 2224 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2225              		.loc 1 564 8 view .LVU550
 2226 0004 23B1     		cbz	r3, .L171
 565:../../planner.c ****     {
 566:../../planner.c ****         overflows[0] = planner_overrides.feed_override;
 567:../../planner.c ****         overflows[1] = planner_overrides.rapid_feed_override;
 568:../../planner.c **** #ifdef USE_SPINDLE
 569:../../planner.c ****         overflows[2] = planner_overrides.spindle_override;
 570:../../planner.c **** #else
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 53


 571:../../planner.c ****         overflows[2] = 0;
 572:../../planner.c **** #endif
 573:../../planner.c ****         planner_ovr_counter = STATUS_WCO_REPORT_MIN_FREQUENCY;
 574:../../planner.c ****         return true;
 575:../../planner.c ****     }
 576:../../planner.c **** 
 577:../../planner.c ****     planner_ovr_counter--;
 2227              		.loc 1 577 5 is_stmt 1 view .LVU551
 2228              		.loc 1 577 24 is_stmt 0 view .LVU552
 2229 0006 013B     		subs	r3, r3, #1
 2230 0008 074A     		ldr	r2, .L172
 2231 000a 1370     		strb	r3, [r2]
 578:../../planner.c ****     return false;
 2232              		.loc 1 578 5 is_stmt 1 view .LVU553
 2233              		.loc 1 578 12 is_stmt 0 view .LVU554
 2234 000c 0020     		movs	r0, #0
 2235              	.LVL211:
 579:../../planner.c **** }
 2236              		.loc 1 579 1 view .LVU555
 2237 000e 7047     		bx	lr
 2238              	.LVL212:
 2239              	.L171:
 566:../../planner.c ****         overflows[1] = planner_overrides.rapid_feed_override;
 2240              		.loc 1 566 9 is_stmt 1 view .LVU556
 566:../../planner.c ****         overflows[1] = planner_overrides.rapid_feed_override;
 2241              		.loc 1 566 41 is_stmt 0 view .LVU557
 2242 0010 064B     		ldr	r3, .L172+4
 2243 0012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 566:../../planner.c ****         overflows[1] = planner_overrides.rapid_feed_override;
 2244              		.loc 1 566 22 view .LVU558
 2245 0014 0270     		strb	r2, [r0]
 567:../../planner.c **** #ifdef USE_SPINDLE
 2246              		.loc 1 567 9 is_stmt 1 view .LVU559
 567:../../planner.c **** #ifdef USE_SPINDLE
 2247              		.loc 1 567 41 is_stmt 0 view .LVU560
 2248 0016 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 567:../../planner.c **** #ifdef USE_SPINDLE
 2249              		.loc 1 567 22 view .LVU561
 2250 0018 4370     		strb	r3, [r0, #1]
 571:../../planner.c **** #endif
 2251              		.loc 1 571 9 is_stmt 1 view .LVU562
 571:../../planner.c **** #endif
 2252              		.loc 1 571 22 is_stmt 0 view .LVU563
 2253 001a 0023     		movs	r3, #0
 2254 001c 8370     		strb	r3, [r0, #2]
 573:../../planner.c ****         return true;
 2255              		.loc 1 573 9 is_stmt 1 view .LVU564
 573:../../planner.c ****         return true;
 2256              		.loc 1 573 29 is_stmt 0 view .LVU565
 2257 001e 024B     		ldr	r3, .L172
 2258 0020 1E22     		movs	r2, #30
 2259 0022 1A70     		strb	r2, [r3]
 574:../../planner.c ****     }
 2260              		.loc 1 574 9 is_stmt 1 view .LVU566
 574:../../planner.c ****     }
 2261              		.loc 1 574 16 is_stmt 0 view .LVU567
 2262 0024 0120     		movs	r0, #1
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 54


 2263              	.LVL213:
 574:../../planner.c ****     }
 2264              		.loc 1 574 16 view .LVU568
 2265 0026 7047     		bx	lr
 2266              	.L173:
 2267              		.align	2
 2268              	.L172:
 2269 0028 00000000 		.word	.LANCHOR7
 2270 002c 00000000 		.word	.LANCHOR3
 2271              		.cfi_endproc
 2272              	.LFE89:
 2274              		.section	.bss.planner_coord,"aw",%nobits
 2275              		.align	2
 2276              		.set	.LANCHOR6,. + 0
 2279              	planner_coord:
 2280 0000 00000000 		.space	12
 2280      00000000 
 2280      00000000 
 2281              		.section	.bss.planner_data,"aw",%nobits
 2282              		.align	2
 2283              		.set	.LANCHOR4,. + 0
 2286              	planner_data:
 2287 0000 00000000 		.space	720
 2287      00000000 
 2287      00000000 
 2287      00000000 
 2287      00000000 
 2288              		.section	.bss.planner_data_read,"aw",%nobits
 2289              		.set	.LANCHOR2,. + 0
 2292              	planner_data_read:
 2293 0000 00       		.space	1
 2294              		.section	.bss.planner_data_slots,"aw",%nobits
 2295              		.set	.LANCHOR0,. + 0
 2298              	planner_data_slots:
 2299 0000 00       		.space	1
 2300              		.section	.bss.planner_data_write,"aw",%nobits
 2301              		.set	.LANCHOR1,. + 0
 2304              	planner_data_write:
 2305 0000 00       		.space	1
 2306              		.section	.bss.planner_overrides,"aw",%nobits
 2307              		.align	2
 2308              		.set	.LANCHOR3,. + 0
 2311              	planner_overrides:
 2312 0000 000000   		.space	3
 2313              		.section	.bss.planner_ovr_counter,"aw",%nobits
 2314              		.set	.LANCHOR7,. + 0
 2317              	planner_ovr_counter:
 2318 0000 00       		.space	1
 2319              		.section	.bss.prev_dir_vect.6883,"aw",%nobits
 2320              		.align	2
 2321              		.set	.LANCHOR5,. + 0
 2324              	prev_dir_vect.6883:
 2325 0000 00000000 		.space	12
 2325      00000000 
 2325      00000000 
 2326              		.text
 2327              	.Letext0:
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 55


 2328              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2329              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2330              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 2331              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2332              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2333              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2334              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2335              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
 2336              		.file 10 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2337              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2338              		.file 12 "../../settings.h"
 2339              		.file 13 "../../planner.h"
 2340              		.file 14 "../../interpolator.h"
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 56


DEFINED SYMBOLS
                            *ABS*:00000000 planner.c
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:16     .text.planner_buffer_is_empty:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:24     .text.planner_buffer_is_empty:00000000 planner_buffer_is_empty
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:45     .text.planner_buffer_is_empty:00000010 $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:50     .text.planner_buffer_is_full:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:57     .text.planner_buffer_is_full:00000000 planner_buffer_is_full
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:75     .text.planner_buffer_is_full:0000000c $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:80     .text.planner_init:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:87     .text.planner_init:00000000 planner_init
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:132    .text.planner_init:00000020 $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:140    .text.planner_get_block:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:147    .text.planner_get_block:00000000 planner_get_block
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:168    .text.planner_get_block:00000010 $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:177    .text.planner_get_block_exit_speed_sqr:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:184    .text.planner_get_block_exit_speed_sqr:00000000 planner_get_block_exit_speed_sqr
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:340    .text.planner_get_block_exit_speed_sqr:0000008c $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:353    .text.planner_get_block_top_speed:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:360    .text.planner_get_block_top_speed:00000000 planner_get_block_top_speed
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:560    .text.planner_get_block_top_speed:000000c4 $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:568    .text.planner_discard_block:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:575    .text.planner_discard_block:00000000 planner_discard_block
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:623    .text.planner_discard_block:00000020 $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:630    .text.planner_recalculate:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:637    .text.planner_recalculate:00000000 planner_recalculate
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:1009   .text.planner_recalculate:000001a0 $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:1020   .text.planner_add_line:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:1027   .text.planner_add_line:00000000 planner_add_line
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:1619   .text.planner_add_line:000002ac $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:1633   .text.planner_add_line:000002d0 $t
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:1702   .text.planner_add_line:00000328 $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:1710   .text.planner_get_position:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:1717   .text.planner_get_position:00000000 planner_get_position
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:1748   .text.planner_get_position:00000014 $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:1753   .text.planner_set_position:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:1760   .text.planner_set_position:00000000 planner_set_position
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:1785   .text.planner_set_position:00000010 $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:1790   .text.planner_resync_position:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:1797   .text.planner_resync_position:00000000 planner_resync_position
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:1817   .text.planner_resync_position:0000000c $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:1822   .text.planner_clear:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:1829   .text.planner_clear:00000000 planner_clear
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:1869   .text.planner_clear:00000018 $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:1876   .text.planner_toggle_overrides:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:1883   .text.planner_toggle_overrides:00000000 planner_toggle_overrides
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:1915   .text.planner_toggle_overrides:00000018 $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:1921   .text.planner_get_overrides:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:1928   .text.planner_get_overrides:00000000 planner_get_overrides
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:1943   .text.planner_get_overrides:00000008 $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:1948   .text.planner_feed_ovr_inc:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:1955   .text.planner_feed_ovr_inc:00000000 planner_feed_ovr_inc
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2023   .text.planner_feed_ovr_inc:00000030 $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2029   .text.planner_rapid_feed_ovr:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2036   .text.planner_rapid_feed_ovr:00000000 planner_rapid_feed_ovr
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2084   .text.planner_rapid_feed_ovr:00000024 $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2090   .text.planner_feed_ovr_reset:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2097   .text.planner_feed_ovr_reset:00000000 planner_feed_ovr_reset
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s 			page 57


C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2142   .text.planner_feed_ovr_reset:00000024 $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2148   .text.planner_rapid_feed_ovr_reset:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2155   .text.planner_rapid_feed_ovr_reset:00000000 planner_rapid_feed_ovr_reset
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2200   .text.planner_rapid_feed_ovr_reset:00000024 $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2206   .text.planner_get_overflows:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2213   .text.planner_get_overflows:00000000 planner_get_overflows
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2269   .text.planner_get_overflows:00000028 $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2275   .bss.planner_coord:00000000 $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2279   .bss.planner_coord:00000000 planner_coord
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2282   .bss.planner_data:00000000 $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2286   .bss.planner_data:00000000 planner_data
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2292   .bss.planner_data_read:00000000 planner_data_read
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2293   .bss.planner_data_read:00000000 $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2298   .bss.planner_data_slots:00000000 planner_data_slots
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2299   .bss.planner_data_slots:00000000 $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2304   .bss.planner_data_write:00000000 planner_data_write
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2305   .bss.planner_data_write:00000000 $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2307   .bss.planner_overrides:00000000 $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2311   .bss.planner_overrides:00000000 planner_overrides
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2317   .bss.planner_ovr_counter:00000000 planner_ovr_counter
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2318   .bss.planner_ovr_counter:00000000 $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2320   .bss.prev_dir_vect.6883:00000000 $d
C:\Users\JCEM\AppData\Local\Temp\ccBJZtkd.s:2324   .bss.prev_dir_vect.6883:00000000 prev_dir_vect.6883

UNDEFINED SYMBOLS
__aeabi_i2f
__aeabi_fmul
__aeabi_fcmplt
__aeabi_fsub
__aeabi_fadd
__aeabi_ui2f
__aeabi_fcmpgt
__aeabi_fcmpeq
itp_update
__aeabi_fdiv
__aeabi_f2d
__aeabi_dmul
__aeabi_d2f
sqrtf
g_settings
itp_get_rt_position
