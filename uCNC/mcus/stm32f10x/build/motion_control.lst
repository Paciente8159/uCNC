ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"motion_control.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.mc_init,"ax",%progbits
  16              		.align	1
  17              		.global	mc_init
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	mc_init:
  25              	.LFB65:
  26              		.file 1 "../../motion_control.c"
   1:../../motion_control.c **** /*
   2:../../motion_control.c **** 	Name: motion_control.c
   3:../../motion_control.c **** 	Description: Contains the building blocks for performing motions/actions in µCNC
   4:../../motion_control.c **** 	Copyright: Copyright (c) João Martins
   5:../../motion_control.c **** 	Author: João Martins
   6:../../motion_control.c **** 	Date: 19/11/2019
   7:../../motion_control.c **** 
   8:../../motion_control.c **** 	µCNC is free software: you can redistribute it and/or modify
   9:../../motion_control.c **** 	it under the terms of the GNU General Public License as published by
  10:../../motion_control.c **** 	the Free Software Foundation, either version 3 of the License, or
  11:../../motion_control.c **** 	(at your option) any later version. Please see <http://www.gnu.org/licenses/>
  12:../../motion_control.c **** 
  13:../../motion_control.c **** 	µCNC is distributed WITHOUT ANY WARRANTY;
  14:../../motion_control.c **** 	Also without the implied warranty of	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  15:../../motion_control.c **** 	See the	GNU General Public License for more details.
  16:../../motion_control.c **** */
  17:../../motion_control.c **** 
  18:../../motion_control.c **** #include <math.h>
  19:../../motion_control.c **** #include <string.h>
  20:../../motion_control.c **** #include "config.h"
  21:../../motion_control.c **** #include "mcu.h"
  22:../../motion_control.c **** #include "grbl_interface.h"
  23:../../motion_control.c **** #include "settings.h"
  24:../../motion_control.c **** #include "utils.h"
  25:../../motion_control.c **** #include "io_control.h"
  26:../../motion_control.c **** #include "parser.h"
  27:../../motion_control.c **** #include "kinematics.h"
  28:../../motion_control.c **** #include "planner.h"
  29:../../motion_control.c **** #include "interpolator.h"
  30:../../motion_control.c **** #include "cnc.h"
  31:../../motion_control.c **** #include "motion_control.h"
  32:../../motion_control.c **** 
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 2


  33:../../motion_control.c **** static bool mc_checkmode;
  34:../../motion_control.c **** 
  35:../../motion_control.c **** void mc_init(void)
  36:../../motion_control.c **** {
  27              		.loc 1 36 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  37:../../motion_control.c **** #ifdef FORCE_GLOBALS_TO_0
  38:../../motion_control.c ****     mc_checkmode = false;
  39:../../motion_control.c **** #endif
  40:../../motion_control.c **** }
  32              		.loc 1 40 1 view .LVU1
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE65:
  37              		.section	.text.mc_get_checkmode,"ax",%progbits
  38              		.align	1
  39              		.global	mc_get_checkmode
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu softvfp
  45              	mc_get_checkmode:
  46              	.LFB66:
  41:../../motion_control.c **** 
  42:../../motion_control.c **** bool mc_get_checkmode(void)
  43:../../motion_control.c **** {
  47              		.loc 1 43 1 view -0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  44:../../motion_control.c ****     return mc_checkmode;
  52              		.loc 1 44 5 view .LVU3
  45:../../motion_control.c **** }
  53              		.loc 1 45 1 is_stmt 0 view .LVU4
  54 0000 014B     		ldr	r3, .L3
  55 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  56 0004 7047     		bx	lr
  57              	.L4:
  58 0006 00BF     		.align	2
  59              	.L3:
  60 0008 00000000 		.word	.LANCHOR0
  61              		.cfi_endproc
  62              	.LFE66:
  64              		.section	.text.mc_toogle_checkmode,"ax",%progbits
  65              		.align	1
  66              		.global	mc_toogle_checkmode
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  70              		.fpu softvfp
  72              	mc_toogle_checkmode:
  73              	.LFB67:
  46:../../motion_control.c **** 
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 3


  47:../../motion_control.c **** bool mc_toogle_checkmode(void)
  48:../../motion_control.c **** {
  74              		.loc 1 48 1 is_stmt 1 view -0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  49:../../motion_control.c ****     mc_checkmode = !mc_checkmode;
  79              		.loc 1 49 5 view .LVU6
  80 0000 024B     		ldr	r3, .L6
  81 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  82 0004 80F00100 		eor	r0, r0, #1
  83              		.loc 1 49 18 is_stmt 0 view .LVU7
  84 0008 1870     		strb	r0, [r3]
  50:../../motion_control.c ****     return mc_checkmode;
  85              		.loc 1 50 5 is_stmt 1 view .LVU8
  51:../../motion_control.c **** }
  86              		.loc 1 51 1 is_stmt 0 view .LVU9
  87 000a 7047     		bx	lr
  88              	.L7:
  89              		.align	2
  90              	.L6:
  91 000c 00000000 		.word	.LANCHOR0
  92              		.cfi_endproc
  93              	.LFE67:
  95              		.global	__aeabi_fsub
  96              		.global	__aeabi_fcmpeq
  97              		.global	__aeabi_fmul
  98              		.global	__aeabi_fadd
  99              		.global	__aeabi_fdiv
 100              		.section	.text.mc_line,"ax",%progbits
 101              		.align	1
 102              		.global	mc_line
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu softvfp
 108              	mc_line:
 109              	.LVL0:
 110              	.LFB68:
  52:../../motion_control.c **** 
  53:../../motion_control.c **** uint8_t mc_line(float *target, planner_block_data_t block_data)
  54:../../motion_control.c **** {
 111              		.loc 1 54 1 is_stmt 1 view -0
 112              		.cfi_startproc
 113              		@ args = 32, pretend = 16, frame = 16
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		.loc 1 54 1 is_stmt 0 view .LVU11
 116 0000 84B0     		sub	sp, sp, #16
 117              	.LCFI0:
 118              		.cfi_def_cfa_offset 16
 119 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 120              	.LCFI1:
 121              		.cfi_def_cfa_offset 40
 122              		.cfi_offset 4, -40
 123              		.cfi_offset 5, -36
 124              		.cfi_offset 6, -32
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 4


 125              		.cfi_offset 7, -28
 126              		.cfi_offset 8, -24
 127              		.cfi_offset 14, -20
 128 0006 88B0     		sub	sp, sp, #32
 129              	.LCFI2:
 130              		.cfi_def_cfa_offset 72
 131 0008 0446     		mov	r4, r0
 132 000a 0FAD     		add	r5, sp, #60
 133 000c 85E80E00 		stm	r5, {r1, r2, r3}
  55:../../motion_control.c ****     kinematics_apply_transform(target);
 134              		.loc 1 55 5 is_stmt 1 view .LVU12
 135 0010 FFF7FEFF 		bl	kinematics_apply_transform
 136              	.LVL1:
  56:../../motion_control.c **** 
  57:../../motion_control.c ****     //check travel limits
  58:../../motion_control.c ****     if (!io_check_boundaries(target))
 137              		.loc 1 58 5 view .LVU13
 138              		.loc 1 58 10 is_stmt 0 view .LVU14
 139 0014 2046     		mov	r0, r4
 140 0016 FFF7FEFF 		bl	io_check_boundaries
 141              	.LVL2:
 142              		.loc 1 58 8 view .LVU15
 143 001a 60B1     		cbz	r0, .L24
  59:../../motion_control.c ****     {
  60:../../motion_control.c ****         if (cnc_get_exec_state(EXEC_JOG))
  61:../../motion_control.c ****         {
  62:../../motion_control.c ****             return STATUS_TRAVEL_EXCEEDED;
  63:../../motion_control.c ****         }
  64:../../motion_control.c ****         cnc_alarm(EXEC_ALARM_SOFT_LIMIT);
  65:../../motion_control.c ****         return STATUS_OK;
  66:../../motion_control.c ****     }
  67:../../motion_control.c **** 
  68:../../motion_control.c ****     if (mc_checkmode) // check mode (gcode simulation) doesn't send code to planner
 144              		.loc 1 68 5 is_stmt 1 view .LVU16
 145              		.loc 1 68 9 is_stmt 0 view .LVU17
 146 001c 2F4B     		ldr	r3, .L30
 147 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 148              		.loc 1 68 8 view .LVU18
 149 0020 002B     		cmp	r3, #0
 150 0022 53D1     		bne	.L25
 151              	.L11:
  69:../../motion_control.c ****     {
  70:../../motion_control.c ****         return STATUS_OK;
  71:../../motion_control.c ****     }
  72:../../motion_control.c **** 
  73:../../motion_control.c ****     while (planner_buffer_is_full())
 152              		.loc 1 73 11 is_stmt 1 view .LVU19
 153              		.loc 1 73 12 is_stmt 0 view .LVU20
 154 0024 FFF7FEFF 		bl	planner_buffer_is_full
 155              	.LVL3:
 156              		.loc 1 73 11 view .LVU21
 157 0028 80B1     		cbz	r0, .L26
  74:../../motion_control.c ****     {
  75:../../motion_control.c ****         if(!cnc_doevents())
 158              		.loc 1 75 9 is_stmt 1 view .LVU22
 159              		.loc 1 75 13 is_stmt 0 view .LVU23
 160 002a FFF7FEFF 		bl	cnc_doevents
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 5


 161              	.LVL4:
 162              		.loc 1 75 11 view .LVU24
 163 002e 0028     		cmp	r0, #0
 164 0030 F8D1     		bne	.L11
  76:../../motion_control.c ****         {
  77:../../motion_control.c ****             return STATUS_CRITICAL_FAIL;
 165              		.loc 1 77 20 view .LVU25
 166 0032 FF24     		movs	r4, #255
 167              	.LVL5:
 168              		.loc 1 77 20 view .LVU26
 169 0034 4BE0     		b	.L10
 170              	.LVL6:
 171              	.L24:
  60:../../motion_control.c ****         {
 172              		.loc 1 60 9 is_stmt 1 view .LVU27
  60:../../motion_control.c ****         {
 173              		.loc 1 60 13 is_stmt 0 view .LVU28
 174 0036 0420     		movs	r0, #4
 175 0038 FFF7FEFF 		bl	cnc_get_exec_state
 176              	.LVL7:
  60:../../motion_control.c ****         {
 177              		.loc 1 60 12 view .LVU29
 178 003c 0446     		mov	r4, r0
 179              	.LVL8:
  60:../../motion_control.c ****         {
 180              		.loc 1 60 12 view .LVU30
 181 003e 08B1     		cbz	r0, .L27
  62:../../motion_control.c ****         }
 182              		.loc 1 62 20 view .LVU31
 183 0040 0F24     		movs	r4, #15
 184 0042 44E0     		b	.L10
 185              	.L27:
  64:../../motion_control.c ****         return STATUS_OK;
 186              		.loc 1 64 9 is_stmt 1 view .LVU32
 187 0044 0220     		movs	r0, #2
 188 0046 FFF7FEFF 		bl	cnc_alarm
 189              	.LVL9:
  65:../../motion_control.c ****     }
 190              		.loc 1 65 9 view .LVU33
  65:../../motion_control.c ****     }
 191              		.loc 1 65 16 is_stmt 0 view .LVU34
 192 004a 40E0     		b	.L10
 193              	.LVL10:
 194              	.L26:
  78:../../motion_control.c ****         }
  79:../../motion_control.c ****     }
  80:../../motion_control.c **** 
  81:../../motion_control.c ****     if(!CHECKFLAG(block_data.motion_mode,PLANNER_MOTION_MODE_NOMOTION))
 195              		.loc 1 81 5 is_stmt 1 view .LVU35
 196              		.loc 1 81 9 is_stmt 0 view .LVU36
 197 004c 9DF85480 		ldrb	r8, [sp, #84]	@ zero_extendqisi2
 198              		.loc 1 81 7 view .LVU37
 199 0050 18F0010F 		tst	r8, #1
 200 0054 0AD0     		beq	.L28
 201              	.L13:
  82:../../motion_control.c ****     {
  83:../../motion_control.c ****         float mc_position[AXIS_COUNT];
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 6


  84:../../motion_control.c **** 
  85:../../motion_control.c ****         //copy planner last position
  86:../../motion_control.c ****         planner_get_position(mc_position);
  87:../../motion_control.c ****         for (uint8_t i = AXIS_COUNT; i != 0;)
  88:../../motion_control.c ****         {
  89:../../motion_control.c ****             i--;
  90:../../motion_control.c ****             block_data.dir_vect[i] = target[i] - mc_position[i];
  91:../../motion_control.c ****             if (block_data.dir_vect[i] != 0)
  92:../../motion_control.c ****             {
  93:../../motion_control.c ****                 block_data.distance += (block_data.dir_vect[i] * block_data.dir_vect[i]);
  94:../../motion_control.c ****             }
  95:../../motion_control.c ****         }
  96:../../motion_control.c **** 
  97:../../motion_control.c ****         block_data.distance = sqrtf(block_data.distance);
  98:../../motion_control.c ****         if(CHECKFLAG(block_data.motion_mode,PLANNER_MOTION_MODE_INVERSEFEED))
  99:../../motion_control.c ****         {
 100:../../motion_control.c ****             //calculates feed rate in reverse feed rate mode
 101:../../motion_control.c ****             block_data.feed = block_data.distance / block_data.feed;
 102:../../motion_control.c ****         }
 103:../../motion_control.c ****     }
 104:../../motion_control.c **** 
 105:../../motion_control.c ****     planner_add_line(target, block_data);
 202              		.loc 1 105 5 is_stmt 1 view .LVU38
 203 0056 12AB     		add	r3, sp, #72
 204 0058 0FCB     		ldm	r3, {r0, r1, r2, r3}
 205 005a 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 206 005e 0FAB     		add	r3, sp, #60
 207 0060 0ECB     		ldm	r3, {r1, r2, r3}
 208 0062 2046     		mov	r0, r4
 209 0064 FFF7FEFF 		bl	planner_add_line
 210              	.LVL11:
 106:../../motion_control.c ****     return STATUS_OK;
 211              		.loc 1 106 5 view .LVU39
 212              		.loc 1 106 12 is_stmt 0 view .LVU40
 213 0068 0024     		movs	r4, #0
 214              	.LVL12:
 215              		.loc 1 106 12 view .LVU41
 216 006a 30E0     		b	.L10
 217              	.LVL13:
 218              	.L28:
 219              	.LBB2:
  83:../../motion_control.c **** 
 220              		.loc 1 83 9 is_stmt 1 view .LVU42
  86:../../motion_control.c ****         for (uint8_t i = AXIS_COUNT; i != 0;)
 221              		.loc 1 86 9 view .LVU43
 222 006c 05A8     		add	r0, sp, #20
 223 006e FFF7FEFF 		bl	planner_get_position
 224              	.LVL14:
  87:../../motion_control.c ****         {
 225              		.loc 1 87 9 view .LVU44
 226              	.LBB3:
  87:../../motion_control.c ****         {
 227              		.loc 1 87 14 view .LVU45
  87:../../motion_control.c ****         {
 228              		.loc 1 87 22 is_stmt 0 view .LVU46
 229 0072 0325     		movs	r5, #3
 230              	.LVL15:
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 7


 231              	.L14:
  87:../../motion_control.c ****         {
 232              		.loc 1 87 38 is_stmt 1 discriminator 1 view .LVU47
  87:../../motion_control.c ****         {
 233              		.loc 1 87 9 is_stmt 0 discriminator 1 view .LVU48
 234 0074 F5B1     		cbz	r5, .L29
  89:../../motion_control.c ****             block_data.dir_vect[i] = target[i] - mc_position[i];
 235              		.loc 1 89 13 is_stmt 1 view .LVU49
  89:../../motion_control.c ****             block_data.dir_vect[i] = target[i] - mc_position[i];
 236              		.loc 1 89 14 is_stmt 0 view .LVU50
 237 0076 013D     		subs	r5, r5, #1
 238              	.LVL16:
  89:../../motion_control.c ****             block_data.dir_vect[i] = target[i] - mc_position[i];
 239              		.loc 1 89 14 view .LVU51
 240 0078 EDB2     		uxtb	r5, r5
 241              	.LVL17:
  90:../../motion_control.c ****             if (block_data.dir_vect[i] != 0)
 242              		.loc 1 90 13 is_stmt 1 view .LVU52
  90:../../motion_control.c ****             if (block_data.dir_vect[i] != 0)
 243              		.loc 1 90 61 is_stmt 0 view .LVU53
 244 007a AF00     		lsls	r7, r5, #2
 245 007c 08AB     		add	r3, sp, #32
 246 007e 03EB8503 		add	r3, r3, r5, lsl #2
  90:../../motion_control.c ****             if (block_data.dir_vect[i] != 0)
 247              		.loc 1 90 48 view .LVU54
 248 0082 53F80C1C 		ldr	r1, [r3, #-12]	@ float
 249 0086 54F82500 		ldr	r0, [r4, r5, lsl #2]	@ float
 250 008a FFF7FEFF 		bl	__aeabi_fsub
 251              	.LVL18:
 252 008e 0646     		mov	r6, r0
  90:../../motion_control.c ****             if (block_data.dir_vect[i] != 0)
 253              		.loc 1 90 36 view .LVU55
 254 0090 0EAB     		add	r3, sp, #56
 255 0092 1F44     		add	r7, r7, r3
 256 0094 7860     		str	r0, [r7, #4]	@ float
  91:../../motion_control.c ****             {
 257              		.loc 1 91 13 is_stmt 1 view .LVU56
  91:../../motion_control.c ****             {
 258              		.loc 1 91 16 is_stmt 0 view .LVU57
 259 0096 0021     		movs	r1, #0
 260 0098 FFF7FEFF 		bl	__aeabi_fcmpeq
 261              	.LVL19:
 262 009c 0028     		cmp	r0, #0
 263 009e E9D1     		bne	.L14
  93:../../motion_control.c ****             }
 264              		.loc 1 93 17 is_stmt 1 view .LVU58
  93:../../motion_control.c ****             }
 265              		.loc 1 93 64 is_stmt 0 view .LVU59
 266 00a0 3146     		mov	r1, r6
 267 00a2 3046     		mov	r0, r6
 268 00a4 FFF7FEFF 		bl	__aeabi_fmul
 269              	.LVL20:
 270 00a8 0146     		mov	r1, r0
  93:../../motion_control.c ****             }
 271              		.loc 1 93 37 view .LVU60
 272 00aa 1298     		ldr	r0, [sp, #72]	@ float
 273 00ac FFF7FEFF 		bl	__aeabi_fadd
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 8


 274              	.LVL21:
 275 00b0 1290     		str	r0, [sp, #72]	@ float
 276 00b2 DFE7     		b	.L14
 277              	.L29:
  93:../../motion_control.c ****             }
 278              		.loc 1 93 37 view .LVU61
 279              	.LBE3:
  97:../../motion_control.c ****         if(CHECKFLAG(block_data.motion_mode,PLANNER_MOTION_MODE_INVERSEFEED))
 280              		.loc 1 97 9 is_stmt 1 view .LVU62
  97:../../motion_control.c ****         if(CHECKFLAG(block_data.motion_mode,PLANNER_MOTION_MODE_INVERSEFEED))
 281              		.loc 1 97 31 is_stmt 0 view .LVU63
 282 00b4 1298     		ldr	r0, [sp, #72]	@ float
 283 00b6 FFF7FEFF 		bl	sqrtf
 284              	.LVL22:
  97:../../motion_control.c ****         if(CHECKFLAG(block_data.motion_mode,PLANNER_MOTION_MODE_INVERSEFEED))
 285              		.loc 1 97 29 view .LVU64
 286 00ba 1290     		str	r0, [sp, #72]	@ float
  98:../../motion_control.c ****         {
 287              		.loc 1 98 9 is_stmt 1 view .LVU65
  98:../../motion_control.c ****         {
 288              		.loc 1 98 11 is_stmt 0 view .LVU66
 289 00bc 18F0040F 		tst	r8, #4
 290 00c0 C9D0     		beq	.L13
 101:../../motion_control.c ****         }
 291              		.loc 1 101 13 is_stmt 1 view .LVU67
 101:../../motion_control.c ****         }
 292              		.loc 1 101 51 is_stmt 0 view .LVU68
 293 00c2 1399     		ldr	r1, [sp, #76]	@ float
 294 00c4 FFF7FEFF 		bl	__aeabi_fdiv
 295              	.LVL23:
 101:../../motion_control.c ****         }
 296              		.loc 1 101 29 view .LVU69
 297 00c8 1390     		str	r0, [sp, #76]	@ float
 298 00ca C4E7     		b	.L13
 299              	.LVL24:
 300              	.L25:
 101:../../motion_control.c ****         }
 301              		.loc 1 101 29 view .LVU70
 302              	.LBE2:
  70:../../motion_control.c ****     }
 303              		.loc 1 70 16 view .LVU71
 304 00cc 0024     		movs	r4, #0
 305              	.LVL25:
 306              	.L10:
 107:../../motion_control.c **** }
 307              		.loc 1 107 1 view .LVU72
 308 00ce 2046     		mov	r0, r4
 309 00d0 08B0     		add	sp, sp, #32
 310              	.LCFI3:
 311              		.cfi_def_cfa_offset 40
 312              		@ sp needed
 313 00d2 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 314              	.LCFI4:
 315              		.cfi_restore 14
 316              		.cfi_restore 8
 317              		.cfi_restore 7
 318              		.cfi_restore 6
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 9


 319              		.cfi_restore 5
 320              		.cfi_restore 4
 321              		.cfi_def_cfa_offset 16
 322 00d6 04B0     		add	sp, sp, #16
 323              	.LCFI5:
 324              		.cfi_def_cfa_offset 0
 325 00d8 7047     		bx	lr
 326              	.L31:
 327 00da 00BF     		.align	2
 328              	.L30:
 329 00dc 00000000 		.word	.LANCHOR0
 330              		.cfi_endproc
 331              	.LFE68:
 333              		.global	__aeabi_f2d
 334              		.global	__aeabi_d2f
 335              		.global	__aeabi_fcmpge
 336              		.global	__aeabi_dsub
 337              		.global	__aeabi_fcmple
 338              		.global	__aeabi_dadd
 339              		.global	__aeabi_dmul
 340              		.global	__aeabi_ddiv
 341              		.global	__aeabi_d2uiz
 342              		.global	__aeabi_i2f
 343              		.global	__aeabi_fcmpgt
 344              		.global	__aeabi_dcmple
 345              		.section	.text.mc_arc,"ax",%progbits
 346              		.align	1
 347              		.global	mc_arc
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 351              		.fpu softvfp
 353              	mc_arc:
 354              	.LVL26:
 355              	.LFB69:
 108:../../motion_control.c **** 
 109:../../motion_control.c **** //applies an algorithm similar to grbl with slight changes
 110:../../motion_control.c **** uint8_t mc_arc(float *target, float center_offset_a, float center_offset_b, float radius, uint8_t a
 111:../../motion_control.c **** {
 356              		.loc 1 111 1 is_stmt 1 view -0
 357              		.cfi_startproc
 358              		@ args = 40, pretend = 0, frame = 72
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360              		.loc 1 111 1 is_stmt 0 view .LVU74
 361 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 362              	.LCFI6:
 363              		.cfi_def_cfa_offset 36
 364              		.cfi_offset 4, -36
 365              		.cfi_offset 5, -32
 366              		.cfi_offset 6, -28
 367              		.cfi_offset 7, -24
 368              		.cfi_offset 8, -20
 369              		.cfi_offset 9, -16
 370              		.cfi_offset 10, -12
 371              		.cfi_offset 11, -8
 372              		.cfi_offset 14, -4
 373 0004 97B0     		sub	sp, sp, #92
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 10


 374              	.LCFI7:
 375              		.cfi_def_cfa_offset 128
 376 0006 0F90     		str	r0, [sp, #60]
 377 0008 0C46     		mov	r4, r1
 378 000a 9046     		mov	r8, r2
 379 000c 0E92     		str	r2, [sp, #56]	@ float
 380 000e 1E46     		mov	r6, r3
 381 0010 9DF880A0 		ldrb	r10, [sp, #128]	@ zero_extendqisi2
 382 0014 9DF884B0 		ldrb	fp, [sp, #132]	@ zero_extendqisi2
 383 0018 9DF88870 		ldrb	r7, [sp, #136]	@ zero_extendqisi2
 112:../../motion_control.c ****     float mc_position[AXIS_COUNT];
 384              		.loc 1 112 5 is_stmt 1 view .LVU75
 113:../../motion_control.c **** 
 114:../../motion_control.c ****     //copy planner last position
 115:../../motion_control.c ****     planner_get_position(mc_position);
 385              		.loc 1 115 5 view .LVU76
 386 001c 13AB     		add	r3, sp, #76
 387              	.LVL27:
 388              		.loc 1 115 5 is_stmt 0 view .LVU77
 389 001e 1846     		mov	r0, r3
 390              	.LVL28:
 391              		.loc 1 115 5 view .LVU78
 392 0020 FFF7FEFF 		bl	planner_get_position
 393              	.LVL29:
 116:../../motion_control.c ****     //reverses any transformation aplied before
 117:../../motion_control.c ****     kinematics_apply_reverse_transform(mc_position);
 394              		.loc 1 117 5 is_stmt 1 view .LVU79
 395 0024 13AB     		add	r3, sp, #76
 396 0026 1846     		mov	r0, r3
 397 0028 FFF7FEFF 		bl	kinematics_apply_reverse_transform
 398              	.LVL30:
 118:../../motion_control.c **** 
 119:../../motion_control.c ****     float ptcenter_a = mc_position[axis_0] + center_offset_a;
 399              		.loc 1 119 5 view .LVU80
 400              		.loc 1 119 35 is_stmt 0 view .LVU81
 401 002c CDF818A0 		str	r10, [sp, #24]
 402 0030 16AB     		add	r3, sp, #88
 403 0032 03EB8A03 		add	r3, r3, r10, lsl #2
 404              		.loc 1 119 11 view .LVU82
 405 0036 2146     		mov	r1, r4
 406 0038 53F80C0C 		ldr	r0, [r3, #-12]	@ float
 407 003c FFF7FEFF 		bl	__aeabi_fadd
 408              	.LVL31:
 409 0040 0546     		mov	r5, r0
 410 0042 0890     		str	r0, [sp, #32]	@ float
 411              	.LVL32:
 120:../../motion_control.c ****     float ptcenter_b = mc_position[axis_1] + center_offset_b;
 412              		.loc 1 120 5 is_stmt 1 view .LVU83
 413              		.loc 1 120 35 is_stmt 0 view .LVU84
 414 0044 CDF81CB0 		str	fp, [sp, #28]
 415 0048 16AB     		add	r3, sp, #88
 416 004a 03EB8B03 		add	r3, r3, fp, lsl #2
 417              		.loc 1 120 11 view .LVU85
 418 004e 4146     		mov	r1, r8
 419 0050 53F80C0C 		ldr	r0, [r3, #-12]	@ float
 420              	.LVL33:
 421              		.loc 1 120 11 view .LVU86
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 11


 422 0054 FFF7FEFF 		bl	__aeabi_fadd
 423              	.LVL34:
 424 0058 8146     		mov	r9, r0
 425 005a 0990     		str	r0, [sp, #36]	@ float
 426              	.LVL35:
 121:../../motion_control.c **** 
 122:../../motion_control.c ****     float pt0_a = -center_offset_a; // Radius vector from center to current location
 427              		.loc 1 122 5 is_stmt 1 view .LVU87
 428              		.loc 1 122 11 is_stmt 0 view .LVU88
 429 005c 04F10043 		add	r3, r4, #-2147483648
 430 0060 0C93     		str	r3, [sp, #48]
 431              	.LVL36:
 123:../../motion_control.c ****     float pt0_b = -center_offset_b;
 432              		.loc 1 123 5 is_stmt 1 view .LVU89
 433              		.loc 1 123 11 is_stmt 0 view .LVU90
 434 0062 08F10048 		add	r8, r8, #-2147483648
 435              	.LVL37:
 124:../../motion_control.c ****     float pt1_a = target[axis_0] - ptcenter_a; // Radius vector from center to current location
 436              		.loc 1 124 5 is_stmt 1 view .LVU91
 437              		.loc 1 124 11 is_stmt 0 view .LVU92
 438 0066 2946     		mov	r1, r5
 439 0068 0F9D     		ldr	r5, [sp, #60]
 440              	.LVL38:
 441              		.loc 1 124 11 view .LVU93
 442 006a 55F82A00 		ldr	r0, [r5, r10, lsl #2]	@ float
 443              	.LVL39:
 444              		.loc 1 124 11 view .LVU94
 445 006e FFF7FEFF 		bl	__aeabi_fsub
 446              	.LVL40:
 447              		.loc 1 124 11 view .LVU95
 448 0072 0446     		mov	r4, r0
 449              	.LVL41:
 125:../../motion_control.c ****     float pt1_b = target[axis_1] - ptcenter_b;
 450              		.loc 1 125 5 is_stmt 1 view .LVU96
 451              		.loc 1 125 11 is_stmt 0 view .LVU97
 452 0074 4946     		mov	r1, r9
 453 0076 55F82B00 		ldr	r0, [r5, fp, lsl #2]	@ float
 454              	.LVL42:
 455              		.loc 1 125 11 view .LVU98
 456 007a FFF7FEFF 		bl	__aeabi_fsub
 457              	.LVL43:
 458 007e 8146     		mov	r9, r0
 459              	.LVL44:
 126:../../motion_control.c **** 
 127:../../motion_control.c ****     //dot product between vect_a and vect_b
 128:../../motion_control.c ****     float dotprod = pt0_a * pt1_a + pt0_b * pt1_b;
 460              		.loc 1 128 5 is_stmt 1 view .LVU99
 461              		.loc 1 128 27 is_stmt 0 view .LVU100
 462 0080 2146     		mov	r1, r4
 463 0082 0C98     		ldr	r0, [sp, #48]	@ float
 464              	.LVL45:
 465              		.loc 1 128 27 view .LVU101
 466 0084 FFF7FEFF 		bl	__aeabi_fmul
 467              	.LVL46:
 468 0088 0546     		mov	r5, r0
 469              		.loc 1 128 43 view .LVU102
 470 008a 4946     		mov	r1, r9
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 12


 471 008c 4046     		mov	r0, r8
 472 008e FFF7FEFF 		bl	__aeabi_fmul
 473              	.LVL47:
 474 0092 0146     		mov	r1, r0
 475              		.loc 1 128 11 view .LVU103
 476 0094 2846     		mov	r0, r5
 477 0096 FFF7FEFF 		bl	__aeabi_fadd
 478              	.LVL48:
 479 009a 0546     		mov	r5, r0
 480              	.LVL49:
 129:../../motion_control.c ****     //determinant
 130:../../motion_control.c ****     float det = pt0_a * pt1_b - pt0_b * pt1_a;
 481              		.loc 1 130 5 is_stmt 1 view .LVU104
 482              		.loc 1 130 23 is_stmt 0 view .LVU105
 483 009c 4946     		mov	r1, r9
 484 009e 0C98     		ldr	r0, [sp, #48]	@ float
 485              	.LVL50:
 486              		.loc 1 130 23 view .LVU106
 487 00a0 FFF7FEFF 		bl	__aeabi_fmul
 488              	.LVL51:
 489 00a4 8146     		mov	r9, r0
 490              	.LVL52:
 491              		.loc 1 130 39 view .LVU107
 492 00a6 2146     		mov	r1, r4
 493 00a8 4046     		mov	r0, r8
 494 00aa FFF7FEFF 		bl	__aeabi_fmul
 495              	.LVL53:
 496 00ae 0146     		mov	r1, r0
 497              		.loc 1 130 11 view .LVU108
 498 00b0 4846     		mov	r0, r9
 499 00b2 FFF7FEFF 		bl	__aeabi_fsub
 500              	.LVL54:
 501 00b6 8146     		mov	r9, r0
 502              	.LVL55:
 131:../../motion_control.c ****     float arc_angle = atan2(det, dotprod);
 503              		.loc 1 131 5 is_stmt 1 view .LVU109
 504              		.loc 1 131 23 is_stmt 0 view .LVU110
 505 00b8 2846     		mov	r0, r5
 506              	.LVL56:
 507              		.loc 1 131 23 view .LVU111
 508 00ba FFF7FEFF 		bl	__aeabi_f2d
 509              	.LVL57:
 510 00be 0446     		mov	r4, r0
 511              	.LVL58:
 512              		.loc 1 131 23 view .LVU112
 513 00c0 0D46     		mov	r5, r1
 514              	.LVL59:
 515              		.loc 1 131 23 view .LVU113
 516 00c2 4846     		mov	r0, r9
 517 00c4 FFF7FEFF 		bl	__aeabi_f2d
 518              	.LVL60:
 519 00c8 2246     		mov	r2, r4
 520 00ca 2B46     		mov	r3, r5
 521 00cc FFF7FEFF 		bl	atan2
 522              	.LVL61:
 523              		.loc 1 131 11 view .LVU114
 524 00d0 FFF7FEFF 		bl	__aeabi_d2f
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 13


 525              	.LVL62:
 526 00d4 0A90     		str	r0, [sp, #40]	@ float
 527              	.LVL63:
 132:../../motion_control.c **** 
 133:../../motion_control.c ****     if (isclockwise)
 528              		.loc 1 133 5 is_stmt 1 view .LVU115
 529              		.loc 1 133 8 is_stmt 0 view .LVU116
 530 00d6 87B1     		cbz	r7, .L33
 531 00d8 0446     		mov	r4, r0
 134:../../motion_control.c ****     {
 135:../../motion_control.c ****         if (arc_angle >= 0)
 532              		.loc 1 135 9 is_stmt 1 view .LVU117
 533              		.loc 1 135 12 is_stmt 0 view .LVU118
 534 00da 0021     		movs	r1, #0
 535 00dc FFF7FEFF 		bl	__aeabi_fcmpge
 536              	.LVL64:
 537              		.loc 1 135 12 view .LVU119
 538 00e0 90B1     		cbz	r0, .L34
 136:../../motion_control.c ****         {
 137:../../motion_control.c ****             arc_angle -= 2 * M_PI;
 539              		.loc 1 137 13 is_stmt 1 view .LVU120
 540              		.loc 1 137 23 is_stmt 0 view .LVU121
 541 00e2 2046     		mov	r0, r4
 542 00e4 FFF7FEFF 		bl	__aeabi_f2d
 543              	.LVL65:
 544 00e8 93A3     		adr	r3, .L67
 545 00ea D3E90023 		ldrd	r2, [r3]
 546 00ee FFF7FEFF 		bl	__aeabi_dsub
 547              	.LVL66:
 548 00f2 FFF7FEFF 		bl	__aeabi_d2f
 549              	.LVL67:
 550 00f6 0A90     		str	r0, [sp, #40]	@ float
 551              	.LVL68:
 552              		.loc 1 137 23 view .LVU122
 553 00f8 06E0     		b	.L34
 554              	.L33:
 138:../../motion_control.c ****         }
 139:../../motion_control.c ****     }
 140:../../motion_control.c ****     else
 141:../../motion_control.c ****     {
 142:../../motion_control.c ****         if (arc_angle <= 0)
 555              		.loc 1 142 9 is_stmt 1 view .LVU123
 556              		.loc 1 142 12 is_stmt 0 view .LVU124
 557 00fa 0021     		movs	r1, #0
 558 00fc 0A9C     		ldr	r4, [sp, #40]	@ float
 559 00fe 2046     		mov	r0, r4
 560              	.LVL69:
 561              		.loc 1 142 12 view .LVU125
 562 0100 FFF7FEFF 		bl	__aeabi_fcmple
 563              	.LVL70:
 564 0104 0028     		cmp	r0, #0
 565 0106 3FD1     		bne	.L62
 566              	.LVL71:
 567              	.L34:
 143:../../motion_control.c ****         {
 144:../../motion_control.c ****             arc_angle += 2 * M_PI;
 145:../../motion_control.c ****         }
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 14


 146:../../motion_control.c ****     }
 147:../../motion_control.c **** 
 148:../../motion_control.c ****     uint16_t segment_count = floor(fabs(0.5 * arc_angle * radius) / sqrt(g_settings.arc_tolerance *
 568              		.loc 1 148 5 is_stmt 1 view .LVU126
 569              		.loc 1 148 45 is_stmt 0 view .LVU127
 570 0108 DDF82890 		ldr	r9, [sp, #40]	@ float
 571              	.LVL72:
 572              		.loc 1 148 45 view .LVU128
 573 010c 4846     		mov	r0, r9
 574 010e FFF7FEFF 		bl	__aeabi_f2d
 575              	.LVL73:
 576 0112 0022     		movs	r2, #0
 577 0114 8C4B     		ldr	r3, .L67+16
 578 0116 FFF7FEFF 		bl	__aeabi_dmul
 579              	.LVL74:
 580 011a 0446     		mov	r4, r0
 581 011c 0D46     		mov	r5, r1
 582              		.loc 1 148 57 view .LVU129
 583 011e 3046     		mov	r0, r6
 584 0120 FFF7FEFF 		bl	__aeabi_f2d
 585              	.LVL75:
 586 0124 2246     		mov	r2, r4
 587 0126 2B46     		mov	r3, r5
 588 0128 FFF7FEFF 		bl	__aeabi_dmul
 589              	.LVL76:
 590 012c 0746     		mov	r7, r0
 591              		.loc 1 148 36 view .LVU130
 592 012e 21F00044 		bic	r4, r1, #-2147483648
 593              		.loc 1 148 84 view .LVU131
 594 0132 864B     		ldr	r3, .L67+20
 595 0134 1D69     		ldr	r5, [r3, #16]	@ float
 596              		.loc 1 148 104 view .LVU132
 597 0136 3146     		mov	r1, r6
 598 0138 3046     		mov	r0, r6
 599 013a FFF7FEFF 		bl	__aeabi_fadd
 600              	.LVL77:
 601              		.loc 1 148 113 view .LVU133
 602 013e 2946     		mov	r1, r5
 603 0140 FFF7FEFF 		bl	__aeabi_fsub
 604              	.LVL78:
 605 0144 0146     		mov	r1, r0
 606              		.loc 1 148 99 view .LVU134
 607 0146 2846     		mov	r0, r5
 608 0148 FFF7FEFF 		bl	__aeabi_fmul
 609              	.LVL79:
 610              		.loc 1 148 69 view .LVU135
 611 014c FFF7FEFF 		bl	__aeabi_f2d
 612              	.LVL80:
 613 0150 FFF7FEFF 		bl	sqrt
 614              	.LVL81:
 615 0154 0246     		mov	r2, r0
 616 0156 0B46     		mov	r3, r1
 617              		.loc 1 148 30 view .LVU136
 618 0158 3846     		mov	r0, r7
 619 015a 2146     		mov	r1, r4
 620 015c FFF7FEFF 		bl	__aeabi_ddiv
 621              	.LVL82:
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 15


 622 0160 FFF7FEFF 		bl	floor
 623              	.LVL83:
 624              		.loc 1 148 14 view .LVU137
 625 0164 FFF7FEFF 		bl	__aeabi_d2uiz
 626              	.LVL84:
 627 0168 83B2     		uxth	r3, r0
 628 016a 0593     		str	r3, [sp, #20]
 629              	.LVL85:
 149:../../motion_control.c ****     float arc_per_sgm = (segment_count != 0) ? arc_angle/segment_count : arc_angle;
 630              		.loc 1 149 5 is_stmt 1 view .LVU138
 631              		.loc 1 149 72 is_stmt 0 view .LVU139
 632 016c 3BB1     		cbz	r3, .L37
 633              		.loc 1 149 57 discriminator 1 view .LVU140
 634 016e 1846     		mov	r0, r3
 635 0170 FFF7FEFF 		bl	__aeabi_i2f
 636              	.LVL86:
 637              		.loc 1 149 57 discriminator 1 view .LVU141
 638 0174 0146     		mov	r1, r0
 639              		.loc 1 149 72 discriminator 1 view .LVU142
 640 0176 4846     		mov	r0, r9
 641 0178 FFF7FEFF 		bl	__aeabi_fdiv
 642              	.LVL87:
 643 017c 0A90     		str	r0, [sp, #40]	@ float
 644              	.LVL88:
 645              	.L37:
 150:../../motion_control.c ****     float dist_sgm = 0;
 646              		.loc 1 150 5 is_stmt 1 discriminator 4 view .LVU143
 151:../../motion_control.c **** 
 152:../../motion_control.c ****     //for all other axis finds the linear motion distance
 153:../../motion_control.c ****     float increment[AXIS_COUNT];
 647              		.loc 1 153 5 discriminator 4 view .LVU144
 154:../../motion_control.c **** 
 155:../../motion_control.c ****     for (uint8_t i = AXIS_COUNT; i != 0;)
 648              		.loc 1 155 5 discriminator 4 view .LVU145
 649              	.LBB4:
 650              		.loc 1 155 10 discriminator 4 view .LVU146
 651              		.loc 1 155 18 is_stmt 0 discriminator 4 view .LVU147
 652 017e 0324     		movs	r4, #3
 653 0180 059F     		ldr	r7, [sp, #20]
 654 0182 DDF83C90 		ldr	r9, [sp, #60]
 655              	.LVL89:
 656              		.loc 1 155 5 discriminator 4 view .LVU148
 657 0186 20E0     		b	.L38
 658              	.LVL90:
 659              	.L62:
 660              		.loc 1 155 5 discriminator 4 view .LVU149
 661              	.LBE4:
 144:../../motion_control.c ****         }
 662              		.loc 1 144 13 is_stmt 1 view .LVU150
 144:../../motion_control.c ****         }
 663              		.loc 1 144 23 is_stmt 0 view .LVU151
 664 0188 2046     		mov	r0, r4
 665 018a FFF7FEFF 		bl	__aeabi_f2d
 666              	.LVL91:
 667 018e 6AA3     		adr	r3, .L67
 668 0190 D3E90023 		ldrd	r2, [r3]
 669 0194 FFF7FEFF 		bl	__aeabi_dadd
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 16


 670              	.LVL92:
 671 0198 FFF7FEFF 		bl	__aeabi_d2f
 672              	.LVL93:
 673 019c 0A90     		str	r0, [sp, #40]	@ float
 674              	.LVL94:
 144:../../motion_control.c ****         }
 675              		.loc 1 144 23 view .LVU152
 676 019e B3E7     		b	.L34
 677              	.LVL95:
 678              	.L39:
 679              	.LBB5:
 156:../../motion_control.c ****     {
 157:../../motion_control.c ****         i--;
 680              		.loc 1 157 9 is_stmt 1 view .LVU153
 681              		.loc 1 157 10 is_stmt 0 view .LVU154
 682 01a0 013C     		subs	r4, r4, #1
 683              	.LVL96:
 684              		.loc 1 157 10 view .LVU155
 685 01a2 E4B2     		uxtb	r4, r4
 686              	.LVL97:
 158:../../motion_control.c ****         increment[i] = (target[i] - mc_position[i])/segment_count;
 687              		.loc 1 158 9 is_stmt 1 view .LVU156
 688              		.loc 1 158 48 is_stmt 0 view .LVU157
 689 01a4 16AB     		add	r3, sp, #88
 690 01a6 03EB8406 		add	r6, r3, r4, lsl #2
 691              		.loc 1 158 35 view .LVU158
 692 01aa 56F80C1C 		ldr	r1, [r6, #-12]	@ float
 693 01ae 59F82400 		ldr	r0, [r9, r4, lsl #2]	@ float
 694 01b2 FFF7FEFF 		bl	__aeabi_fsub
 695              	.LVL98:
 696 01b6 0546     		mov	r5, r0
 697              		.loc 1 158 52 view .LVU159
 698 01b8 3846     		mov	r0, r7
 699 01ba FFF7FEFF 		bl	__aeabi_i2f
 700              	.LVL99:
 701 01be 0146     		mov	r1, r0
 702 01c0 2846     		mov	r0, r5
 703 01c2 FFF7FEFF 		bl	__aeabi_fdiv
 704              	.LVL100:
 705              		.loc 1 158 22 view .LVU160
 706 01c6 46F8180C 		str	r0, [r6, #-24]	@ float
 707              	.LVL101:
 708              	.L38:
 155:../../motion_control.c ****     {
 709              		.loc 1 155 34 is_stmt 1 discriminator 1 view .LVU161
 155:../../motion_control.c ****     {
 710              		.loc 1 155 5 is_stmt 0 discriminator 1 view .LVU162
 711 01ca 002C     		cmp	r4, #0
 712 01cc E8D1     		bne	.L39
 713 01ce 0D94     		str	r4, [sp, #52]
 714              	.LBE5:
 159:../../motion_control.c ****     }
 160:../../motion_control.c **** 
 161:../../motion_control.c ****     increment[axis_0] = 0;
 715              		.loc 1 161 5 is_stmt 1 view .LVU163
 716              		.loc 1 161 23 is_stmt 0 view .LVU164
 717 01d0 0022     		movs	r2, #0
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 17


 718 01d2 16AB     		add	r3, sp, #88
 719 01d4 03EB8A03 		add	r3, r3, r10, lsl #2
 720 01d8 43F8182C 		str	r2, [r3, #-24]	@ float
 162:../../motion_control.c ****     increment[axis_1] = 0;
 721              		.loc 1 162 5 is_stmt 1 view .LVU165
 722              		.loc 1 162 23 is_stmt 0 view .LVU166
 723 01dc 16AB     		add	r3, sp, #88
 724 01de 03EB8B03 		add	r3, r3, fp, lsl #2
 725 01e2 43F8182C 		str	r2, [r3, #-24]	@ float
 163:../../motion_control.c **** 
 164:../../motion_control.c ****     if(CHECKFLAG(block_data.motion_mode,PLANNER_MOTION_MODE_INVERSEFEED))
 726              		.loc 1 164 5 is_stmt 1 view .LVU167
 727              		.loc 1 164 8 is_stmt 0 view .LVU168
 728 01e6 9DF8A430 		ldrb	r3, [sp, #164]	@ zero_extendqisi2
 729              		.loc 1 164 7 view .LVU169
 730 01ea 13F0040F 		tst	r3, #4
 731 01ee 07D0     		beq	.L40
 165:../../motion_control.c ****     {
 166:../../motion_control.c ****         //split the required time to complete the motion with the number of segments
 167:../../motion_control.c ****         block_data.feed /= segment_count;
 732              		.loc 1 167 9 is_stmt 1 view .LVU170
 733              		.loc 1 167 25 is_stmt 0 view .LVU171
 734 01f0 0598     		ldr	r0, [sp, #20]
 735 01f2 FFF7FEFF 		bl	__aeabi_i2f
 736              	.LVL102:
 737 01f6 0146     		mov	r1, r0
 738 01f8 2798     		ldr	r0, [sp, #156]	@ float
 739 01fa FFF7FEFF 		bl	__aeabi_fdiv
 740              	.LVL103:
 741 01fe 2790     		str	r0, [sp, #156]	@ float
 742              	.L40:
 168:../../motion_control.c ****     }
 169:../../motion_control.c **** 
 170:../../motion_control.c ****     //calculates an aproximation to sine and cosine of the angle segment
 171:../../motion_control.c ****     //improves the error for the cosine by calculating an extra term of the taylor series at the ex
 172:../../motion_control.c ****     //applies arc correction has grbl does
 173:../../motion_control.c ****     float arc_per_sgm_sqr = arc_per_sgm * arc_per_sgm;
 743              		.loc 1 173 5 is_stmt 1 view .LVU172
 744              		.loc 1 173 11 is_stmt 0 view .LVU173
 745 0200 0A9E     		ldr	r6, [sp, #40]	@ float
 746 0202 3146     		mov	r1, r6
 747 0204 3046     		mov	r0, r6
 748 0206 FFF7FEFF 		bl	__aeabi_fmul
 749              	.LVL104:
 750 020a 0546     		mov	r5, r0
 751              	.LVL105:
 174:../../motion_control.c ****     float cos_per_sgm = 1 - 0.1666666667f * arc_per_sgm_sqr;
 752              		.loc 1 174 5 is_stmt 1 view .LVU174
 753              		.loc 1 174 43 is_stmt 0 view .LVU175
 754 020c 5049     		ldr	r1, .L67+24
 755 020e FFF7FEFF 		bl	__aeabi_fmul
 756              	.LVL106:
 757              		.loc 1 174 43 view .LVU176
 758 0212 0146     		mov	r1, r0
 759              		.loc 1 174 11 view .LVU177
 760 0214 4FF07E50 		mov	r0, #1065353216
 761 0218 FFF7FEFF 		bl	__aeabi_fsub
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 18


 762              	.LVL107:
 763 021c 0446     		mov	r4, r0
 764              	.LVL108:
 175:../../motion_control.c ****     float sin_per_sgm = arc_per_sgm * cos_per_sgm;
 765              		.loc 1 175 5 is_stmt 1 view .LVU178
 766              		.loc 1 175 11 is_stmt 0 view .LVU179
 767 021e 0146     		mov	r1, r0
 768 0220 3046     		mov	r0, r6
 769              	.LVL109:
 770              		.loc 1 175 11 view .LVU180
 771 0222 FFF7FEFF 		bl	__aeabi_fmul
 772              	.LVL110:
 773              		.loc 1 175 11 view .LVU181
 774 0226 0490     		str	r0, [sp, #16]	@ float
 775              	.LVL111:
 176:../../motion_control.c ****     cos_per_sgm = 1 - 0.25f * arc_per_sgm_sqr * (cos_per_sgm + 1);
 776              		.loc 1 176 5 is_stmt 1 view .LVU182
 777              		.loc 1 176 29 is_stmt 0 view .LVU183
 778 0228 4FF07A51 		mov	r1, #1048576000
 779 022c 2846     		mov	r0, r5
 780              	.LVL112:
 781              		.loc 1 176 29 view .LVU184
 782 022e FFF7FEFF 		bl	__aeabi_fmul
 783              	.LVL113:
 784 0232 0546     		mov	r5, r0
 785              	.LVL114:
 786              		.loc 1 176 62 view .LVU185
 787 0234 4FF07E51 		mov	r1, #1065353216
 788 0238 2046     		mov	r0, r4
 789 023a FFF7FEFF 		bl	__aeabi_fadd
 790              	.LVL115:
 791 023e 0146     		mov	r1, r0
 792              		.loc 1 176 47 view .LVU186
 793 0240 2846     		mov	r0, r5
 794 0242 FFF7FEFF 		bl	__aeabi_fmul
 795              	.LVL116:
 796 0246 0146     		mov	r1, r0
 797              		.loc 1 176 17 view .LVU187
 798 0248 4FF07E50 		mov	r0, #1065353216
 799 024c FFF7FEFF 		bl	__aeabi_fsub
 800              	.LVL117:
 801 0250 0B90     		str	r0, [sp, #44]	@ float
 802              	.LVL118:
 177:../../motion_control.c **** 
 178:../../motion_control.c ****     uint8_t count = 0;
 803              		.loc 1 178 5 is_stmt 1 view .LVU188
 179:../../motion_control.c **** 
 180:../../motion_control.c ****     for (uint16_t i = 1; i < segment_count; i++)
 804              		.loc 1 180 5 view .LVU189
 805              	.LBB6:
 806              		.loc 1 180 10 view .LVU190
 807              		.loc 1 180 10 is_stmt 0 view .LVU191
 808              	.LBE6:
 178:../../motion_control.c **** 
 809              		.loc 1 178 13 view .LVU192
 810 0252 DDF83490 		ldr	r9, [sp, #52]
 122:../../motion_control.c ****     float pt0_b = -center_offset_b;
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 19


 811              		.loc 1 122 11 view .LVU193
 812 0256 0C9E     		ldr	r6, [sp, #48]	@ float
 813              	.LBB12:
 814              		.loc 1 180 19 view .LVU194
 815 0258 0127     		movs	r7, #1
 816              		.loc 1 180 5 view .LVU195
 817 025a 89E0     		b	.L41
 818              	.LVL119:
 819              	.L42:
 820              	.LBB7:
 821              	.LBB8:
 181:../../motion_control.c ****     {
 182:../../motion_control.c ****         if (count < N_ARC_CORRECTION)
 183:../../motion_control.c ****         {
 184:../../motion_control.c ****             // Apply incremental vector rotation matrix.
 185:../../motion_control.c ****             float new_pt = pt0_a * sin_per_sgm + pt0_b * cos_per_sgm;
 186:../../motion_control.c ****             pt0_a = pt0_a * cos_per_sgm - pt0_b * sin_per_sgm;
 187:../../motion_control.c ****             pt0_b = new_pt;
 188:../../motion_control.c ****             count++;
 189:../../motion_control.c ****         }
 190:../../motion_control.c ****         else
 191:../../motion_control.c ****         {
 192:../../motion_control.c ****             // Arc correction to radius vector. Computed only every N_ARC_CORRECTION increments.
 193:../../motion_control.c ****             // Compute exact location by applying transformation matrix from initial radius vector(
 194:../../motion_control.c ****             float angle = i * arc_per_sgm;
 822              		.loc 1 194 13 is_stmt 1 view .LVU196
 823              		.loc 1 194 29 is_stmt 0 view .LVU197
 824 025c 3846     		mov	r0, r7
 825 025e FFF7FEFF 		bl	__aeabi_i2f
 826              	.LVL120:
 827              		.loc 1 194 19 view .LVU198
 828 0262 0A99     		ldr	r1, [sp, #40]	@ float
 829 0264 FFF7FEFF 		bl	__aeabi_fmul
 830              	.LVL121:
 831 0268 0646     		mov	r6, r0
 832              	.LVL122:
 195:../../motion_control.c ****             float precise_cos = cos(angle);
 833              		.loc 1 195 13 is_stmt 1 view .LVU199
 834              		.loc 1 195 33 is_stmt 0 view .LVU200
 835 026a FFF7FEFF 		bl	__aeabi_f2d
 836              	.LVL123:
 837              		.loc 1 195 33 view .LVU201
 838 026e FFF7FEFF 		bl	cos
 839              	.LVL124:
 840              		.loc 1 195 19 view .LVU202
 841 0272 FFF7FEFF 		bl	__aeabi_d2f
 842              	.LVL125:
 843 0276 0546     		mov	r5, r0
 844              	.LVL126:
 196:../../motion_control.c ****             //calculates sine using sine and cosine relation equation
 197:../../motion_control.c ****             //	sin(x)^2 + cos(x)^2 = 1
 198:../../motion_control.c ****             //
 199:../../motion_control.c ****             //this is executes in about 50% the time of a sin function
 200:../../motion_control.c ****             //https://www.nongnu.org/avr-libc/user-manual/benchmarks.html
 201:../../motion_control.c ****             float precise_sin = sqrt(1 - precise_cos * precise_cos);
 845              		.loc 1 201 13 is_stmt 1 view .LVU203
 846              		.loc 1 201 54 is_stmt 0 view .LVU204
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 20


 847 0278 0146     		mov	r1, r0
 848 027a FFF7FEFF 		bl	__aeabi_fmul
 849              	.LVL127:
 850              		.loc 1 201 54 view .LVU205
 851 027e 0146     		mov	r1, r0
 852              		.loc 1 201 40 view .LVU206
 853 0280 4FF07E50 		mov	r0, #1065353216
 854 0284 FFF7FEFF 		bl	__aeabi_fsub
 855              	.LVL128:
 856              		.loc 1 201 33 view .LVU207
 857 0288 FFF7FEFF 		bl	__aeabi_f2d
 858              	.LVL129:
 859 028c FFF7FEFF 		bl	sqrt
 860              	.LVL130:
 861              		.loc 1 201 19 view .LVU208
 862 0290 FFF7FEFF 		bl	__aeabi_d2f
 863              	.LVL131:
 864 0294 0446     		mov	r4, r0
 865              	.LVL132:
 202:../../motion_control.c ****             if(angle >= 0)
 866              		.loc 1 202 13 is_stmt 1 view .LVU209
 867              		.loc 1 202 15 is_stmt 0 view .LVU210
 868 0296 0021     		movs	r1, #0
 869 0298 3046     		mov	r0, r6
 870              	.LVL133:
 871              		.loc 1 202 15 view .LVU211
 872 029a FFF7FEFF 		bl	__aeabi_fcmpge
 873              	.LVL134:
 874 029e 0028     		cmp	r0, #0
 875 02a0 35D0     		beq	.L59
 203:../../motion_control.c ****             {
 204:../../motion_control.c ****                 precise_sin = (ABS(angle)<=M_PI) ? precise_sin : -precise_sin;
 876              		.loc 1 204 17 is_stmt 1 view .LVU212
 877              		.loc 1 204 32 is_stmt 0 view .LVU213
 878 02a2 0021     		movs	r1, #0
 879 02a4 3046     		mov	r0, r6
 880 02a6 FFF7FEFF 		bl	__aeabi_fcmpgt
 881              	.LVL135:
 882 02aa 68B3     		cbz	r0, .L63
 883              	.LVL136:
 884              	.L46:
 885              		.loc 1 204 32 discriminator 4 view .LVU214
 886 02ac 3046     		mov	r0, r6
 887 02ae FFF7FEFF 		bl	__aeabi_f2d
 888              	.LVL137:
 889              		.loc 1 204 64 discriminator 4 view .LVU215
 890 02b2 23A3     		adr	r3, .L67+8
 891 02b4 D3E90023 		ldrd	r2, [r3]
 892 02b8 FFF7FEFF 		bl	__aeabi_dcmple
 893              	.LVL138:
 894 02bc 08B9     		cbnz	r0, .L47
 895              		.loc 1 204 64 discriminator 6 view .LVU216
 896 02be 04F10044 		add	r4, r4, #-2147483648
 897              	.LVL139:
 898              	.L47:
 205:../../motion_control.c ****             }
 206:../../motion_control.c ****             else
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 21


 207:../../motion_control.c ****             {
 208:../../motion_control.c ****                 precise_sin = (ABS(angle)<=M_PI) ? -precise_sin : precise_sin;
 209:../../motion_control.c ****             }
 210:../../motion_control.c **** 
 211:../../motion_control.c ****             pt0_a = -center_offset_a * precise_cos + center_offset_b * precise_sin;
 899              		.loc 1 211 13 is_stmt 1 view .LVU217
 900              		.loc 1 211 38 is_stmt 0 view .LVU218
 901 02c2 2946     		mov	r1, r5
 902 02c4 DDF83090 		ldr	r9, [sp, #48]	@ float
 903              	.LVL140:
 904              		.loc 1 211 38 view .LVU219
 905 02c8 4846     		mov	r0, r9
 906 02ca FFF7FEFF 		bl	__aeabi_fmul
 907              	.LVL141:
 908 02ce 0646     		mov	r6, r0
 909              		.loc 1 211 70 view .LVU220
 910 02d0 DDF83880 		ldr	r8, [sp, #56]	@ float
 911              	.LVL142:
 912              		.loc 1 211 70 view .LVU221
 913 02d4 4146     		mov	r1, r8
 914 02d6 2046     		mov	r0, r4
 915 02d8 FFF7FEFF 		bl	__aeabi_fmul
 916              	.LVL143:
 917 02dc 0146     		mov	r1, r0
 918              		.loc 1 211 19 view .LVU222
 919 02de 3046     		mov	r0, r6
 920 02e0 FFF7FEFF 		bl	__aeabi_fadd
 921              	.LVL144:
 922 02e4 0646     		mov	r6, r0
 923              	.LVL145:
 212:../../motion_control.c ****             pt0_b = -center_offset_a * precise_sin - center_offset_b * precise_cos;
 924              		.loc 1 212 13 is_stmt 1 view .LVU223
 925              		.loc 1 212 38 is_stmt 0 view .LVU224
 926 02e6 4946     		mov	r1, r9
 927 02e8 2046     		mov	r0, r4
 928              	.LVL146:
 929              		.loc 1 212 38 view .LVU225
 930 02ea FFF7FEFF 		bl	__aeabi_fmul
 931              	.LVL147:
 932 02ee 0446     		mov	r4, r0
 933              	.LVL148:
 934              		.loc 1 212 70 view .LVU226
 935 02f0 2946     		mov	r1, r5
 936 02f2 4046     		mov	r0, r8
 937 02f4 FFF7FEFF 		bl	__aeabi_fmul
 938              	.LVL149:
 939 02f8 0146     		mov	r1, r0
 940              		.loc 1 212 19 view .LVU227
 941 02fa 2046     		mov	r0, r4
 942 02fc FFF7FEFF 		bl	__aeabi_fsub
 943              	.LVL150:
 944 0300 8046     		mov	r8, r0
 945              	.LVL151:
 213:../../motion_control.c ****             count = 0;
 946              		.loc 1 213 13 is_stmt 1 view .LVU228
 947              		.loc 1 213 19 is_stmt 0 view .LVU229
 948 0302 DDF83490 		ldr	r9, [sp, #52]
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 22


 949 0306 5CE0     		b	.L43
 950              	.LVL152:
 951              	.L63:
 204:../../motion_control.c ****             }
 952              		.loc 1 204 32 discriminator 2 view .LVU230
 953 0308 06F10046 		add	r6, r6, #-2147483648
 954              	.LVL153:
 204:../../motion_control.c ****             }
 955              		.loc 1 204 32 discriminator 2 view .LVU231
 956 030c CEE7     		b	.L46
 957              	.LVL154:
 958              	.L59:
 208:../../motion_control.c ****             }
 959              		.loc 1 208 17 is_stmt 1 view .LVU232
 208:../../motion_control.c ****             }
 960              		.loc 1 208 32 is_stmt 0 view .LVU233
 961 030e 0021     		movs	r1, #0
 962 0310 3046     		mov	r0, r6
 963 0312 FFF7FEFF 		bl	__aeabi_fcmpgt
 964              	.LVL155:
 965 0316 60B1     		cbz	r0, .L64
 966              	.LVL156:
 967              	.L48:
 208:../../motion_control.c ****             }
 968              		.loc 1 208 32 discriminator 4 view .LVU234
 969 0318 3046     		mov	r0, r6
 970 031a FFF7FEFF 		bl	__aeabi_f2d
 971              	.LVL157:
 208:../../motion_control.c ****             }
 972              		.loc 1 208 65 discriminator 4 view .LVU235
 973 031e 08A3     		adr	r3, .L67+8
 974 0320 D3E90023 		ldrd	r2, [r3]
 975 0324 FFF7FEFF 		bl	__aeabi_dcmple
 976              	.LVL158:
 977 0328 0028     		cmp	r0, #0
 978 032a CAD0     		beq	.L47
 208:../../motion_control.c ****             }
 979              		.loc 1 208 65 discriminator 5 view .LVU236
 980 032c 04F10044 		add	r4, r4, #-2147483648
 981              	.LVL159:
 208:../../motion_control.c ****             }
 982              		.loc 1 208 65 discriminator 5 view .LVU237
 983 0330 C7E7     		b	.L47
 984              	.LVL160:
 985              	.L64:
 208:../../motion_control.c ****             }
 986              		.loc 1 208 32 discriminator 2 view .LVU238
 987 0332 06F10046 		add	r6, r6, #-2147483648
 988              	.LVL161:
 208:../../motion_control.c ****             }
 989              		.loc 1 208 32 discriminator 2 view .LVU239
 990 0336 EFE7     		b	.L48
 991              	.L68:
 992              		.align	3
 993              	.L67:
 994 0338 182D4454 		.word	1413754136
 995 033c FB211940 		.word	1075388923
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 23


 996 0340 182D4454 		.word	1413754136
 997 0344 FB210940 		.word	1074340347
 998 0348 0000E03F 		.word	1071644672
 999 034c 00000000 		.word	g_settings
 1000 0350 ABAA2A3E 		.word	1042983595
 1001              	.LVL162:
 1002              	.L66:
 208:../../motion_control.c ****             }
 1003              		.loc 1 208 32 discriminator 2 view .LVU240
 1004              	.LBE8:
 214:../../motion_control.c ****         }
 215:../../motion_control.c **** 
 216:../../motion_control.c ****         // Update arc_target location
 217:../../motion_control.c ****         mc_position[axis_0] = ptcenter_a + pt0_a;
 218:../../motion_control.c ****         mc_position[axis_1] = ptcenter_b + pt0_b;
 219:../../motion_control.c ****         for (uint8_t i = AXIS_COUNT; i != 0;)
 220:../../motion_control.c ****         {
 221:../../motion_control.c ****             i--;
 222:../../motion_control.c ****             if (i != axis_0 && i != axis_1)
 223:../../motion_control.c ****             {
 224:../../motion_control.c ****                 mc_position[i] += increment[i];
 225:../../motion_control.c ****             }
 226:../../motion_control.c ****         }
 227:../../motion_control.c **** 
 228:../../motion_control.c ****         uint8_t error = mc_line(mc_position, block_data);
 1005              		.loc 1 228 9 is_stmt 1 view .LVU241
 1006              		.loc 1 228 25 is_stmt 0 view .LVU242
 1007 0354 26AB     		add	r3, sp, #152
 1008 0356 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1009 0358 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 1010 035c 23AB     		add	r3, sp, #140
 1011 035e 0ECB     		ldm	r3, {r1, r2, r3}
 1012 0360 13A8     		add	r0, sp, #76
 1013 0362 FFF7FEFF 		bl	mc_line
 1014              	.LVL163:
 229:../../motion_control.c ****         if (error)
 1015              		.loc 1 229 9 is_stmt 1 view .LVU243
 1016              		.loc 1 229 12 is_stmt 0 view .LVU244
 1017 0366 0346     		mov	r3, r0
 1018 0368 0028     		cmp	r0, #0
 1019 036a 5DD1     		bne	.L53
 1020              	.LBE7:
 180:../../motion_control.c ****     {
 1021              		.loc 1 180 45 is_stmt 1 discriminator 2 view .LVU245
 180:../../motion_control.c ****     {
 1022              		.loc 1 180 46 is_stmt 0 discriminator 2 view .LVU246
 1023 036c 0137     		adds	r7, r7, #1
 1024              	.LVL164:
 180:../../motion_control.c ****     {
 1025              		.loc 1 180 46 discriminator 2 view .LVU247
 1026 036e BFB2     		uxth	r7, r7
 1027              	.LVL165:
 1028              	.L41:
 180:../../motion_control.c ****     {
 1029              		.loc 1 180 26 is_stmt 1 discriminator 1 view .LVU248
 180:../../motion_control.c ****     {
 1030              		.loc 1 180 5 is_stmt 0 discriminator 1 view .LVU249
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 24


 1031 0370 059B     		ldr	r3, [sp, #20]
 1032 0372 9F42     		cmp	r7, r3
 1033 0374 4ED2     		bcs	.L65
 1034              	.LBB11:
 182:../../motion_control.c ****         {
 1035              		.loc 1 182 9 is_stmt 1 view .LVU250
 182:../../motion_control.c ****         {
 1036              		.loc 1 182 12 is_stmt 0 view .LVU251
 1037 0376 B9F10B0F 		cmp	r9, #11
 1038 037a 3FF66FAF 		bhi	.L42
 1039              	.LBB9:
 185:../../motion_control.c ****             pt0_a = pt0_a * cos_per_sgm - pt0_b * sin_per_sgm;
 1040              		.loc 1 185 13 is_stmt 1 view .LVU252
 185:../../motion_control.c ****             pt0_a = pt0_a * cos_per_sgm - pt0_b * sin_per_sgm;
 1041              		.loc 1 185 34 is_stmt 0 view .LVU253
 1042 037e 0499     		ldr	r1, [sp, #16]	@ float
 1043 0380 3046     		mov	r0, r6
 1044 0382 FFF7FEFF 		bl	__aeabi_fmul
 1045              	.LVL166:
 1046 0386 0446     		mov	r4, r0
 185:../../motion_control.c ****             pt0_a = pt0_a * cos_per_sgm - pt0_b * sin_per_sgm;
 1047              		.loc 1 185 56 view .LVU254
 1048 0388 0B9D     		ldr	r5, [sp, #44]	@ float
 1049 038a 2946     		mov	r1, r5
 1050 038c 4046     		mov	r0, r8
 1051 038e FFF7FEFF 		bl	__aeabi_fmul
 1052              	.LVL167:
 1053 0392 0146     		mov	r1, r0
 185:../../motion_control.c ****             pt0_a = pt0_a * cos_per_sgm - pt0_b * sin_per_sgm;
 1054              		.loc 1 185 19 view .LVU255
 1055 0394 2046     		mov	r0, r4
 1056 0396 FFF7FEFF 		bl	__aeabi_fadd
 1057              	.LVL168:
 1058 039a 0446     		mov	r4, r0
 1059              	.LVL169:
 186:../../motion_control.c ****             pt0_b = new_pt;
 1060              		.loc 1 186 13 is_stmt 1 view .LVU256
 186:../../motion_control.c ****             pt0_b = new_pt;
 1061              		.loc 1 186 27 is_stmt 0 view .LVU257
 1062 039c 2946     		mov	r1, r5
 1063 039e 3046     		mov	r0, r6
 1064              	.LVL170:
 186:../../motion_control.c ****             pt0_b = new_pt;
 1065              		.loc 1 186 27 view .LVU258
 1066 03a0 FFF7FEFF 		bl	__aeabi_fmul
 1067              	.LVL171:
 1068 03a4 0546     		mov	r5, r0
 186:../../motion_control.c ****             pt0_b = new_pt;
 1069              		.loc 1 186 49 view .LVU259
 1070 03a6 0499     		ldr	r1, [sp, #16]	@ float
 1071 03a8 4046     		mov	r0, r8
 1072 03aa FFF7FEFF 		bl	__aeabi_fmul
 1073              	.LVL172:
 1074 03ae 0146     		mov	r1, r0
 186:../../motion_control.c ****             pt0_b = new_pt;
 1075              		.loc 1 186 19 view .LVU260
 1076 03b0 2846     		mov	r0, r5
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 25


 1077 03b2 FFF7FEFF 		bl	__aeabi_fsub
 1078              	.LVL173:
 1079 03b6 0646     		mov	r6, r0
 1080              	.LVL174:
 187:../../motion_control.c ****             count++;
 1081              		.loc 1 187 13 is_stmt 1 view .LVU261
 188:../../motion_control.c ****         }
 1082              		.loc 1 188 13 view .LVU262
 188:../../motion_control.c ****         }
 1083              		.loc 1 188 18 is_stmt 0 view .LVU263
 1084 03b8 09F10109 		add	r9, r9, #1
 1085              	.LVL175:
 188:../../motion_control.c ****         }
 1086              		.loc 1 188 18 view .LVU264
 1087 03bc 5FFA89F9 		uxtb	r9, r9
 1088              	.LVL176:
 187:../../motion_control.c ****             count++;
 1089              		.loc 1 187 19 view .LVU265
 1090 03c0 A046     		mov	r8, r4
 1091              	.LVL177:
 1092              	.L43:
 187:../../motion_control.c ****             count++;
 1093              		.loc 1 187 19 view .LVU266
 1094              	.LBE9:
 217:../../motion_control.c ****         mc_position[axis_1] = ptcenter_b + pt0_b;
 1095              		.loc 1 217 9 is_stmt 1 view .LVU267
 217:../../motion_control.c ****         mc_position[axis_1] = ptcenter_b + pt0_b;
 1096              		.loc 1 217 42 is_stmt 0 view .LVU268
 1097 03c2 0899     		ldr	r1, [sp, #32]	@ float
 1098 03c4 3046     		mov	r0, r6
 1099 03c6 FFF7FEFF 		bl	__aeabi_fadd
 1100              	.LVL178:
 217:../../motion_control.c ****         mc_position[axis_1] = ptcenter_b + pt0_b;
 1101              		.loc 1 217 29 view .LVU269
 1102 03ca 16AA     		add	r2, sp, #88
 1103 03cc 069B     		ldr	r3, [sp, #24]
 1104 03ce 02EB8303 		add	r3, r2, r3, lsl #2
 1105 03d2 43F80C0C 		str	r0, [r3, #-12]	@ float
 218:../../motion_control.c ****         for (uint8_t i = AXIS_COUNT; i != 0;)
 1106              		.loc 1 218 9 is_stmt 1 view .LVU270
 218:../../motion_control.c ****         for (uint8_t i = AXIS_COUNT; i != 0;)
 1107              		.loc 1 218 42 is_stmt 0 view .LVU271
 1108 03d6 0999     		ldr	r1, [sp, #36]	@ float
 1109 03d8 4046     		mov	r0, r8
 1110 03da FFF7FEFF 		bl	__aeabi_fadd
 1111              	.LVL179:
 218:../../motion_control.c ****         for (uint8_t i = AXIS_COUNT; i != 0;)
 1112              		.loc 1 218 29 view .LVU272
 1113 03de 16AA     		add	r2, sp, #88
 1114 03e0 079B     		ldr	r3, [sp, #28]
 1115 03e2 02EB8303 		add	r3, r2, r3, lsl #2
 1116 03e6 43F80C0C 		str	r0, [r3, #-12]	@ float
 219:../../motion_control.c ****         {
 1117              		.loc 1 219 9 is_stmt 1 view .LVU273
 1118              	.LBB10:
 219:../../motion_control.c ****         {
 1119              		.loc 1 219 14 view .LVU274
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 26


 1120              	.LVL180:
 219:../../motion_control.c ****         {
 1121              		.loc 1 219 22 is_stmt 0 view .LVU275
 1122 03ea 0324     		movs	r4, #3
 1123              	.LVL181:
 1124              	.L50:
 219:../../motion_control.c ****         {
 1125              		.loc 1 219 38 is_stmt 1 discriminator 1 view .LVU276
 219:../../motion_control.c ****         {
 1126              		.loc 1 219 9 is_stmt 0 discriminator 1 view .LVU277
 1127 03ec 002C     		cmp	r4, #0
 1128 03ee B1D0     		beq	.L66
 221:../../motion_control.c ****             if (i != axis_0 && i != axis_1)
 1129              		.loc 1 221 13 is_stmt 1 view .LVU278
 221:../../motion_control.c ****             if (i != axis_0 && i != axis_1)
 1130              		.loc 1 221 14 is_stmt 0 view .LVU279
 1131 03f0 013C     		subs	r4, r4, #1
 1132              	.LVL182:
 221:../../motion_control.c ****             if (i != axis_0 && i != axis_1)
 1133              		.loc 1 221 14 view .LVU280
 1134 03f2 E4B2     		uxtb	r4, r4
 1135              	.LVL183:
 222:../../motion_control.c ****             {
 1136              		.loc 1 222 13 is_stmt 1 view .LVU281
 222:../../motion_control.c ****             {
 1137              		.loc 1 222 16 is_stmt 0 view .LVU282
 1138 03f4 A245     		cmp	r10, r4
 1139 03f6 F9D0     		beq	.L50
 222:../../motion_control.c ****             {
 1140              		.loc 1 222 29 discriminator 1 view .LVU283
 1141 03f8 A345     		cmp	fp, r4
 1142 03fa F7D0     		beq	.L50
 224:../../motion_control.c ****             }
 1143              		.loc 1 224 17 is_stmt 1 view .LVU284
 224:../../motion_control.c ****             }
 1144              		.loc 1 224 44 is_stmt 0 view .LVU285
 1145 03fc 16AB     		add	r3, sp, #88
 1146 03fe 03EB8405 		add	r5, r3, r4, lsl #2
 224:../../motion_control.c ****             }
 1147              		.loc 1 224 32 view .LVU286
 1148 0402 55F8181C 		ldr	r1, [r5, #-24]	@ float
 1149 0406 55F80C0C 		ldr	r0, [r5, #-12]	@ float
 1150 040a FFF7FEFF 		bl	__aeabi_fadd
 1151              	.LVL184:
 1152 040e 45F80C0C 		str	r0, [r5, #-12]	@ float
 1153 0412 EBE7     		b	.L50
 1154              	.LVL185:
 1155              	.L65:
 224:../../motion_control.c ****             }
 1156              		.loc 1 224 32 view .LVU287
 1157              	.LBE10:
 1158              	.LBE11:
 1159              	.LBE12:
 230:../../motion_control.c ****         {
 231:../../motion_control.c ****             return error;
 232:../../motion_control.c ****         }
 233:../../motion_control.c ****     }
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 27


 234:../../motion_control.c ****     // Ensure last segment arrives at target location.
 235:../../motion_control.c ****     return mc_line(target, block_data);
 1160              		.loc 1 235 5 is_stmt 1 view .LVU288
 1161              		.loc 1 235 12 is_stmt 0 view .LVU289
 1162 0414 26AB     		add	r3, sp, #152
 1163 0416 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1164 0418 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 1165 041c 23AB     		add	r3, sp, #140
 1166 041e 0ECB     		ldm	r3, {r1, r2, r3}
 1167 0420 0F98     		ldr	r0, [sp, #60]
 1168 0422 FFF7FEFF 		bl	mc_line
 1169              	.LVL186:
 1170 0426 0346     		mov	r3, r0
 1171              	.L53:
 236:../../motion_control.c **** }
 1172              		.loc 1 236 1 view .LVU290
 1173 0428 1846     		mov	r0, r3
 1174 042a 17B0     		add	sp, sp, #92
 1175              	.LCFI8:
 1176              		.cfi_def_cfa_offset 36
 1177              		@ sp needed
 1178 042c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1179              		.loc 1 236 1 view .LVU291
 1180              		.cfi_endproc
 1181              	.LFE69:
 1183              		.section	.text.mc_dwell,"ax",%progbits
 1184              		.align	1
 1185              		.global	mc_dwell
 1186              		.syntax unified
 1187              		.thumb
 1188              		.thumb_func
 1189              		.fpu softvfp
 1191              	mc_dwell:
 1192              	.LFB70:
 237:../../motion_control.c **** 
 238:../../motion_control.c **** uint8_t mc_dwell(planner_block_data_t block_data)
 239:../../motion_control.c **** {
 1193              		.loc 1 239 1 is_stmt 1 view -0
 1194              		.cfi_startproc
 1195              		@ args = 28, pretend = 16, frame = 0
 1196              		@ frame_needed = 0, uses_anonymous_args = 0
 1197 0000 84B0     		sub	sp, sp, #16
 1198              	.LCFI9:
 1199              		.cfi_def_cfa_offset 16
 1200 0002 00B5     		push	{lr}
 1201              	.LCFI10:
 1202              		.cfi_def_cfa_offset 20
 1203              		.cfi_offset 14, -20
 1204 0004 85B0     		sub	sp, sp, #20
 1205              	.LCFI11:
 1206              		.cfi_def_cfa_offset 40
 1207 0006 0DF1180C 		add	ip, sp, #24
 1208 000a 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 240:../../motion_control.c ****     if (mc_checkmode) // check mode (gcode simulation) doesn't send code to planner
 1209              		.loc 1 240 5 view .LVU293
 1210              		.loc 1 240 9 is_stmt 0 view .LVU294
 1211 000e 104B     		ldr	r3, .L78
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 28


 1212 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1213              		.loc 1 240 8 view .LVU295
 1214 0012 B3B9     		cbnz	r3, .L76
 1215              	.L71:
 241:../../motion_control.c ****     {
 242:../../motion_control.c ****         return STATUS_OK;
 243:../../motion_control.c ****     }
 244:../../motion_control.c **** 
 245:../../motion_control.c ****     while (planner_buffer_is_full())
 1216              		.loc 1 245 11 is_stmt 1 view .LVU296
 1217              		.loc 1 245 12 is_stmt 0 view .LVU297
 1218 0014 FFF7FEFF 		bl	planner_buffer_is_full
 1219              	.LVL187:
 1220              		.loc 1 245 11 view .LVU298
 1221 0018 28B1     		cbz	r0, .L77
 246:../../motion_control.c ****     {
 247:../../motion_control.c ****         if(!cnc_doevents())
 1222              		.loc 1 247 9 is_stmt 1 view .LVU299
 1223              		.loc 1 247 13 is_stmt 0 view .LVU300
 1224 001a FFF7FEFF 		bl	cnc_doevents
 1225              	.LVL188:
 1226              		.loc 1 247 11 view .LVU301
 1227 001e 0028     		cmp	r0, #0
 1228 0020 F8D1     		bne	.L71
 248:../../motion_control.c ****         {
 249:../../motion_control.c ****             return STATUS_CRITICAL_FAIL;
 1229              		.loc 1 249 20 view .LVU302
 1230 0022 FF20     		movs	r0, #255
 1231 0024 0EE0     		b	.L70
 1232              	.L77:
 250:../../motion_control.c ****         }
 251:../../motion_control.c ****     }
 252:../../motion_control.c **** 
 253:../../motion_control.c ****     //send dwell (planner linear motion with distance == 0)
 254:../../motion_control.c ****     block_data.motion_mode = PLANNER_MOTION_MODE_NOMOTION;
 1233              		.loc 1 254 5 is_stmt 1 view .LVU303
 1234              		.loc 1 254 28 is_stmt 0 view .LVU304
 1235 0026 0123     		movs	r3, #1
 1236 0028 8DF83030 		strb	r3, [sp, #48]
 255:../../motion_control.c ****     planner_add_line(NULL, block_data);
 1237              		.loc 1 255 5 is_stmt 1 view .LVU305
 1238 002c 09AB     		add	r3, sp, #36
 1239 002e 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1240 0030 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 1241 0034 06AB     		add	r3, sp, #24
 1242 0036 0ECB     		ldm	r3, {r1, r2, r3}
 1243 0038 0020     		movs	r0, #0
 1244 003a FFF7FEFF 		bl	planner_add_line
 1245              	.LVL189:
 256:../../motion_control.c ****     return STATUS_OK;
 1246              		.loc 1 256 5 view .LVU306
 1247              		.loc 1 256 12 is_stmt 0 view .LVU307
 1248 003e 0020     		movs	r0, #0
 1249 0040 00E0     		b	.L70
 1250              	.L76:
 242:../../motion_control.c ****     }
 1251              		.loc 1 242 16 view .LVU308
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 29


 1252 0042 0020     		movs	r0, #0
 1253              	.L70:
 257:../../motion_control.c **** }
 1254              		.loc 1 257 1 view .LVU309
 1255 0044 05B0     		add	sp, sp, #20
 1256              	.LCFI12:
 1257              		.cfi_def_cfa_offset 20
 1258              		@ sp needed
 1259 0046 5DF804EB 		ldr	lr, [sp], #4
 1260              	.LCFI13:
 1261              		.cfi_restore 14
 1262              		.cfi_def_cfa_offset 16
 1263 004a 04B0     		add	sp, sp, #16
 1264              	.LCFI14:
 1265              		.cfi_def_cfa_offset 0
 1266 004c 7047     		bx	lr
 1267              	.L79:
 1268 004e 00BF     		.align	2
 1269              	.L78:
 1270 0050 00000000 		.word	.LANCHOR0
 1271              		.cfi_endproc
 1272              	.LFE70:
 1274              		.section	.text.mc_home_axis,"ax",%progbits
 1275              		.align	1
 1276              		.global	mc_home_axis
 1277              		.syntax unified
 1278              		.thumb
 1279              		.thumb_func
 1280              		.fpu softvfp
 1282              	mc_home_axis:
 1283              	.LVL190:
 1284              	.LFB71:
 258:../../motion_control.c **** 
 259:../../motion_control.c **** uint8_t mc_home_axis(uint8_t axis, uint8_t axis_limit)
 260:../../motion_control.c **** {
 1285              		.loc 1 260 1 is_stmt 1 view -0
 1286              		.cfi_startproc
 1287              		@ args = 0, pretend = 0, frame = 40
 1288              		@ frame_needed = 0, uses_anonymous_args = 0
 1289              		.loc 1 260 1 is_stmt 0 view .LVU311
 1290 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1291              	.LCFI15:
 1292              		.cfi_def_cfa_offset 28
 1293              		.cfi_offset 4, -28
 1294              		.cfi_offset 5, -24
 1295              		.cfi_offset 6, -20
 1296              		.cfi_offset 7, -16
 1297              		.cfi_offset 8, -12
 1298              		.cfi_offset 9, -8
 1299              		.cfi_offset 14, -4
 1300 0004 8FB0     		sub	sp, sp, #60
 1301              	.LCFI16:
 1302              		.cfi_def_cfa_offset 88
 1303 0006 0446     		mov	r4, r0
 1304 0008 0E46     		mov	r6, r1
 261:../../motion_control.c ****     float target[AXIS_COUNT];
 1305              		.loc 1 261 5 is_stmt 1 view .LVU312
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 30


 262:../../motion_control.c ****     uint8_t axis_mask = (1 << axis);
 1306              		.loc 1 262 5 view .LVU313
 1307              		.loc 1 262 28 is_stmt 0 view .LVU314
 1308 000a 0123     		movs	r3, #1
 1309 000c 8340     		lsls	r3, r3, r0
 1310              		.loc 1 262 13 view .LVU315
 1311 000e DDB2     		uxtb	r5, r3
 1312              	.LVL191:
 263:../../motion_control.c ****     planner_block_data_t block_data;
 1313              		.loc 1 263 5 is_stmt 1 view .LVU316
 264:../../motion_control.c ****     uint8_t limits_flags;
 1314              		.loc 1 264 5 view .LVU317
 265:../../motion_control.c **** 
 266:../../motion_control.c ****     #ifdef ENABLE_DUAL_DRIVE_AXIS
 267:../../motion_control.c ****     #ifdef DUAL_DRIVE_AXIS0
 268:../../motion_control.c ****     axis_limit |= (axis != AXIS_DUAL0) ? 0 : (64|128); //if dual limit pins
 269:../../motion_control.c ****     #endif
 270:../../motion_control.c ****     #ifdef DUAL_DRIVE_AXIS1
 271:../../motion_control.c ****     axis_limit |= (axis != AXIS_DUAL1) ? 0 : (64|128); //if dual limit pins
 272:../../motion_control.c ****     #endif
 273:../../motion_control.c ****     #endif
 274:../../motion_control.c **** 
 275:../../motion_control.c ****     planner_get_position(target);
 1315              		.loc 1 275 5 view .LVU318
 1316 0010 0BA8     		add	r0, sp, #44
 1317              	.LVL192:
 1318              		.loc 1 275 5 is_stmt 0 view .LVU319
 1319 0012 FFF7FEFF 		bl	planner_get_position
 1320              	.LVL193:
 276:../../motion_control.c **** 
 277:../../motion_control.c ****     cnc_unlock();
 1321              		.loc 1 277 5 is_stmt 1 view .LVU320
 1322 0016 FFF7FEFF 		bl	cnc_unlock
 1323              	.LVL194:
 278:../../motion_control.c **** 
 279:../../motion_control.c ****     //if HOLD or ALARM are still active or any limit switch is not cleared fails to home
 280:../../motion_control.c ****     if (cnc_get_exec_state(EXEC_HOLD | EXEC_ALARM) || CHECKFLAG(io_get_limits(), LIMITS_MASK))
 1324              		.loc 1 280 5 view .LVU321
 1325              		.loc 1 280 9 is_stmt 0 view .LVU322
 1326 001a F220     		movs	r0, #242
 1327 001c FFF7FEFF 		bl	cnc_get_exec_state
 1328              	.LVL195:
 1329              		.loc 1 280 8 view .LVU323
 1330 0020 0028     		cmp	r0, #0
 1331 0022 40F0E280 		bne	.L81
 1332              		.loc 1 280 55 discriminator 1 view .LVU324
 1333 0026 FFF7FEFF 		bl	io_get_limits
 1334              	.LVL196:
 1335              		.loc 1 280 52 discriminator 1 view .LVU325
 1336 002a 10F03F0F 		tst	r0, #63
 1337 002e 40F0DC80 		bne	.L81
 281:../../motion_control.c ****     {
 282:../../motion_control.c ****         return EXEC_ALARM_HOMING_FAIL_LIMIT_ACTIVE;
 283:../../motion_control.c ****     }
 284:../../motion_control.c ****     
 285:../../motion_control.c ****     io_set_homing_limits_filter(axis_limit);
 1338              		.loc 1 285 5 is_stmt 1 view .LVU326
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 31


 1339 0032 3046     		mov	r0, r6
 1340 0034 FFF7FEFF 		bl	io_set_homing_limits_filter
 1341              	.LVL197:
 286:../../motion_control.c **** 
 287:../../motion_control.c ****     float max_home_dist;
 1342              		.loc 1 287 5 view .LVU327
 288:../../motion_control.c ****     max_home_dist = -g_settings.max_distance[axis] * 1.5f;
 1343              		.loc 1 288 5 view .LVU328
 1344              		.loc 1 288 45 is_stmt 0 view .LVU329
 1345 0038 DFF8D881 		ldr	r8, .L101
 1346 003c 04F11403 		add	r3, r4, #20
 1347 0040 08EB8303 		add	r3, r8, r3, lsl #2
 1348 0044 5868     		ldr	r0, [r3, #4]	@ float
 1349              		.loc 1 288 21 view .LVU330
 1350 0046 00F10040 		add	r0, r0, #-2147483648
 1351              		.loc 1 288 19 view .LVU331
 1352 004a 4FF07F51 		mov	r1, #1069547520
 1353 004e FFF7FEFF 		bl	__aeabi_fmul
 1354              	.LVL198:
 1355 0052 0746     		mov	r7, r0
 1356              	.LVL199:
 289:../../motion_control.c ****     
 290:../../motion_control.c ****     //checks homing dir
 291:../../motion_control.c ****     if (g_settings.homing_dir_invert_mask & axis_mask)
 1357              		.loc 1 291 5 is_stmt 1 view .LVU332
 1358              		.loc 1 291 19 is_stmt 0 view .LVU333
 1359 0054 98F81830 		ldrb	r3, [r8, #24]	@ zero_extendqisi2
 1360              		.loc 1 291 8 view .LVU334
 1361 0058 2B42     		tst	r3, r5
 1362 005a 01D0     		beq	.L84
 292:../../motion_control.c ****     {
 293:../../motion_control.c ****         max_home_dist = -max_home_dist;
 1363              		.loc 1 293 9 is_stmt 1 view .LVU335
 1364              		.loc 1 293 23 is_stmt 0 view .LVU336
 1365 005c 00F10047 		add	r7, r0, #-2147483648
 1366              	.LVL200:
 1367              	.L84:
 294:../../motion_control.c ****     }
 295:../../motion_control.c ****     planner_resync_position();
 1368              		.loc 1 295 5 is_stmt 1 view .LVU337
 1369 0060 FFF7FEFF 		bl	planner_resync_position
 1370              	.LVL201:
 296:../../motion_control.c ****     planner_get_position(target);
 1371              		.loc 1 296 5 view .LVU338
 1372 0064 0BA8     		add	r0, sp, #44
 1373 0066 FFF7FEFF 		bl	planner_get_position
 1374              	.LVL202:
 297:../../motion_control.c ****     target[axis] += max_home_dist;
 1375              		.loc 1 297 5 view .LVU339
 1376              		.loc 1 297 18 is_stmt 0 view .LVU340
 1377 006a 0EAB     		add	r3, sp, #56
 1378 006c 03EB8408 		add	r8, r3, r4, lsl #2
 1379 0070 3946     		mov	r1, r7
 1380 0072 58F80C0C 		ldr	r0, [r8, #-12]	@ float
 1381 0076 FFF7FEFF 		bl	__aeabi_fadd
 1382              	.LVL203:
 1383 007a 48F80C0C 		str	r0, [r8, #-12]	@ float
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 32


 298:../../motion_control.c ****     //initializes planner block data
 299:../../motion_control.c ****     block_data.distance = ABS(max_home_dist);
 1384              		.loc 1 299 5 is_stmt 1 view .LVU341
 1385              		.loc 1 299 27 is_stmt 0 view .LVU342
 1386 007e 0021     		movs	r1, #0
 1387 0080 3846     		mov	r0, r7
 1388 0082 FFF7FEFF 		bl	__aeabi_fcmpgt
 1389              	.LVL204:
 1390 0086 0028     		cmp	r0, #0
 1391 0088 00F0B380 		beq	.L99
 1392 008c 3B46     		mov	r3, r7
 1393              	.L85:
 1394              		.loc 1 299 25 discriminator 4 view .LVU343
 1395 008e 0793     		str	r3, [sp, #28]	@ float
 300:../../motion_control.c ****     memset(&block_data.dir_vect,0, sizeof(block_data.dir_vect));
 1396              		.loc 1 300 5 is_stmt 1 discriminator 4 view .LVU344
 1397 0090 0DF11008 		add	r8, sp, #16
 1398 0094 4FF00009 		mov	r9, #0
 1399 0098 CDF81090 		str	r9, [sp, #16]
 1400 009c CDF81490 		str	r9, [sp, #20]
 1401 00a0 CDF81890 		str	r9, [sp, #24]
 301:../../motion_control.c ****     block_data.dir_vect[axis] = max_home_dist;
 1402              		.loc 1 301 5 discriminator 4 view .LVU345
 1403              		.loc 1 301 31 is_stmt 0 discriminator 4 view .LVU346
 1404 00a4 0EAB     		add	r3, sp, #56
 1405 00a6 03EB8403 		add	r3, r3, r4, lsl #2
 1406 00aa 43F8287C 		str	r7, [r3, #-40]	@ float
 302:../../motion_control.c ****     block_data.feed = g_settings.homing_fast_feed_rate * MIN_SEC_MULT;
 1407              		.loc 1 302 5 is_stmt 1 discriminator 4 view .LVU347
 1408              		.loc 1 302 33 is_stmt 0 discriminator 4 view .LVU348
 1409 00ae 594B     		ldr	r3, .L101
 1410 00b0 D869     		ldr	r0, [r3, #28]	@ float
 1411 00b2 FFF7FEFF 		bl	__aeabi_f2d
 1412              	.LVL205:
 1413              		.loc 1 302 56 discriminator 4 view .LVU349
 1414 00b6 4FF01132 		mov	r2, #286331153
 1415 00ba 574B     		ldr	r3, .L101+4
 1416 00bc FFF7FEFF 		bl	__aeabi_dmul
 1417              	.LVL206:
 1418 00c0 FFF7FEFF 		bl	__aeabi_d2f
 1419              	.LVL207:
 1420              		.loc 1 302 21 discriminator 4 view .LVU350
 1421 00c4 0890     		str	r0, [sp, #32]	@ float
 303:../../motion_control.c ****     block_data.spindle = 0;
 1422              		.loc 1 303 5 is_stmt 1 discriminator 4 view .LVU351
 1423              		.loc 1 303 24 is_stmt 0 discriminator 4 view .LVU352
 1424 00c6 ADF82490 		strh	r9, [sp, #36]	@ movhi
 304:../../motion_control.c ****     block_data.dwell = 0;
 1425              		.loc 1 304 5 is_stmt 1 discriminator 4 view .LVU353
 1426              		.loc 1 304 22 is_stmt 0 discriminator 4 view .LVU354
 1427 00ca ADF82690 		strh	r9, [sp, #38]	@ movhi
 305:../../motion_control.c ****     block_data.motion_mode = PLANNER_MOTION_MODE_FEED;
 1428              		.loc 1 305 5 is_stmt 1 discriminator 4 view .LVU355
 1429              		.loc 1 305 28 is_stmt 0 discriminator 4 view .LVU356
 1430 00ce 0223     		movs	r3, #2
 1431 00d0 8DF82830 		strb	r3, [sp, #40]
 306:../../motion_control.c ****     cnc_unlock();
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 33


 1432              		.loc 1 306 5 is_stmt 1 discriminator 4 view .LVU357
 1433 00d4 FFF7FEFF 		bl	cnc_unlock
 1434              	.LVL208:
 307:../../motion_control.c ****     planner_add_line((float *)&target, block_data);
 1435              		.loc 1 307 5 discriminator 4 view .LVU358
 1436 00d8 07AB     		add	r3, sp, #28
 1437 00da 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1438 00dc 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 1439 00e0 98E80E00 		ldm	r8, {r1, r2, r3}
 1440 00e4 0BA8     		add	r0, sp, #44
 1441 00e6 FFF7FEFF 		bl	planner_add_line
 1442              	.LVL209:
 308:../../motion_control.c ****     //flags homing clear by the unlock
 309:../../motion_control.c ****     cnc_set_exec_state(EXEC_HOMING);
 1443              		.loc 1 309 5 discriminator 4 view .LVU359
 1444 00ea 0820     		movs	r0, #8
 1445 00ec FFF7FEFF 		bl	cnc_set_exec_state
 1446              	.LVL210:
 1447              	.L86:
 310:../../motion_control.c ****     do
 1448              		.loc 1 310 5 view .LVU360
 311:../../motion_control.c ****     {
 312:../../motion_control.c ****         if(!cnc_doevents())
 1449              		.loc 1 312 9 view .LVU361
 1450              		.loc 1 312 13 is_stmt 0 view .LVU362
 1451 00f0 FFF7FEFF 		bl	cnc_doevents
 1452              	.LVL211:
 1453              		.loc 1 312 11 view .LVU363
 1454 00f4 0028     		cmp	r0, #0
 1455 00f6 00F08280 		beq	.L91
 313:../../motion_control.c ****         {
 314:../../motion_control.c ****             return STATUS_CRITICAL_FAIL;
 315:../../motion_control.c ****         }
 316:../../motion_control.c ****     }
 317:../../motion_control.c ****     while (cnc_get_exec_state(EXEC_RUN));
 1456              		.loc 1 317 11 is_stmt 1 view .LVU364
 1457              		.loc 1 317 12 is_stmt 0 view .LVU365
 1458 00fa 0120     		movs	r0, #1
 1459 00fc FFF7FEFF 		bl	cnc_get_exec_state
 1460              	.LVL212:
 1461              		.loc 1 317 5 view .LVU366
 1462 0100 0028     		cmp	r0, #0
 1463 0102 F5D1     		bne	.L86
 318:../../motion_control.c **** 
 319:../../motion_control.c ****     //flushes buffers
 320:../../motion_control.c ****     itp_stop();
 1464              		.loc 1 320 5 is_stmt 1 view .LVU367
 1465 0104 FFF7FEFF 		bl	itp_stop
 1466              	.LVL213:
 321:../../motion_control.c ****     itp_clear();
 1467              		.loc 1 321 5 view .LVU368
 1468 0108 FFF7FEFF 		bl	itp_clear
 1469              	.LVL214:
 322:../../motion_control.c ****     planner_clear();
 1470              		.loc 1 322 5 view .LVU369
 1471 010c FFF7FEFF 		bl	planner_clear
 1472              	.LVL215:
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 34


 323:../../motion_control.c **** 
 324:../../motion_control.c ****     if(cnc_get_exec_state(EXEC_ABORT))
 1473              		.loc 1 324 5 view .LVU370
 1474              		.loc 1 324 8 is_stmt 0 view .LVU371
 1475 0110 8020     		movs	r0, #128
 1476 0112 FFF7FEFF 		bl	cnc_get_exec_state
 1477              	.LVL216:
 1478              		.loc 1 324 7 view .LVU372
 1479 0116 0028     		cmp	r0, #0
 1480 0118 73D1     		bne	.L92
 325:../../motion_control.c ****     {
 326:../../motion_control.c ****         return EXEC_ALARM_HOMING_FAIL_RESET;
 327:../../motion_control.c ****     }
 328:../../motion_control.c **** 
 329:../../motion_control.c ****     limits_flags = io_get_limits();
 1481              		.loc 1 329 5 is_stmt 1 view .LVU373
 1482              		.loc 1 329 20 is_stmt 0 view .LVU374
 1483 011a FFF7FEFF 		bl	io_get_limits
 1484              	.LVL217:
 330:../../motion_control.c **** 
 331:../../motion_control.c ****     //the wrong switch was activated bails
 332:../../motion_control.c ****     if (!CHECKFLAG(limits_flags, axis_limit))
 1485              		.loc 1 332 5 is_stmt 1 view .LVU375
 1486              		.loc 1 332 8 is_stmt 0 view .LVU376
 1487 011e 0642     		tst	r6, r0
 1488 0120 71D0     		beq	.L93
 333:../../motion_control.c ****     {
 334:../../motion_control.c ****         return EXEC_ALARM_HOMING_FAIL_APPROACH;
 335:../../motion_control.c ****     }
 336:../../motion_control.c **** 
 337:../../motion_control.c ****     //back off from switch at lower speed
 338:../../motion_control.c ****     max_home_dist = g_settings.homing_offset * 5.0f;
 1489              		.loc 1 338 5 is_stmt 1 view .LVU377
 1490              		.loc 1 338 31 is_stmt 0 view .LVU378
 1491 0122 DFF8F080 		ldr	r8, .L101
 1492              		.loc 1 338 19 view .LVU379
 1493 0126 3D49     		ldr	r1, .L101+8
 1494 0128 D8F82400 		ldr	r0, [r8, #36]	@ float
 1495              	.LVL218:
 1496              		.loc 1 338 19 view .LVU380
 1497 012c FFF7FEFF 		bl	__aeabi_fmul
 1498              	.LVL219:
 1499 0130 0746     		mov	r7, r0
 1500              	.LVL220:
 339:../../motion_control.c **** 
 340:../../motion_control.c ****     //sync's the planner
 341:../../motion_control.c ****     planner_resync_position();
 1501              		.loc 1 341 5 is_stmt 1 view .LVU381
 1502 0132 FFF7FEFF 		bl	planner_resync_position
 1503              	.LVL221:
 342:../../motion_control.c ****     planner_get_position(target);
 1504              		.loc 1 342 5 view .LVU382
 1505 0136 0BA8     		add	r0, sp, #44
 1506 0138 FFF7FEFF 		bl	planner_get_position
 1507              	.LVL222:
 343:../../motion_control.c ****     if (g_settings.homing_dir_invert_mask & axis_mask)
 1508              		.loc 1 343 5 view .LVU383
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 35


 1509              		.loc 1 343 19 is_stmt 0 view .LVU384
 1510 013c 98F81830 		ldrb	r3, [r8, #24]	@ zero_extendqisi2
 1511              		.loc 1 343 8 view .LVU385
 1512 0140 2B42     		tst	r3, r5
 1513 0142 01D0     		beq	.L87
 344:../../motion_control.c ****     {
 345:../../motion_control.c ****         max_home_dist = -max_home_dist;
 1514              		.loc 1 345 9 is_stmt 1 view .LVU386
 1515              		.loc 1 345 23 is_stmt 0 view .LVU387
 1516 0144 07F10047 		add	r7, r7, #-2147483648
 1517              	.LVL223:
 1518              	.L87:
 346:../../motion_control.c ****     }
 347:../../motion_control.c **** 
 348:../../motion_control.c ****     target[axis] += max_home_dist;
 1519              		.loc 1 348 5 is_stmt 1 view .LVU388
 1520              		.loc 1 348 18 is_stmt 0 view .LVU389
 1521 0148 0EAB     		add	r3, sp, #56
 1522 014a 03EB8405 		add	r5, r3, r4, lsl #2
 1523              	.LVL224:
 1524              		.loc 1 348 18 view .LVU390
 1525 014e 3946     		mov	r1, r7
 1526 0150 55F80C0C 		ldr	r0, [r5, #-12]	@ float
 1527 0154 FFF7FEFF 		bl	__aeabi_fadd
 1528              	.LVL225:
 1529 0158 45F80C0C 		str	r0, [r5, #-12]	@ float
 349:../../motion_control.c ****     block_data.feed = g_settings.homing_slow_feed_rate * MIN_SEC_MULT;
 1530              		.loc 1 349 5 is_stmt 1 view .LVU391
 1531              		.loc 1 349 33 is_stmt 0 view .LVU392
 1532 015c 2D4B     		ldr	r3, .L101
 1533 015e 186A     		ldr	r0, [r3, #32]	@ float
 1534 0160 FFF7FEFF 		bl	__aeabi_f2d
 1535              	.LVL226:
 1536              		.loc 1 349 56 view .LVU393
 1537 0164 4FF01132 		mov	r2, #286331153
 1538 0168 2B4B     		ldr	r3, .L101+4
 1539 016a FFF7FEFF 		bl	__aeabi_dmul
 1540              	.LVL227:
 1541 016e FFF7FEFF 		bl	__aeabi_d2f
 1542              	.LVL228:
 1543              		.loc 1 349 21 view .LVU394
 1544 0172 0890     		str	r0, [sp, #32]	@ float
 350:../../motion_control.c ****     block_data.distance = ABS(max_home_dist);
 1545              		.loc 1 350 5 is_stmt 1 view .LVU395
 1546              		.loc 1 350 27 is_stmt 0 view .LVU396
 1547 0174 0021     		movs	r1, #0
 1548 0176 3846     		mov	r0, r7
 1549 0178 FFF7FEFF 		bl	__aeabi_fcmpgt
 1550              	.LVL229:
 1551 017c 0028     		cmp	r0, #0
 1552 017e 3BD0     		beq	.L100
 1553 0180 3B46     		mov	r3, r7
 1554              	.L88:
 1555              		.loc 1 350 25 discriminator 4 view .LVU397
 1556 0182 0793     		str	r3, [sp, #28]	@ float
 351:../../motion_control.c ****     block_data.dir_vect[axis] = max_home_dist;
 1557              		.loc 1 351 5 is_stmt 1 discriminator 4 view .LVU398
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 36


 1558              		.loc 1 351 31 is_stmt 0 discriminator 4 view .LVU399
 1559 0184 0EAB     		add	r3, sp, #56
 1560 0186 03EB8404 		add	r4, r3, r4, lsl #2
 1561              	.LVL230:
 1562              		.loc 1 351 31 discriminator 4 view .LVU400
 1563 018a 44F8287C 		str	r7, [r4, #-40]	@ float
 352:../../motion_control.c ****     //unlocks the machine for next motion (this will clear the EXEC_LIMITS flag
 353:../../motion_control.c ****     //temporary inverts the limit mask to trigger ISR on switch release
 354:../../motion_control.c ****     g_settings.limits_invert_mask ^= axis_limit;
 1564              		.loc 1 354 5 is_stmt 1 discriminator 4 view .LVU401
 1565              		.loc 1 354 35 is_stmt 0 discriminator 4 view .LVU402
 1566 018e 214A     		ldr	r2, .L101
 1567 0190 537A     		ldrb	r3, [r2, #9]	@ zero_extendqisi2
 1568 0192 7340     		eors	r3, r3, r6
 1569 0194 5372     		strb	r3, [r2, #9]
 355:../../motion_control.c ****     //io_set_homing_limits_filter(LIMITS_DUAL_MASK);//if axis pin goes off triggers
 356:../../motion_control.c ****     cnc_unlock();
 1570              		.loc 1 356 5 is_stmt 1 discriminator 4 view .LVU403
 1571 0196 FFF7FEFF 		bl	cnc_unlock
 1572              	.LVL231:
 357:../../motion_control.c ****     planner_add_line((float *)&target, block_data);
 1573              		.loc 1 357 5 discriminator 4 view .LVU404
 1574 019a 07AB     		add	r3, sp, #28
 1575 019c 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1576 019e 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 1577 01a2 04AB     		add	r3, sp, #16
 1578 01a4 0ECB     		ldm	r3, {r1, r2, r3}
 1579 01a6 0BA8     		add	r0, sp, #44
 1580 01a8 FFF7FEFF 		bl	planner_add_line
 1581              	.LVL232:
 358:../../motion_control.c ****     //flags homing clear by the unlock
 359:../../motion_control.c ****     cnc_set_exec_state(EXEC_HOMING);
 1582              		.loc 1 359 5 discriminator 4 view .LVU405
 1583 01ac 0820     		movs	r0, #8
 1584 01ae FFF7FEFF 		bl	cnc_set_exec_state
 1585              	.LVL233:
 1586              	.L89:
 360:../../motion_control.c ****     do
 1587              		.loc 1 360 5 view .LVU406
 361:../../motion_control.c ****     {
 362:../../motion_control.c ****         if(!cnc_doevents())
 1588              		.loc 1 362 9 view .LVU407
 1589              		.loc 1 362 13 is_stmt 0 view .LVU408
 1590 01b2 FFF7FEFF 		bl	cnc_doevents
 1591              	.LVL234:
 1592              		.loc 1 362 11 view .LVU409
 1593 01b6 40B3     		cbz	r0, .L95
 363:../../motion_control.c ****         {
 364:../../motion_control.c ****             return STATUS_CRITICAL_FAIL;
 365:../../motion_control.c ****         }
 366:../../motion_control.c ****     }
 367:../../motion_control.c ****     while (cnc_get_exec_state(EXEC_RUN));
 1594              		.loc 1 367 11 is_stmt 1 view .LVU410
 1595              		.loc 1 367 12 is_stmt 0 view .LVU411
 1596 01b8 0120     		movs	r0, #1
 1597              		.loc 1 367 12 view .LVU412
 1598 01ba FFF7FEFF 		bl	cnc_get_exec_state
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 37


 1599              	.LVL235:
 1600              		.loc 1 367 5 view .LVU413
 1601 01be 0028     		cmp	r0, #0
 1602 01c0 F7D1     		bne	.L89
 368:../../motion_control.c **** 
 369:../../motion_control.c ****     //resets limit mask
 370:../../motion_control.c ****     g_settings.limits_invert_mask ^= axis_limit;
 1603              		.loc 1 370 5 is_stmt 1 view .LVU414
 1604              		.loc 1 370 35 is_stmt 0 view .LVU415
 1605 01c2 144A     		ldr	r2, .L101
 1606 01c4 537A     		ldrb	r3, [r2, #9]	@ zero_extendqisi2
 1607 01c6 7340     		eors	r3, r3, r6
 1608 01c8 5372     		strb	r3, [r2, #9]
 371:../../motion_control.c ****     //stops, flushes buffers and clears the hold if active
 372:../../motion_control.c ****     cnc_stop();
 1609              		.loc 1 372 5 is_stmt 1 view .LVU416
 1610 01ca FFF7FEFF 		bl	cnc_stop
 1611              	.LVL236:
 373:../../motion_control.c ****     //clearing the interpolator unlockes any locked stepper
 374:../../motion_control.c ****     itp_clear();
 1612              		.loc 1 374 5 view .LVU417
 1613 01ce FFF7FEFF 		bl	itp_clear
 1614              	.LVL237:
 375:../../motion_control.c ****     planner_clear();
 1615              		.loc 1 375 5 view .LVU418
 1616 01d2 FFF7FEFF 		bl	planner_clear
 1617              	.LVL238:
 376:../../motion_control.c **** 
 377:../../motion_control.c ****     if(cnc_get_exec_state(EXEC_ABORT))
 1618              		.loc 1 377 5 view .LVU419
 1619              		.loc 1 377 8 is_stmt 0 view .LVU420
 1620 01d6 8020     		movs	r0, #128
 1621 01d8 FFF7FEFF 		bl	cnc_get_exec_state
 1622              	.LVL239:
 1623              		.loc 1 377 7 view .LVU421
 1624 01dc B8B9     		cbnz	r0, .L96
 378:../../motion_control.c ****     {
 379:../../motion_control.c ****         return EXEC_ALARM_HOMING_FAIL_RESET;
 380:../../motion_control.c ****     }
 381:../../motion_control.c **** 
 382:../../motion_control.c ****     limits_flags = io_get_limits();
 1625              		.loc 1 382 5 is_stmt 1 view .LVU422
 1626              		.loc 1 382 20 is_stmt 0 view .LVU423
 1627 01de FFF7FEFF 		bl	io_get_limits
 1628              	.LVL240:
 383:../../motion_control.c **** 
 384:../../motion_control.c ****     if (CHECKFLAG(limits_flags, axis_limit))
 1629              		.loc 1 384 5 is_stmt 1 view .LVU424
 1630              		.loc 1 384 8 is_stmt 0 view .LVU425
 1631 01e2 3040     		ands	r0, r6, r0
 1632              	.LVL241:
 1633              		.loc 1 384 8 view .LVU426
 1634 01e4 02D0     		beq	.L83
 385:../../motion_control.c ****     {
 386:../../motion_control.c ****         return EXEC_ALARM_HOMING_FAIL_APPROACH;
 1635              		.loc 1 386 16 view .LVU427
 1636 01e6 0920     		movs	r0, #9
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 38


 1637 01e8 00E0     		b	.L83
 1638              	.LVL242:
 1639              	.L81:
 282:../../motion_control.c ****     }
 1640              		.loc 1 282 9 is_stmt 1 view .LVU428
 282:../../motion_control.c ****     }
 1641              		.loc 1 282 16 is_stmt 0 view .LVU429
 1642 01ea 0B20     		movs	r0, #11
 1643              	.LVL243:
 1644              	.L83:
 387:../../motion_control.c ****     }
 388:../../motion_control.c **** 
 389:../../motion_control.c ****     return STATUS_OK;
 390:../../motion_control.c **** }
 1645              		.loc 1 390 1 view .LVU430
 1646 01ec 0FB0     		add	sp, sp, #60
 1647              	.LCFI17:
 1648              		.cfi_remember_state
 1649              		.cfi_def_cfa_offset 28
 1650              		@ sp needed
 1651 01ee BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1652              	.LVL244:
 1653              	.L99:
 1654              	.LCFI18:
 1655              		.cfi_restore_state
 299:../../motion_control.c ****     memset(&block_data.dir_vect,0, sizeof(block_data.dir_vect));
 1656              		.loc 1 299 27 discriminator 2 view .LVU431
 1657 01f2 07F10043 		add	r3, r7, #-2147483648
 1658 01f6 4AE7     		b	.L85
 1659              	.LVL245:
 1660              	.L100:
 350:../../motion_control.c ****     block_data.dir_vect[axis] = max_home_dist;
 1661              		.loc 1 350 27 discriminator 2 view .LVU432
 1662 01f8 07F10043 		add	r3, r7, #-2147483648
 1663 01fc C1E7     		b	.L88
 1664              	.LVL246:
 1665              	.L91:
 314:../../motion_control.c ****         }
 1666              		.loc 1 314 20 view .LVU433
 1667 01fe FF20     		movs	r0, #255
 1668 0200 F4E7     		b	.L83
 1669              	.L92:
 326:../../motion_control.c ****     }
 1670              		.loc 1 326 16 view .LVU434
 1671 0202 0620     		movs	r0, #6
 1672 0204 F2E7     		b	.L83
 1673              	.LVL247:
 1674              	.L93:
 334:../../motion_control.c ****     }
 1675              		.loc 1 334 16 view .LVU435
 1676 0206 0920     		movs	r0, #9
 1677              	.LVL248:
 334:../../motion_control.c ****     }
 1678              		.loc 1 334 16 view .LVU436
 1679 0208 F0E7     		b	.L83
 1680              	.LVL249:
 1681              	.L95:
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 39


 364:../../motion_control.c ****         }
 1682              		.loc 1 364 20 view .LVU437
 1683 020a FF20     		movs	r0, #255
 1684 020c EEE7     		b	.L83
 1685              	.L96:
 379:../../motion_control.c ****     }
 1686              		.loc 1 379 16 view .LVU438
 1687 020e 0620     		movs	r0, #6
 1688 0210 ECE7     		b	.L83
 1689              	.L102:
 1690 0212 00BF     		.align	2
 1691              	.L101:
 1692 0214 00000000 		.word	g_settings
 1693 0218 1111913F 		.word	1066471697
 1694 021c 0000A040 		.word	1084227584
 1695              		.cfi_endproc
 1696              	.LFE71:
 1698              		.section	.text.mc_spindle_coolant,"ax",%progbits
 1699              		.align	1
 1700              		.global	mc_spindle_coolant
 1701              		.syntax unified
 1702              		.thumb
 1703              		.thumb_func
 1704              		.fpu softvfp
 1706              	mc_spindle_coolant:
 1707              	.LFB72:
 391:../../motion_control.c **** 
 392:../../motion_control.c **** uint8_t mc_spindle_coolant(planner_block_data_t block_data)
 393:../../motion_control.c **** {
 1708              		.loc 1 393 1 is_stmt 1 view -0
 1709              		.cfi_startproc
 1710              		@ args = 28, pretend = 16, frame = 0
 1711              		@ frame_needed = 0, uses_anonymous_args = 0
 1712 0000 84B0     		sub	sp, sp, #16
 1713              	.LCFI19:
 1714              		.cfi_def_cfa_offset 16
 1715 0002 00B5     		push	{lr}
 1716              	.LCFI20:
 1717              		.cfi_def_cfa_offset 20
 1718              		.cfi_offset 14, -20
 1719 0004 85B0     		sub	sp, sp, #20
 1720              	.LCFI21:
 1721              		.cfi_def_cfa_offset 40
 1722 0006 0DF1180C 		add	ip, sp, #24
 1723 000a 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 394:../../motion_control.c ****     if (mc_checkmode) // check mode (gcode simulation) doesn't send code to planner
 1724              		.loc 1 394 5 view .LVU440
 1725              		.loc 1 394 9 is_stmt 0 view .LVU441
 1726 000e 104B     		ldr	r3, .L112
 1727 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1728              		.loc 1 394 8 view .LVU442
 1729 0012 B3B9     		cbnz	r3, .L110
 1730              	.L105:
 395:../../motion_control.c ****     {
 396:../../motion_control.c ****         return STATUS_OK;
 397:../../motion_control.c ****     }
 398:../../motion_control.c **** 
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 40


 399:../../motion_control.c ****     while (planner_buffer_is_full())
 1731              		.loc 1 399 11 is_stmt 1 view .LVU443
 1732              		.loc 1 399 12 is_stmt 0 view .LVU444
 1733 0014 FFF7FEFF 		bl	planner_buffer_is_full
 1734              	.LVL250:
 1735              		.loc 1 399 11 view .LVU445
 1736 0018 28B1     		cbz	r0, .L111
 400:../../motion_control.c ****     {
 401:../../motion_control.c ****         if(!cnc_doevents())
 1737              		.loc 1 401 9 is_stmt 1 view .LVU446
 1738              		.loc 1 401 13 is_stmt 0 view .LVU447
 1739 001a FFF7FEFF 		bl	cnc_doevents
 1740              	.LVL251:
 1741              		.loc 1 401 11 view .LVU448
 1742 001e 0028     		cmp	r0, #0
 1743 0020 F8D1     		bne	.L105
 402:../../motion_control.c ****         {
 403:../../motion_control.c ****             return STATUS_CRITICAL_FAIL;
 1744              		.loc 1 403 20 view .LVU449
 1745 0022 FF20     		movs	r0, #255
 1746 0024 0EE0     		b	.L104
 1747              	.L111:
 404:../../motion_control.c ****         }
 405:../../motion_control.c ****     }
 406:../../motion_control.c **** 
 407:../../motion_control.c ****     block_data.motion_mode = PLANNER_MOTION_MODE_NOMOTION;
 1748              		.loc 1 407 5 is_stmt 1 view .LVU450
 1749              		.loc 1 407 28 is_stmt 0 view .LVU451
 1750 0026 0123     		movs	r3, #1
 1751 0028 8DF83030 		strb	r3, [sp, #48]
 408:../../motion_control.c ****     planner_add_line(NULL, block_data);
 1752              		.loc 1 408 5 is_stmt 1 view .LVU452
 1753 002c 09AB     		add	r3, sp, #36
 1754 002e 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1755 0030 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 1756 0034 06AB     		add	r3, sp, #24
 1757 0036 0ECB     		ldm	r3, {r1, r2, r3}
 1758 0038 0020     		movs	r0, #0
 1759 003a FFF7FEFF 		bl	planner_add_line
 1760              	.LVL252:
 409:../../motion_control.c ****     return STATUS_OK;
 1761              		.loc 1 409 5 view .LVU453
 1762              		.loc 1 409 12 is_stmt 0 view .LVU454
 1763 003e 0020     		movs	r0, #0
 1764 0040 00E0     		b	.L104
 1765              	.L110:
 396:../../motion_control.c ****     }
 1766              		.loc 1 396 16 view .LVU455
 1767 0042 0020     		movs	r0, #0
 1768              	.L104:
 410:../../motion_control.c **** }
 1769              		.loc 1 410 1 view .LVU456
 1770 0044 05B0     		add	sp, sp, #20
 1771              	.LCFI22:
 1772              		.cfi_def_cfa_offset 20
 1773              		@ sp needed
 1774 0046 5DF804EB 		ldr	lr, [sp], #4
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 41


 1775              	.LCFI23:
 1776              		.cfi_restore 14
 1777              		.cfi_def_cfa_offset 16
 1778 004a 04B0     		add	sp, sp, #16
 1779              	.LCFI24:
 1780              		.cfi_def_cfa_offset 0
 1781 004c 7047     		bx	lr
 1782              	.L113:
 1783 004e 00BF     		.align	2
 1784              	.L112:
 1785 0050 00000000 		.word	.LANCHOR0
 1786              		.cfi_endproc
 1787              	.LFE72:
 1789              		.section	.text.mc_probe,"ax",%progbits
 1790              		.align	1
 1791              		.global	mc_probe
 1792              		.syntax unified
 1793              		.thumb
 1794              		.thumb_func
 1795              		.fpu softvfp
 1797              	mc_probe:
 1798              	.LVL253:
 1799              	.LFB73:
 411:../../motion_control.c **** 
 412:../../motion_control.c **** uint8_t mc_probe(float *target, bool invert_probe, planner_block_data_t block_data)
 413:../../motion_control.c **** {
 1800              		.loc 1 413 1 is_stmt 1 view -0
 1801              		.cfi_startproc
 1802              		@ args = 28, pretend = 8, frame = 0
 1803              		@ frame_needed = 0, uses_anonymous_args = 0
 1804              		.loc 1 413 1 is_stmt 0 view .LVU458
 1805 0000 82B0     		sub	sp, sp, #8
 1806              	.LCFI25:
 1807              		.cfi_def_cfa_offset 8
 1808 0002 70B5     		push	{r4, r5, r6, lr}
 1809              	.LCFI26:
 1810              		.cfi_def_cfa_offset 24
 1811              		.cfi_offset 4, -24
 1812              		.cfi_offset 5, -20
 1813              		.cfi_offset 6, -16
 1814              		.cfi_offset 14, -12
 1815 0004 84B0     		sub	sp, sp, #16
 1816              	.LCFI27:
 1817              		.cfi_def_cfa_offset 40
 1818 0006 0446     		mov	r4, r0
 1819 0008 0E46     		mov	r6, r1
 1820 000a 08A9     		add	r1, sp, #32
 1821              	.LVL254:
 1822              		.loc 1 413 1 view .LVU459
 1823 000c 81E80C00 		stm	r1, {r2, r3}
 414:../../motion_control.c ****     #ifdef PROBE
 415:../../motion_control.c ****     uint8_t prev_state = cnc_get_exec_state(EXEC_HOLD);
 1824              		.loc 1 415 5 is_stmt 1 view .LVU460
 1825              		.loc 1 415 26 is_stmt 0 view .LVU461
 1826 0010 0220     		movs	r0, #2
 1827              	.LVL255:
 1828              		.loc 1 415 26 view .LVU462
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 42


 1829 0012 FFF7FEFF 		bl	cnc_get_exec_state
 1830              	.LVL256:
 1831 0016 0546     		mov	r5, r0
 1832              	.LVL257:
 416:../../motion_control.c ****     io_enable_probe();
 1833              		.loc 1 416 5 is_stmt 1 view .LVU463
 1834 0018 FFF7FEFF 		bl	io_enable_probe
 1835              	.LVL258:
 417:../../motion_control.c **** 
 418:../../motion_control.c ****     mc_line(target, block_data);
 1836              		.loc 1 418 5 view .LVU464
 1837 001c 0BAB     		add	r3, sp, #44
 1838 001e 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1839 0020 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 1840 0024 08AB     		add	r3, sp, #32
 1841 0026 0ECB     		ldm	r3, {r1, r2, r3}
 1842 0028 2046     		mov	r0, r4
 1843 002a FFF7FEFF 		bl	mc_line
 1844              	.LVL259:
 1845              	.L116:
 419:../../motion_control.c **** 
 420:../../motion_control.c ****     do
 1846              		.loc 1 420 5 view .LVU465
 421:../../motion_control.c ****     {
 422:../../motion_control.c ****         if(!cnc_doevents())
 1847              		.loc 1 422 9 view .LVU466
 1848              		.loc 1 422 13 is_stmt 0 view .LVU467
 1849 002e FFF7FEFF 		bl	cnc_doevents
 1850              	.LVL260:
 1851              		.loc 1 422 11 view .LVU468
 1852 0032 F0B1     		cbz	r0, .L119
 423:../../motion_control.c ****         {
 424:../../motion_control.c ****             return STATUS_CRITICAL_FAIL;
 425:../../motion_control.c ****         }
 426:../../motion_control.c ****         #ifdef USE_INPUTS_POOLING_ONLY
 427:../../motion_control.c ****         if(io_get_probe())
 428:../../motion_control.c ****         {
 429:../../motion_control.c ****             io_probe_isr();
 430:../../motion_control.c ****             break;
 431:../../motion_control.c ****         }
 432:../../motion_control.c ****         #endif
 433:../../motion_control.c ****     } while (cnc_get_exec_state(EXEC_RUN));
 1853              		.loc 1 433 13 is_stmt 1 view .LVU469
 1854              		.loc 1 433 14 is_stmt 0 view .LVU470
 1855 0034 0120     		movs	r0, #1
 1856 0036 FFF7FEFF 		bl	cnc_get_exec_state
 1857              	.LVL261:
 1858              		.loc 1 433 5 view .LVU471
 1859 003a 0446     		mov	r4, r0
 1860 003c 0028     		cmp	r0, #0
 1861 003e F6D1     		bne	.L116
 434:../../motion_control.c **** 
 435:../../motion_control.c ****     io_disable_probe();
 1862              		.loc 1 435 5 is_stmt 1 view .LVU472
 1863 0040 FFF7FEFF 		bl	io_disable_probe
 1864              	.LVL262:
 436:../../motion_control.c ****     itp_stop();
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 43


 1865              		.loc 1 436 5 view .LVU473
 1866 0044 FFF7FEFF 		bl	itp_stop
 1867              	.LVL263:
 437:../../motion_control.c ****     itp_clear();
 1868              		.loc 1 437 5 view .LVU474
 1869 0048 FFF7FEFF 		bl	itp_clear
 1870              	.LVL264:
 438:../../motion_control.c ****     planner_clear();
 1871              		.loc 1 438 5 view .LVU475
 1872 004c FFF7FEFF 		bl	planner_clear
 1873              	.LVL265:
 439:../../motion_control.c ****     cnc_clear_exec_state(~prev_state & EXEC_HOLD); //restores HOLD previous state
 1874              		.loc 1 439 5 view .LVU476
 1875              		.loc 1 439 38 is_stmt 0 view .LVU477
 1876 0050 E843     		mvns	r0, r5
 1877              		.loc 1 439 5 view .LVU478
 1878 0052 00F00200 		and	r0, r0, #2
 1879 0056 FFF7FEFF 		bl	cnc_clear_exec_state
 1880              	.LVL266:
 440:../../motion_control.c ****     bool probe_notok = (!invert_probe) ? io_get_probe() : !io_get_probe();
 1881              		.loc 1 440 5 is_stmt 1 view .LVU479
 1882              		.loc 1 440 57 is_stmt 0 view .LVU480
 1883 005a 26B9     		cbnz	r6, .L117
 1884              		.loc 1 440 42 discriminator 1 view .LVU481
 1885 005c FFF7FEFF 		bl	io_get_probe
 1886              	.LVL267:
 1887              	.L118:
 441:../../motion_control.c ****     if(probe_notok)
 1888              		.loc 1 441 5 is_stmt 1 discriminator 4 view .LVU482
 1889              		.loc 1 441 7 is_stmt 0 discriminator 4 view .LVU483
 1890 0060 40B1     		cbz	r0, .L115
 442:../../motion_control.c ****     {
 443:../../motion_control.c ****         return EXEC_ALARM_PROBE_FAIL_CONTACT;
 1891              		.loc 1 443 16 view .LVU484
 1892 0062 0524     		movs	r4, #5
 1893 0064 06E0     		b	.L115
 1894              	.LVL268:
 1895              	.L117:
 440:../../motion_control.c ****     if(probe_notok)
 1896              		.loc 1 440 60 discriminator 2 view .LVU485
 1897 0066 FFF7FEFF 		bl	io_get_probe
 1898              	.LVL269:
 440:../../motion_control.c ****     if(probe_notok)
 1899              		.loc 1 440 5 discriminator 2 view .LVU486
 1900 006a 80F00100 		eor	r0, r0, #1
 1901 006e C0B2     		uxtb	r0, r0
 1902 0070 F6E7     		b	.L118
 1903              	.L119:
 424:../../motion_control.c ****         }
 1904              		.loc 1 424 20 view .LVU487
 1905 0072 FF24     		movs	r4, #255
 1906              	.L115:
 444:../../motion_control.c ****     }
 445:../../motion_control.c **** 
 446:../../motion_control.c ****     #endif
 447:../../motion_control.c **** 
 448:../../motion_control.c ****     return STATUS_OK;
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 44


 449:../../motion_control.c **** }
 1907              		.loc 1 449 1 view .LVU488
 1908 0074 2046     		mov	r0, r4
 1909 0076 04B0     		add	sp, sp, #16
 1910              	.LCFI28:
 1911              		.cfi_def_cfa_offset 24
 1912              		@ sp needed
 1913 0078 BDE87040 		pop	{r4, r5, r6, lr}
 1914              	.LCFI29:
 1915              		.cfi_restore 14
 1916              		.cfi_restore 6
 1917              		.cfi_restore 5
 1918              		.cfi_restore 4
 1919              		.cfi_def_cfa_offset 8
 1920              	.LVL270:
 1921              		.loc 1 449 1 view .LVU489
 1922 007c 02B0     		add	sp, sp, #8
 1923              	.LCFI30:
 1924              		.cfi_def_cfa_offset 0
 1925 007e 7047     		bx	lr
 1926              		.cfi_endproc
 1927              	.LFE73:
 1929              		.section	.bss.mc_checkmode,"aw",%nobits
 1930              		.set	.LANCHOR0,. + 0
 1933              	mc_checkmode:
 1934 0000 00       		.space	1
 1935              		.text
 1936              	.Letext0:
 1937              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-none
 1938              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1939              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1940              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1941              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1942              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1943              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 1944              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
 1945              		.file 10 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1946              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1947              		.file 12 "../../settings.h"
 1948              		.file 13 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 1949              		.file 14 "../../planner.h"
 1950              		.file 15 "../../cnc.h"
 1951              		.file 16 "../../io_control.h"
 1952              		.file 17 "../../interpolator.h"
 1953              		.file 18 "../../kinematics.h"
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 45


DEFINED SYMBOLS
                            *ABS*:00000000 motion_control.c
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:16     .text.mc_init:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:24     .text.mc_init:00000000 mc_init
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:38     .text.mc_get_checkmode:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:45     .text.mc_get_checkmode:00000000 mc_get_checkmode
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:60     .text.mc_get_checkmode:00000008 $d
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:65     .text.mc_toogle_checkmode:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:72     .text.mc_toogle_checkmode:00000000 mc_toogle_checkmode
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:91     .text.mc_toogle_checkmode:0000000c $d
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:101    .text.mc_line:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:108    .text.mc_line:00000000 mc_line
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:329    .text.mc_line:000000dc $d
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:346    .text.mc_arc:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:353    .text.mc_arc:00000000 mc_arc
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:994    .text.mc_arc:00000338 $d
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:1007   .text.mc_arc:00000354 $t
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:1184   .text.mc_dwell:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:1191   .text.mc_dwell:00000000 mc_dwell
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:1270   .text.mc_dwell:00000050 $d
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:1275   .text.mc_home_axis:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:1282   .text.mc_home_axis:00000000 mc_home_axis
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:1692   .text.mc_home_axis:00000214 $d
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:1699   .text.mc_spindle_coolant:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:1706   .text.mc_spindle_coolant:00000000 mc_spindle_coolant
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:1785   .text.mc_spindle_coolant:00000050 $d
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:1790   .text.mc_probe:00000000 $t
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:1797   .text.mc_probe:00000000 mc_probe
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:1933   .bss.mc_checkmode:00000000 mc_checkmode
C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s:1934   .bss.mc_checkmode:00000000 $d

UNDEFINED SYMBOLS
__aeabi_fsub
__aeabi_fcmpeq
__aeabi_fmul
__aeabi_fadd
__aeabi_fdiv
kinematics_apply_transform
io_check_boundaries
planner_buffer_is_full
cnc_doevents
cnc_get_exec_state
cnc_alarm
planner_add_line
planner_get_position
sqrtf
__aeabi_f2d
__aeabi_d2f
__aeabi_fcmpge
__aeabi_dsub
__aeabi_fcmple
__aeabi_dadd
__aeabi_dmul
__aeabi_ddiv
__aeabi_d2uiz
__aeabi_i2f
__aeabi_fcmpgt
ARM GAS  C:\Users\JCEM\AppData\Local\Temp\cceMVttn.s 			page 46


__aeabi_dcmple
kinematics_apply_reverse_transform
atan2
sqrt
floor
cos
g_settings
cnc_unlock
io_get_limits
io_set_homing_limits_filter
planner_resync_position
cnc_set_exec_state
itp_stop
itp_clear
planner_clear
cnc_stop
io_enable_probe
io_disable_probe
cnc_clear_exec_state
io_get_probe
