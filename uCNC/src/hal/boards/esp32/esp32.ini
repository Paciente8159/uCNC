################
# ESP32 Boards #
################

[generic_esp32]
platform = espressif32
framework = arduino
platform_packages = platformio/framework-arduinoespressif32@^3.20016.0
build_flags =
		${env.build_flags}
		-Wno-frame-address
		-ffunction-sections
		-fdata-sections
		-ggdb
		-Os
		-freorder-blocks
		-Wwrite-strings
		-fstack-protector
		-fstrict-volatile-bitfields
		-Wall
		-fno-jump-tables
		-fno-tree-switch-conversion
		-std=gnu++11
		-fexceptions
		-MMD
		-c
		-D CORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_NONE
board_build.partitions = min_spiffs.csv
monitor_filters=esp32_exception_decoder
upload_speed = 921600
board_build.filesystem = littlefs
lib_deps =
    ${env.lib_deps} 
		https://github.com/Links2004/arduinoWebSockets/archive/refs/heads/master.zip
		SPI
		Wire
		Wifi
		WebServer
		HTTPUpdatedServer
		Hash
		LittleFS
		EEPROM

[esp32_base]
extends = generic_esp32
board = esp32dev
build_flags = ${generic_esp32.build_flags} -mlongcalls -D ENABLE_WIFI -D ENABLE_BLUETOOTH -D MCU_FLASH_FS=1 -D USE_ARDUINO_SPI_LIBRARY -D USE_ARDUINO_EEPROM_LIBRARY
board_build.f_flash = 80000000L
board_build.f_cpu = 240000000L
lib_deps =
    ${generic_esp32.lib_deps} 
		BluetoothSerial

##################
# Arduino builds #
##################

[env:ESP32-Wemos-D1-R32]
extends = esp32_base
board = wemos_d1_uno32
build_flags = ${esp32_base.build_flags} -D BOARDMAP=\"src/hal/boards/esp32/boardmap_wemos_d1_r32.h\"

[env:ESP32-MKS-DLC32]
extends = esp32_base
build_flags = ${esp32_base.build_flags} -D BOARDMAP=\"src/hal/boards/esp32/boardmap_mks_dlc32.h\"

[env:ESP32-MKS-TINYBEE]
extends = esp32_base
build_flags = ${esp32_base.build_flags} -D BOARDMAP=\"src/hal/boards/esp32/boardmap_mks_tinybee.h\"

[env:ESP32-Shield-V3]
extends = esp32_base
build_flags = ${esp32_base.build_flags} -D BOARDMAP=\"src/hal/boards/esp32/boardmap_esp32_shield_v3.h\"

[env:ESP32-CUSTOM]
extends = esp32_base
build_flags = ${esp32_base.build_flags} -DMCU=MCU_CUSTOM
board = ${env.board}

[esp32s3_base]
extends = generic_esp32
board = esp32-s3-devkitc-1
build_unflags = -D ARDUINO_USB_MODE
build_flags = 
		${generic_esp32.build_flags}
		-D ENABLE_WIFI
		; -D ENABLE_BLUETOOTH
		-D MCU_FLASH_FS=1
		-D USE_ARDUINO_SPI_LIBRARY
		-D USE_ARDUINO_EEPROM_LIBRARY
		-D ARDUINO_USB_MODE=0
		-D ARDUINO_USB_CDC_ON_BOOT=1
		-D ESP32S3
board_build.f_flash = 80000000L
board_build.f_cpu = 240000000L
debug_tool = esp-builtin
; debug_init_break = break setup
; build_type = debug
; lib_deps =
;     ${generic_esp32.lib_deps} 
; 		BluetoothSerial

[env:ESP32-S3]
extends = esp32s3_base
board = esp32-s3-devkitm-1
build_type = debug
debug_tool = esp-builtin
build_flags = ${esp32s3_base.build_flags} -D BOARDMAP=\"src/hal/boards/esp32/boardmap_devkit_s3.h\"

[env:ESP32-S3-CUSTOM]
extends = esp32s3_base
build_flags = ${esp32s3_base.build_flags} -DMCU=MCU_CUSTOM
board = ${env.board}

[esp32c3_base]
extends = generic_esp32
board = airm2m_core_esp32c3
build_flags =
		${generic_esp32.build_flags}
		-D ESP32C3
		-D USE_ARDUINO_EEPROM_LIBRARY
		-D ENABLE_WIFI
		-D MCU_FLASH_FS=1
		-D USE_ARDUINO_SPI_LIBRARY
		-D USE_ARDUINO_EEPROM_LIBRARY
		-D ARDUINO_USB_CDC_ON_BOOT=1
board_build.f_flash = 80000000L
board_build.f_cpu = 160000000L

[env:ESP32-C3]
extends = esp32c3_base
board = airm2m_core_esp32c3
build_type = debug
debug_tool = esp-builtin
build_flags = ${esp32c3_base.build_flags} -D BOARDMAP=\"src/hal/boards/esp32/boardmap_core_c3.h\"

[env:ESP32-C3-CUSTOM]
extends = esp32c3_base
build_flags = ${esp32c3_base.build_flags} -DMCU=MCU_CUSTOM
board = ${env.board}

#################
# ESPIDF builds #
#################

; [env:ESP32IDF-Wemos-D1-R32]
; extends = esp32_base
; framework = arduino, espidf
; board = wemos_d1_uno32
; build_flags = ${esp32_base.build_flags} -DBOARD=BOARD_WEMOS_D1_R32
; lib_deps = ${esp32_base.lib_deps}
; 		SPIFFS

; [env:ESP32IDF-MKS-DLC32]
; extends = esp32_base
; framework = arduino, espidf
; build_flags = ${esp32_base.build_flags} -DBOARD=BOARD_MKS_DLC32
; lib_deps = ${esp32_base.lib_deps}
; 		SPIFFS

; [env:ESP32IDF-MKS-TINYBEE]
; extends = esp32_base
; framework = arduino, espidf
; build_flags = ${esp32_base.build_flags} -DBOARD=BOARD_MKS_TINYBEE
; lib_deps = ${esp32_base.lib_deps}
; 		SPIFFS

; [env:ESP32IDF-Shield-V3]
; extends = esp32_base
; framework = arduino, espidf
; build_flags = ${esp32_base.build_flags} -DBOARD=BOARD_ESP32_SHIELD_V3
; lib_deps = ${esp32_base.lib_deps}
; 		SPIFFS
