name: PlatformIO CI Builds

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Allow all machines to finish building
      matrix:
        boards: [LPC176X-RE-ARM, ESP32-MKS-DLC32, ESP8266-Wemos-D1-R2, AVR-UNO, ESP32-MKS-TINYBEE, STM32F0-Bluepill-F030C8, STM32F1-Bluepill-F103C8, AVR-RAMBO, RP2040-PICO-W-MULTICORE, SAMD21-Wemos-M0, STM32F4-Blackpill-F401CC, STM32F4-SKR-Pro-V1_2, RP2040-PICO, RP2350-PICO2, ESP32-Wemos-D1-R32, LPC176X-SKR-v1_4-TURBO, STM32F1-MKS-Robin-Nano-V1_2, AVR-MEGA2560-RAMPS-V1_4, LPC176X-MKS-BASE-V1_3, SAMD21-Arduino-Zero]

    steps:
    - uses: actions/checkout@v4
    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v4
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
    - name: Run PlatformIO
      run: pio run -e ${{matrix.boards}}
    - name: Zip binaries
      run: zip ${{matrix.boards}}.zip .pio/build/${{matrix.boards}}/firmware.*
    - name: Upload binaries
      uses: actions/upload-artifact@v4
      with:
          name: ${{matrix.boards}}
          path: ./${{matrix.boards}}.zip
    - name: Display structure of downloaded files
      run: ls -R
